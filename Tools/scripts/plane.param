ACRO_LOCKING,0
ACRO_PITCH_RATE,180
ACRO_ROLL_RATE,180
ACRO_YAW_RATE,0

# ADSB Type
# Type of ADS-B hardware for ADSB-in and ADSB-out configuration and operation. If any type is selected
# then MAVLink based ADSB-in messages will always be enabled
# RebootRequired: True
# 0: Disabled
# 1: uAvionix-MAVLink
# 2: Sagetech
# 3: uAvionix-UCP
# 4: Sagetech MX Series
ADSB_TYPE,0

# Enable Advanced Failsafe
# This enables the advanced failsafe system. If this is set to zero (disable) then all the other AFS
# options have no effect
AFS_ENABLE,0

# AHRS Velocity Complementary Filter Beta Coefficient
# This controls the time constant for the cross-over frequency used to fuse AHRS (airspeed and
# heading) and GPS data to estimate ground velocity. Time constant is 0.1/beta. A larger time constant
# will use GPS data less and a small time constant will use air data less.
# Range: 0.001 0.5
# Increment: .01
AHRS_COMP_BETA,0.1

# Use NavEKF Kalman filter for attitude and position estimation
# This controls which NavEKF Kalman filter version is used for attitude and position estimation
# 0: Disabled
# 2: Enable EKF2
# 3: Enable EKF3
# 11: ExternalAHRS
AHRS_EKF_TYPE,11

# AHRS GPS gain
# This controls how much to use the GPS to correct the attitude. This should never be set to zero for
# a plane as it would result in the plane losing control in turns. For a plane please use the default
# value of 1.0.
# Range: 0.0 1.0
# Increment: .01
AHRS_GPS_GAIN,1

# AHRS GPS Minimum satellites
# Minimum number of satellites visible to use GPS for velocity based corrections attitude correction.
# This defaults to 6, which is about the point at which the velocity numbers from a GPS become too
# unreliable for accurate correction of the accelerometers.
# Range: 0 10
# Increment: 1
AHRS_GPS_MINSATS,6

# AHRS use GPS for DCM navigation and position-down
# This controls whether to use dead-reckoning or GPS based navigation. If set to 0 then the GPS won't
# be used for navigation, and only dead reckoning will be used. A value of zero should never be used
# for normal flight. Currently this affects only the DCM-based AHRS: the EKF uses GPS according to its
# own parameters. A value of 2 means to use GPS for height as well as position - both in DCM
# estimation and when determining altitude-above-home.
# 0: Disabled
# 1: Use GPS for DCM position
# 2: Use GPS for DCM position and height
AHRS_GPS_USE,1

# Optional AHRS behaviour
# This controls optional AHRS behaviour. Setting DisableDCMFallbackFW will change the AHRS behaviour
# for fixed wing aircraft in fly-forward flight to not fall back to DCM when the EKF stops navigating.
# Setting DisableDCMFallbackVTOL will change the AHRS behaviour for fixed wing aircraft in non
# fly-forward (VTOL) flight to not fall back to DCM when the EKF stops navigating.
# Bitmask: 0:DisableDCMFallbackFW, 1:DisableDCMFallbackVTOL
AHRS_OPTIONS,0

# Board Orientation
# Overall board orientation relative to the standard orientation for the board type. This rotates the
# IMU and compass readings to allow the board to be oriented in your vehicle at any 90 or 45 degree
# angle. The label for each option is specified in the order of rotations for that orientation. This
# option takes affect on next boot. After changing you will need to re-level your vehicle. Firmware
# versions 4.2 and prior can use a CUSTOM (100) rotation to set the AHRS_CUSTOM_ROLL/PIT/YAW angles
# for AHRS orientation. Later versions provide two general custom rotations which can be used, Custom
# 1 and Custom 2, with CUST_ROT1_ROLL/PIT/YAW or CUST_ROT2_ROLL/PIT/YAW angles.
# 0: None                             16: Roll90                          32: Pitch180Roll270
# 1: Yaw45                            17: Yaw45Roll90                     33: Pitch270Roll90
# 2: Yaw90                            18: Yaw90Roll90                     34: Pitch270Roll180
# 3: Yaw135                           19: Yaw135Roll90                    35: Pitch270Roll270
# 4: Yaw180                           20: Roll270                         36: Yaw90Pitch180Roll90
# 5: Yaw225                           21: Yaw45Roll270                    37: Yaw270Roll90
# 6: Yaw270                           22: Yaw90Roll270                    38: Yaw293Pitch68Roll180
# 7: Yaw315                           23: Yaw135Roll270                   39: Pitch315
# 8: Roll180                          24: Pitch90                         40: Pitch315Roll90
# 9: Yaw45Roll180                     25: Pitch270                        42: Roll45
# 10: Yaw90Roll180                    26: Yaw90Pitch180                   43: Roll315
# 11: Yaw135Roll180                   27: Yaw270Pitch180                  100: Custom 4.1 and older
# 12: Pitch180                        28: Pitch90Roll90                   101: Custom 1
# 13: Yaw225Roll180                   29: Pitch90Roll180                  102: Custom 2
# 14: Yaw270Roll180                   30: Pitch90Roll270
# 15: Yaw315Roll180                   31: Pitch180Roll90
AHRS_ORIENTATION,0

# AHRS RP_P
# This controls how fast the accelerometers correct the attitude
# Range: 0.1 0.4
# Increment: .01
AHRS_RP_P,0.2

# AHRS Trim Roll
# Compensates for the roll angle difference between the control board and the frame. Positive values
# make the vehicle roll right.
# Units: rad (radians)
# Range: -0.1745 +0.1745
# Increment: 0.01
AHRS_TRIM_X,0

# AHRS Trim Pitch
# Compensates for the pitch angle difference between the control board and the frame. Positive values
# make the vehicle pitch up/back.
# Units: rad (radians)
# Range: -0.1745 +0.1745
# Increment: 0.01
AHRS_TRIM_Y,0

# AHRS Trim Yaw
# Not Used
# Units: rad (radians)
# Range: -0.1745 +0.1745
# Increment: 0.01
AHRS_TRIM_Z,0

# Maximum wind
# This sets the maximum allowable difference between ground speed and airspeed. A value of zero means
# to use the airspeed as is. This allows the plane to cope with a failing airspeed sensor by clipping
# it to groundspeed plus/minus this limit. See ARSPD_OPTIONS and ARSPD_WIND_MAX to disable airspeed
# sensors.
# Range: 0 127
# Units: m/s (meters per second)
# Increment: 1
AHRS_WIND_MAX,0

# Yaw P
# This controls the weight the compass or GPS has on the heading. A higher value means the heading
# will track the yaw source (GPS or compass) more rapidly.
# Range: 0.1 0.4
# Increment: .01
AHRS_YAW_P,0.2
AIRSPEED_CRUISE,12
AIRSPEED_MAX,22
AIRSPEED_MIN,9
ALT_OFFSET,0

# Accelerometer error threshold
# Accelerometer error threshold used to determine inconsistent accelerometers. Compares this error
# range to other accelerometers to detect a hardware or calibration error. Lower value means tighter
# check and harder to pass arming check. Not all accelerometers are created equal.
# Units: m/s/s (meters per square second)
# Range: 0.25 3.0
ARMING_ACCTHRESH,0.75

# Arm Checks to Perform (bitmask)
# Checks prior to arming motor. This is a bitmask of checks that will be performed before allowing
# arming. For most users it is recommended to leave this at the default of 1 (all checks enabled). You
# can select whatever checks you prefer by adding together the values of each check type to set this
# parameter. For example, to only allow arming when you have GPS lock and no RC failsafe you would set
# ARMING_CHECK to 72.
# Bitmask: 0:All,1:Barometer,2:Compass,3:GPS lock,4:INS,5:Parameters,6:RC Channels,7:Board voltage,8:Battery Level,9:Airspeed,10:Logging Available,11:Hardware safety switch,12:GPS Configuration,13:System,14:Mission,15:Rangefinder,16:Camera,17:AuxAuth,19:FFT
ARMING_CHECK,1

# Compass magnetic field strength error threshold vs earth magnetic model
# Compass magnetic field strength error threshold vs earth magnetic model.  X and y axis are compared
# using this threhold, Z axis uses 2x this threshold.  0 to disable check
# Units: mGauss (milligauss)
# Range: 0 500
ARMING_MAGTHRESH,100

# Required mission items
# Bitmask of mission items that are required to be planned in order to arm the aircraft
# Bitmask: 0:Land,1:VTOL Land,2:DO_LAND_START,3:Takeoff,4:VTOL Takeoff,5:Rallypoint,6:RTL
ARMING_MIS_ITEMS,0

# Arming options
# Options that can be applied to change arming behaviour
# Bitmask: 0:Disable prearm display,1:Do not send status text on state change
ARMING_OPTIONS,0

# Require Arming Motors 
# Arming disabled until some requirements are met. If 0, there are no requirements (arm immediately).
# If 1, sends the minimum throttle PWM value to the throttle channel when disarmed. If 2, send 0 PWM
# (no signal) to throttle channel when disarmed. On planes with ICE enabled and the throttle while
# disarmed option set in ICE_OPTIONS, the motor will always get THR_MIN when disarmed. Arming will
# occur using either rudder stick arming (if enabled) or GCS command when all mandatory and
# ARMING_CHECK items are satisfied. Note, when setting this parameter to 0, a reboot is required to
# immediately arm the plane.
# 0: Disabled
# 1: minimum PWM when disarmed
# 2: 0 PWM when disarmed
ARMING_REQUIRE,1

# Arming with Rudder enable/disable
# Allow arm/disarm by rudder input. When enabled arming can be done with right rudder, disarming with
# left rudder. Rudder arming only works with throttle at zero +- deadzone (RCx_DZ). Depending on
# vehicle type, arming in certain modes is prevented. See the wiki for each vehicle. Caution is
# recommended when arming if it is allowed in an auto-throttle mode!
# 0: Disabled
# 1: ArmingOnly
# 2: ArmOrDisarm
ARMING_RUDDER,1

# Automatic airspeed ratio calibration
# Enables automatic adjustment of airspeed ratio during a calibration flight based on estimation of
# ground speed and true airspeed. New ratio saved every 2 minutes if change is > 5%. Should not be
# left enabled.
ARSPD_AUTOCAL,0

# Airspeed I2C bus
# Bus number of the I2C bus where the airspeed sensor is connected. May not correspond to board's I2C
# bus number labels. Retry another bus and reboot if airspeed sensor fails to initialize.
# RebootRequired: True
# 0: Bus0
# 1: Bus1
# 2: Bus2
ARSPD_BUS,1

# Airspeed ID
# Airspeed sensor ID, taking into account its type, bus and instance
# ReadOnly: True
ARSPD_DEVID,0

# Maximum offset cal speed error 
# The maximum percentage speed change in airspeed reports that is allowed due to offset changes
# between calibrations before a warning is issued. This potential speed error is in percent of
# ASPD_FBW_MIN. 0 disables. Helps warn of calibrations without pitot being covered.
# Range: 0.0 10.0
# Units: % (percent)
ARSPD_OFF_PCNT,0

# Airspeed offset
# Airspeed calibration offset
# Increment: 0.1
ARSPD_OFFSET,2016.694

# Airspeed options bitmask
# Bitmask of options to use with airspeed. 0:Disable use based on airspeed/groundspeed mismatch (see
# ARSPD_WIND_MAX), 1:Automatically reenable use based on airspeed/groundspeed mismatch recovery (see
# ARSPD_WIND_MAX) 2:Disable voltage correction, 3:Check that the airspeed is statistically consistent
# with the navigation EKF vehicle and wind velocity estimates using EKF3 (requires AHRS_EKF_TYPE = 3)
# Bitmask: 0:SpeedMismatchDisable, 1:AllowSpeedMismatchRecovery, 2:DisableVoltageCorrection, 3:UseEkf3Consistency
ARSPD_OPTIONS,11

# Airspeed pin
# The pin number that the airspeed sensor is connected to for analog sensors. Set to 15 on the Pixhawk
# for the analog airspeed port.
ARSPD_PIN,1

# Primary airspeed sensor
# This selects which airspeed sensor will be the primary if multiple sensors are found
# 0: FirstSensor
# 1: 2ndSensor
ARSPD_PRIMARY,0

# The PSI range of the device
# This parameter allows you to set the PSI (pounds per square inch) range for your sensor. You should
# not change this unless you examine the datasheet for your device
ARSPD_PSI_RANGE,1

# Airspeed ratio
# Calibrates pitot tube pressure to velocity. Increasing this value will indicate a higher airspeed at
# any given dynamic pressure.
# Increment: 0.1
ARSPD_RATIO,2

# Skip airspeed offset calibration on startup
# This parameter allows you to skip airspeed offset calibration on startup, instead using the offset
# from the last calibration. This may be desirable if the offset variance between flights for your
# sensor is low and you want to avoid having to cover the pitot tube on each boot.
# 0: Disable
# 1: Enable
ARSPD_SKIP_CAL,0

# Control pitot tube order
# This parameter allows you to control whether the order in which the tubes are attached to your pitot
# tube matters. If you set this to 0 then the first (often the top) connector on the sensor needs to
# be the stagnation pressure (the pressure at the tip of the pitot tube). If set to 1 then the second
# (often the bottom) connector needs to be the stagnation pressure. If set to 2 (the default) then the
# airspeed driver will accept either order. The reason you may wish to specify the order is it will
# allow your airspeed sensor to detect if the aircraft is receiving excessive pressure on the static
# port compared to the stagnation port such as during a stall, which would otherwise be seen as a
# positive airspeed.
# 0: Normal
# 1: Swapped
# 2: Auto Detect
ARSPD_TUBE_ORDR,0

# Airspeed type
# Type of airspeed sensor
# 0: None                             6: I2C-SDP3X                        12: I2C-DLVR-60in
# 1: I2C-MS4525D0                     7: I2C-DLVR-5in                     13: NMEA water speed
# 2: Analog                           8: DroneCAN                         14: MSP
# 3: I2C-MS5525                       9: I2C-DLVR-10in                    15: ASP5033
# 4: I2C-MS5525 (0x76)                10: I2C-DLVR-20in                   16: ExternalAHRS
# 5: I2C-MS5525 (0x77)                11: I2C-DLVR-30in                   100: SITL
ARSPD_TYPE,16

# Airspeed use
# Enables airspeed use for automatic throttle modes and replaces control from THR_TRIM. Continues to
# display and log airspeed if set to 0. Uses airspeed for control if set to 1. Only uses airspeed when
# throttle = 0 if set to 2 (useful for gliders with airspeed sensors behind propellers).
# 0: DoNotUse
# 1: Use
# 2: UseWhenZeroThrottle
ARSPD_USE,1

# Re-enable Consistency Check Gate Size
# Number of standard deviations applied to the re-enable EKF consistency check that is used when
# ARSPD_OPTIONS bit position 3 is set. Larger values will make the re-enabling of the airspeed sensor
# faster, but increase the likelihood of re-enabling a degraded sensor. The value can be tuned by
# using the ARSP.TR log message by setting ARSPD_WIND_GATE to a value that is higher than the value
# for ARSP.TR observed with a healthy airspeed sensor. Occasional transients in ARSP.TR above the
# value set by ARSPD_WIND_GATE can be tolerated provided they are less than 5 seconds in duration and
# less than 10% duty cycle.
# Range: 0.0 10.0
ARSPD_WIND_GATE,5

# Maximum airspeed and ground speed difference
# If the difference between airspeed and ground speed is greater than this value the sensor will be
# marked unhealthy. Using ARSPD_OPTION this health value can be used to disable the sensor.
# Units: m/s (meters per second)
ARSPD_WIND_MAX,0

# Airspeed and GPS speed difference that gives a warning
# If the difference between airspeed and GPS speed is greater than this value the sensor will issue a
# warning. If 0 ARSPD_WIND_MAX is used.
# Units: m/s (meters per second)
ARSPD_WIND_WARN,0

# Airspeed type
# Type of airspeed sensor
# 0: None                             6: I2C-SDP3X                        12: I2C-DLVR-60in
# 1: I2C-MS4525D0                     7: I2C-DLVR-5in                     13: NMEA water speed
# 2: Analog                           8: DroneCAN                         14: MSP
# 3: I2C-MS5525                       9: I2C-DLVR-10in                    15: ASP5033
# 4: I2C-MS5525 (0x76)                10: I2C-DLVR-20in                   16: ExternalAHRS
# 5: I2C-MS5525 (0x77)                11: I2C-DLVR-30in                   100: SITL
ARSPD2_TYPE,0
AUTOTUNE_AXES,7
AUTOTUNE_LEVEL,6
AUTOTUNE_OPTIONS,0

# Enable Avoidance using ADSB
# Enable Avoidance using ADSB
# 0: Disabled
# 1: Enabled
AVD_ENABLE,0

# altitude offset
# altitude offset in meters added to barometric altitude. This is used to allow for automatic
# adjustment of the base barometric altitude by a ground station equipped with a barometer. The value
# is added to the barometric altitude read by the aircraft. It is automatically reset to 0 when the
# barometer is calibrated on each reboot or when a preflight calibration is performed.
# Units: m (meters)
# Increment: 0.1
BARO_ALT_OFFSET,0

# Altitude error maximum
# This is the maximum acceptable altitude discrepancy between GPS altitude and barometric presssure
# altitude calculated against a standard atmosphere for arming checks to pass. If you are getting an
# arming error due to this parameter then you may have a faulty or substituted barometer. A common
# issue is vendors replacing a MS5611 in a "Pixhawk" with a MS5607. If you have that issue then please
# see BARO_OPTIONS parameter to force the MS5611 to be treated as a MS5607. This check is disabled if
# the value is zero.
# Units: m (meters)
# Increment: 1
# Range: 0 5000
BARO_ALTERR_MAX,2000

# External baro bus
# AVk This selects the bus number for looking for an I2C barometer. When set to -1 it will probe all
# external i2c buses based on the BARO_PROBE_EXT parameter.
# -1: Disabled
# 0: Bus0
# 1: Bus1
# 6: Bus6
# 8: INL
BARO_EXT_BUS,-1

# field elevation
# User provided field elevation in meters. This is used to improve the calculation of the altitude the
# vehicle is at. This parameter is not persistent and will be reset to 0 every time the vehicle is
# rebooted. Changes to this parameter will only be used when disarmed. A value of 0 means the EKF
# origin height is used for takeoff height above sea level.
# Units: m (meters)
# Increment: 0.1
# Volatile: True
BARO_FIELD_ELV,0

# Range in which sample is accepted
# This sets the range around the average value that new samples must be within to be accepted. This
# can help reduce the impact of noise on sensors that are on long I2C cables. The value is a
# percentage from the average value. A value of zero disables this filter.
# Units: % (percent)
# Range: 0 100
# Increment: 1
BARO_FLTR_RNG,0

# ground temperature
# User provided ambient ground temperature in degrees Celsius. This is used to improve the calculation
# of the altitude the vehicle is at. This parameter is not persistent and will be reset to 0 every
# time the vehicle is rebooted. A value of 0 means use the internal measurement ambient temperature.
# Units: degC (degrees Celsius)
# Increment: 1
# Volatile: True
BARO_GND_TEMP,0

# Barometer options
# Barometer options
# Bitmask: 0:Treat MS5611 as MS5607
BARO_OPTIONS,0

# Primary barometer
# This selects which barometer will be the primary if multiple barometers are found
# 0: FirstBaro
# 1: 2ndBaro
# 2: 3rdBaro
BARO_PRIMARY,0

# External barometers to probe
# This sets which types of external i2c barometer to look for. It is a bitmask of barometer types. The
# I2C buses to probe is based on BARO_EXT_BUS. If BARO_EXT_BUS is -1 then it will probe all external
# buses, otherwise it will probe just the bus number given in BARO_EXT_BUS.
# Bitmask: 0:BMP085,1:BMP280,2:MS5611,3:MS5607,4:MS5637,5:FBM320,6:DPS280,7:LPS25H,8:Keller,9:MS5837,10:BMP388,11:SPL06,12:MSP
BARO_PROBE_EXT,0

# Baro ID
# Barometer sensor ID, taking into account its type, bus and instance
# ReadOnly: True
BARO1_DEVID,65540

# Ground Pressure
# calibrated ground pressure in Pascals
# Units: Pa (pascal)
# Increment: 1
# ReadOnly: True
# Volatile: True
BARO1_GND_PRESS,101400.4

# Wind coefficient enable
# This enables the use of wind coefficients for barometer compensation
# 0: Disabled
# 1: Enabled
BARO1_WCF_ENABLE,0

# Baro ID2
# Barometer2 sensor ID, taking into account its type, bus and instance
# ReadOnly: True
BARO2_DEVID,65796

# Ground Pressure
# calibrated ground pressure in Pascals
# Units: Pa (pascal)
# Increment: 1
# ReadOnly: True
# Volatile: True
BARO2_GND_PRESS,101402.7

# Wind coefficient enable
# This enables the use of wind coefficients for barometer compensation
# 0: Disabled
# 1: Enabled
BARO2_WCF_ENABLE,0

# Baro ID3
# Barometer3 sensor ID, taking into account its type, bus and instance
# ReadOnly: True
BARO3_DEVID,46

# Absolute Pressure
# calibrated ground pressure in Pascals
# Units: Pa (pascal)
# Increment: 1
# ReadOnly: True
# Volatile: True
BARO3_GND_PRESS,100391.3

# Wind coefficient enable
# This enables the use of wind coefficients for barometer compensation
# 0: Disabled
# 1: Enabled
BARO3_WCF_ENABLE,0

# Battery monitoring
# Controls enabling monitoring of the battery's voltage and current
# RebootRequired: True
# 0: Disabled                                          16: SMBus-Maxell
# 3: Analog Voltage Only                               17: Generator-Elec
# 4: Analog Voltage and Current                        18: Generator-Fuel
# 5: Solo                                              19: Rotoye
# 6: Bebop                                             20: MPPT
# 7: SMBus-Generic                                     21: INA2XX
# 8: DroneCAN-BatteryInfo                              22: LTC2946
# 9: ESC                                               23: Torqeedo
# 10: Sum Of Selected Monitors                         24: FuelLevelAnalog
# 11: FuelFlow                                         25: Synthetic Current and Analog Voltage
# 12: FuelLevelPWM                                     26: INA239_SPI
# 13: SMBUS-SUI3                                       27: EFI
# 14: SMBUS-SUI6                                       28: AD7091R5
# 15: NeoDesign                                        29: Scripting
BATT_MONITOR,0

# Battery monitoring
# Controls enabling monitoring of the battery's voltage and current
# RebootRequired: True
# 0: Disabled                                          16: SMBus-Maxell
# 3: Analog Voltage Only                               17: Generator-Elec
# 4: Analog Voltage and Current                        18: Generator-Fuel
# 5: Solo                                              19: Rotoye
# 6: Bebop                                             20: MPPT
# 7: SMBus-Generic                                     21: INA2XX
# 8: DroneCAN-BatteryInfo                              22: LTC2946
# 9: ESC                                               23: Torqeedo
# 10: Sum Of Selected Monitors                         24: FuelLevelAnalog
# 11: FuelFlow                                         25: Synthetic Current and Analog Voltage
# 12: FuelLevelPWM                                     26: INA239_SPI
# 13: SMBUS-SUI3                                       27: EFI
# 14: SMBUS-SUI6                                       28: AD7091R5
# 15: NeoDesign                                        29: Scripting
BATT2_MONITOR,0

# Battery monitoring
# Controls enabling monitoring of the battery's voltage and current
# RebootRequired: True
# 0: Disabled                                          16: SMBus-Maxell
# 3: Analog Voltage Only                               17: Generator-Elec
# 4: Analog Voltage and Current                        18: Generator-Fuel
# 5: Solo                                              19: Rotoye
# 6: Bebop                                             20: MPPT
# 7: SMBus-Generic                                     21: INA2XX
# 8: DroneCAN-BatteryInfo                              22: LTC2946
# 9: ESC                                               23: Torqeedo
# 10: Sum Of Selected Monitors                         24: FuelLevelAnalog
# 11: FuelFlow                                         25: Synthetic Current and Analog Voltage
# 12: FuelLevelPWM                                     26: INA239_SPI
# 13: SMBUS-SUI3                                       27: EFI
# 14: SMBUS-SUI6                                       28: AD7091R5
# 15: NeoDesign                                        29: Scripting
BATT3_MONITOR,0

# Battery monitoring
# Controls enabling monitoring of the battery's voltage and current
# RebootRequired: True
# 0: Disabled                                          16: SMBus-Maxell
# 3: Analog Voltage Only                               17: Generator-Elec
# 4: Analog Voltage and Current                        18: Generator-Fuel
# 5: Solo                                              19: Rotoye
# 6: Bebop                                             20: MPPT
# 7: SMBus-Generic                                     21: INA2XX
# 8: DroneCAN-BatteryInfo                              22: LTC2946
# 9: ESC                                               23: Torqeedo
# 10: Sum Of Selected Monitors                         24: FuelLevelAnalog
# 11: FuelFlow                                         25: Synthetic Current and Analog Voltage
# 12: FuelLevelPWM                                     26: INA239_SPI
# 13: SMBUS-SUI3                                       27: EFI
# 14: SMBUS-SUI6                                       28: AD7091R5
# 15: NeoDesign                                        29: Scripting
BATT4_MONITOR,0

# Battery monitoring
# Controls enabling monitoring of the battery's voltage and current
# RebootRequired: True
# 0: Disabled                                          16: SMBus-Maxell
# 3: Analog Voltage Only                               17: Generator-Elec
# 4: Analog Voltage and Current                        18: Generator-Fuel
# 5: Solo                                              19: Rotoye
# 6: Bebop                                             20: MPPT
# 7: SMBus-Generic                                     21: INA2XX
# 8: DroneCAN-BatteryInfo                              22: LTC2946
# 9: ESC                                               23: Torqeedo
# 10: Sum Of Selected Monitors                         24: FuelLevelAnalog
# 11: FuelFlow                                         25: Synthetic Current and Analog Voltage
# 12: FuelLevelPWM                                     26: INA239_SPI
# 13: SMBUS-SUI3                                       27: EFI
# 14: SMBUS-SUI6                                       28: AD7091R5
# 15: NeoDesign                                        29: Scripting
BATT5_MONITOR,0

# Battery monitoring
# Controls enabling monitoring of the battery's voltage and current
# RebootRequired: True
# 0: Disabled                                          16: SMBus-Maxell
# 3: Analog Voltage Only                               17: Generator-Elec
# 4: Analog Voltage and Current                        18: Generator-Fuel
# 5: Solo                                              19: Rotoye
# 6: Bebop                                             20: MPPT
# 7: SMBus-Generic                                     21: INA2XX
# 8: DroneCAN-BatteryInfo                              22: LTC2946
# 9: ESC                                               23: Torqeedo
# 10: Sum Of Selected Monitors                         24: FuelLevelAnalog
# 11: FuelFlow                                         25: Synthetic Current and Analog Voltage
# 12: FuelLevelPWM                                     26: INA239_SPI
# 13: SMBUS-SUI3                                       27: EFI
# 14: SMBUS-SUI6                                       28: AD7091R5
# 15: NeoDesign                                        29: Scripting
BATT6_MONITOR,0

# Battery monitoring
# Controls enabling monitoring of the battery's voltage and current
# RebootRequired: True
# 0: Disabled                                          16: SMBus-Maxell
# 3: Analog Voltage Only                               17: Generator-Elec
# 4: Analog Voltage and Current                        18: Generator-Fuel
# 5: Solo                                              19: Rotoye
# 6: Bebop                                             20: MPPT
# 7: SMBus-Generic                                     21: INA2XX
# 8: DroneCAN-BatteryInfo                              22: LTC2946
# 9: ESC                                               23: Torqeedo
# 10: Sum Of Selected Monitors                         24: FuelLevelAnalog
# 11: FuelFlow                                         25: Synthetic Current and Analog Voltage
# 12: FuelLevelPWM                                     26: INA239_SPI
# 13: SMBUS-SUI3                                       27: EFI
# 14: SMBUS-SUI6                                       28: AD7091R5
# 15: NeoDesign                                        29: Scripting
BATT7_MONITOR,0

# Battery monitoring
# Controls enabling monitoring of the battery's voltage and current
# RebootRequired: True
# 0: Disabled                                          16: SMBus-Maxell
# 3: Analog Voltage Only                               17: Generator-Elec
# 4: Analog Voltage and Current                        18: Generator-Fuel
# 5: Solo                                              19: Rotoye
# 6: Bebop                                             20: MPPT
# 7: SMBus-Generic                                     21: INA2XX
# 8: DroneCAN-BatteryInfo                              22: LTC2946
# 9: ESC                                               23: Torqeedo
# 10: Sum Of Selected Monitors                         24: FuelLevelAnalog
# 11: FuelFlow                                         25: Synthetic Current and Analog Voltage
# 12: FuelLevelPWM                                     26: INA239_SPI
# 13: SMBUS-SUI3                                       27: EFI
# 14: SMBUS-SUI6                                       28: AD7091R5
# 15: NeoDesign                                        29: Scripting
BATT8_MONITOR,0

# Battery monitoring
# Controls enabling monitoring of the battery's voltage and current
# RebootRequired: True
# 0: Disabled                                          16: SMBus-Maxell
# 3: Analog Voltage Only                               17: Generator-Elec
# 4: Analog Voltage and Current                        18: Generator-Fuel
# 5: Solo                                              19: Rotoye
# 6: Bebop                                             20: MPPT
# 7: SMBus-Generic                                     21: INA2XX
# 8: DroneCAN-BatteryInfo                              22: LTC2946
# 9: ESC                                               23: Torqeedo
# 10: Sum Of Selected Monitors                         24: FuelLevelAnalog
# 11: FuelFlow                                         25: Synthetic Current and Analog Voltage
# 12: FuelLevelPWM                                     26: INA239_SPI
# 13: SMBUS-SUI3                                       27: EFI
# 14: SMBUS-SUI6                                       28: AD7091R5
# 15: NeoDesign                                        29: Scripting
BATT9_MONITOR,0

# Boot delay
# This adds a delay in milliseconds to boot to ensure peripherals initialise fully
# Range: 0 10000
# Units: ms (milliseconds)
BRD_BOOT_DELAY,0

# Board options
# Board specific option flags
# Bitmask: 0:Enable hardware watchdog, 1:Disable MAVftp, 2:Enable set of internal parameters, 3:Enable Debug Pins, 4:Unlock flash on reboot, 5:Write protect firmware flash on reboot, 6:Write protect bootloader flash on reboot, 7:Skip board validation, 8:Disable board arming gpio output change on arm/disarm
BRD_OPTIONS,0

# Allowed sources of RTC time
# Specifies which sources of UTC time will be accepted
# Bitmask: 0:GPS,1:MAVLINK_SYSTEM_TIME,2:HW
BRD_RTC_TYPES,1

# Timezone offset from UTC
# Adds offset in +- minutes from UTC to calculate local time
# Range: -720 +840
BRD_RTC_TZ_MIN,0

# Sets default state of the safety switch
# This controls the default state of the safety switch at startup. When set to 1 the safety switch
# will start in the safe state (flashing) at boot. When set to zero the safety switch will start in
# the unsafe state (solid) at startup. Note that if a safety switch is fitted the user can still
# control the safety state after startup using the switch. The safety state can also be controlled in
# software using a MAVLink message.
# RebootRequired: True
# 0: Disabled
# 1: Enabled
BRD_SAFETY_DEFLT,0

# Outputs which ignore the safety switch state
# A bitmask which controls what outputs can move while the safety switch has not been pressed
# Bitmask: 0:Output1,1:Output2,2:Output3,3:Output4,4:Output5,5:Output6,6:Output7,7:Output8,8:Output9,9:Output10,10:Output11,11:Output12,12:Output13,13:Output14
# RebootRequired: True
BRD_SAFETY_MASK,0

# Options for safety button behavior
# This controls the activation of the safety button. It allows you to control if the safety button can
# be used for safety enable and/or disable, and whether the button is only active when disarmed
# Bitmask: 0:ActiveForSafetyDisable,1:ActiveForSafetyEnable,2:ActiveWhenArmed,3:Force safety on when the aircraft disarms
BRD_SAFETYOPTION,3

#  SDCard Fence size
# This sets the amount of storage in kilobytes reserved on the microsd card in fence.stg for fence
# storage.
# Range: 0 64
# RebootRequired: True
BRD_SD_FENCE,0

#  SDCard Mission size
# This sets the amount of storage in kilobytes reserved on the microsd card in mission.stg for
# waypoint storage. Each waypoint uses 15 bytes.
# Range: 0 64
# RebootRequired: True
BRD_SD_MISSION,0

# User-defined serial number
# User-defined serial number of this vehicle, it can be any arbitrary number you want and has no
# effect on the autopilot
# Range: -8388608 8388607
BRD_SERIAL_NUM,0

# Autopilot board voltage requirement
# Minimum voltage on the autopilot power rail to allow the aircraft to arm. 0 to disable the check.
# Units: V (volt)
# Range: 4.0 5.5
# Increment: 0.1
BRD_VBUS_MIN,4.3

# Servo voltage requirement
# Minimum voltage on the servo rail to allow the aircraft to arm. 0 to disable the check.
# Units: V (volt)
# Range: 3.3 12.0
# Increment: 0.1
BRD_VSERVO_MIN,0

# Enable button reporting
# This enables the button checking module. When this is disabled the parameters for setting button
# inputs are not visible
# 0: Disabled
# 1: Enabled
BTN_ENABLE,0

# Distance-trigging in AUTO mode only
# When enabled, trigging by distance is done in AUTO mode only.
# 0: Always
# 1: Only when in AUTO
CAM_AUTO_ONLY,0

# Maximum photo roll angle.
# Postpone shooting if roll is greater than limit. (0=Disable, will shoot regardless of roll).
# Units: deg (degrees)
# Range: 0 180
CAM_MAX_ROLL,0

# RunCam device type
# RunCam device type used to determine OSD menu structure and shutter options.
# 0: Disabled
# 1: RunCam Split Micro/RunCam with UART
# 2: RunCam Split
# 3: RunCam Split4 4k
# 4: RunCam Hybrid/RunCam Thumb Pro
# 5: Runcam 2 4k
CAM_RC_TYPE,0

# Camera shutter (trigger) type
# how to trigger the camera to take a picture
# 0: None
# 1: Servo
# 2: Relay
# 3: GoPro in Solo Gimbal
# 4: Mount (Siyi)
# 5: MAVLink
# 6: MAVLinkCamV2
# 7: Scripting
CAM1_TYPE,0

# Camera shutter (trigger) type
# how to trigger the camera to take a picture
# 0: None
# 1: Servo
# 2: Relay
# 3: GoPro in Solo Gimbal
# 4: Mount (Siyi)
# 5: MAVLink
# 6: MAVLinkCamV2
# 7: Scripting
CAM2_TYPE,0

# Enable use of specific protocol over virtual driver
# Enabling this option starts selected protocol that will use this virtual driver
# RebootRequired: True
# 0: Disabled
# 1: DroneCAN
# 4: PiccoloCAN
# 6: EFI_NWPMU
# 7: USD1
# 8: KDECAN
# 10: Scripting
# 11: Benewake
# 12: Scripting2
# 13: TOFSenseP
# 14: NanoRadar
CAN_D1_PROTOCOL,1

# Secondary protocol with 11 bit CAN addressing
# Secondary protocol with 11 bit CAN addressing
# RebootRequired: True
# 0: Disabled
# 7: USD1
# 10: Scripting
# 11: Benewake
# 12: Scripting2
# 13: TOFSenseP
# 14: NanoRadar
CAN_D1_PROTOCOL2,0

# Enable use of specific protocol over virtual driver
# Enabling this option starts selected protocol that will use this virtual driver
# RebootRequired: True
# 0: Disabled
# 1: DroneCAN
# 4: PiccoloCAN
# 6: EFI_NWPMU
# 7: USD1
# 8: KDECAN
# 10: Scripting
# 11: Benewake
# 12: Scripting2
# 13: TOFSenseP
# 14: NanoRadar
CAN_D2_PROTOCOL,1

# Secondary protocol with 11 bit CAN addressing
# Secondary protocol with 11 bit CAN addressing
# RebootRequired: True
# 0: Disabled
# 7: USD1
# 10: Scripting
# 11: Benewake
# 12: Scripting2
# 13: TOFSenseP
# 14: NanoRadar
CAN_D2_PROTOCOL2,0

# Loglevel
# Loglevel for recording initialisation and debug information from CAN Interface
# Range: 0 4
# 0: Log None
# 1: Log Error
# 2: Log Warning and below
# 3: Log Info and below
# 4: Log Everything
CAN_LOGLEVEL,0

# Index of virtual driver to be used with physical CAN interface
# Enabling this option enables use of CAN buses.
# RebootRequired: True
# 0: Disabled
# 1: First driver
# 2: Second driver
# 3: Third driver
CAN_P1_DRIVER,0

# Index of virtual driver to be used with physical CAN interface
# Enabling this option enables use of CAN buses.
# RebootRequired: True
# 0: Disabled
# 1: First driver
# 2: Second driver
# 3: Third driver
CAN_P2_DRIVER,0

# Parachute release enabled or disabled
# Parachute release enabled or disabled
# 0: Disabled
# 1: Enabled
CHUTE_ENABLED,0

# Automatically check orientation
# When enabled this will automatically check the orientation of compasses on successful completion of
# compass calibration. If set to 2 then external compasses will have their orientation automatically
# corrected.
# 0: Disabled
# 1: CheckOnly
# 2: CheckAndFix
# 3: use same tolerance to auto rotate 45 deg rotations
COMPASS_AUTO_ROT,2

# Auto Declination
# Enable or disable the automatic calculation of the declination based on gps location
# 0: Disabled
# 1: Enabled
COMPASS_AUTODEC,1

# Compass calibration fitness
# This controls the fitness level required for a successful compass calibration. A lower value makes
# for a stricter fit (less likely to pass). This is the value used for the primary magnetometer. Other
# magnetometers get double the value.
# Range: 4 32
# Increment: 0.1
# 4: Very Strict
# 8: Strict
# 16: Default
# 32: Relaxed
COMPASS_CAL_FIT,16

# Compass declination
# An angle to compensate between the true north and magnetic north
# Range: -3.142 3.142
# Units: rad (radians)
# Increment: 0.01
COMPASS_DEC,0.1445737

# Compass device id
# Compass device id.  Automatically detected, do not set manually
# ReadOnly: True
COMPASS_DEV_ID,97539

# Compass2 device id
# Second compass's device id.  Automatically detected, do not set manually
# ReadOnly: True
COMPASS_DEV_ID2,131874

# Compass3 device id
# Third compass's device id.  Automatically detected, do not set manually
# ReadOnly: True
COMPASS_DEV_ID3,263178

# Compass4 device id
# Extra 4th compass's device id.  Automatically detected, do not set manually
# ReadOnly: True
COMPASS_DEV_ID4,46

# Compass5 device id
# Extra 5th compass's device id.  Automatically detected, do not set manually
# ReadOnly: True
COMPASS_DEV_ID5,97283

# Compass6 device id
# Extra 6th compass's device id.  Automatically detected, do not set manually
# ReadOnly: True
COMPASS_DEV_ID6,97795

# Compass7 device id
# Extra 7th compass's device id.  Automatically detected, do not set manually
# ReadOnly: True
COMPASS_DEV_ID7,98051

# Compass8 device id
# Extra 8th compass's device id.  Automatically detected, do not set manually
# ReadOnly: True
COMPASS_DEV_ID8,0

# Compass soft-iron diagonal X component
# DIA_X in the compass soft-iron calibration matrix: [[DIA_X, ODI_X, ODI_Y], [ODI_X, DIA_Y, ODI_Z],
# [ODI_Y, ODI_Z, DIA_Z]]
# Calibration: 1
COMPASS_DIA_X,1

# Compass soft-iron diagonal Y component
# DIA_Y in the compass soft-iron calibration matrix: [[DIA_X, ODI_X, ODI_Y], [ODI_X, DIA_Y, ODI_Z],
# [ODI_Y, ODI_Z, DIA_Z]]
# Calibration: 1
COMPASS_DIA_Y,1

# Compass soft-iron diagonal Z component
# DIA_Z in the compass soft-iron calibration matrix: [[DIA_X, ODI_X, ODI_Y], [ODI_X, DIA_Y, ODI_Z],
# [ODI_Y, ODI_Z, DIA_Z]]
COMPASS_DIA_Z,1

# Compass2 soft-iron diagonal X component
# DIA_X in the compass2 soft-iron calibration matrix: [[DIA_X, ODI_X, ODI_Y], [ODI_X, DIA_Y, ODI_Z],
# [ODI_Y, ODI_Z, DIA_Z]]
# Calibration: 1
COMPASS_DIA2_X,1

# Compass2 soft-iron diagonal Y component
# DIA_Y in the compass2 soft-iron calibration matrix: [[DIA_X, ODI_X, ODI_Y], [ODI_X, DIA_Y, ODI_Z],
# [ODI_Y, ODI_Z, DIA_Z]]
# Calibration: 1
COMPASS_DIA2_Y,1

# Compass2 soft-iron diagonal Z component
# DIA_Z in the compass2 soft-iron calibration matrix: [[DIA_X, ODI_X, ODI_Y], [ODI_X, DIA_Y, ODI_Z],
# [ODI_Y, ODI_Z, DIA_Z]]
COMPASS_DIA2_Z,1

# Compass3 soft-iron diagonal X component
# DIA_X in the compass3 soft-iron calibration matrix: [[DIA_X, ODI_X, ODI_Y], [ODI_X, DIA_Y, ODI_Z],
# [ODI_Y, ODI_Z, DIA_Z]]
# Calibration: 1
COMPASS_DIA3_X,1

# Compass3 soft-iron diagonal Y component
# DIA_Y in the compass3 soft-iron calibration matrix: [[DIA_X, ODI_X, ODI_Y], [ODI_X, DIA_Y, ODI_Z],
# [ODI_Y, ODI_Z, DIA_Z]]
# Calibration: 1
COMPASS_DIA3_Y,1

# Compass3 soft-iron diagonal Z component
# DIA_Z in the compass3 soft-iron calibration matrix: [[DIA_X, ODI_X, ODI_Y], [ODI_X, DIA_Y, ODI_Z],
# [ODI_Y, ODI_Z, DIA_Z]]
COMPASS_DIA3_Z,1

# Compass disable driver type mask
# This is a bitmask of driver types to disable. If a driver type is set in this mask then that driver
# will not try to find a sensor at startup
# Bitmask: 0:HMC5883,1:LSM303D,2:AK8963,3:BMM150,4:LSM9DS1,5:LIS3MDL,6:AK09916,7:IST8310,8:ICM20948,9:MMC3416,11:DroneCAN,12:QMC5883,14:MAG3110,15:IST8308,16:RM3100,17:MSP,18:ExternalAHRS
COMPASS_DISBLMSK,0

# Enable Compass
# Setting this to Enabled(1) will enable the compass. Setting this to Disabled(0) will disable the
# compass. Note that this is separate from COMPASS_USE. This will enable the low level senor, and will
# enable logging of magnetometer data. To use the compass for navigation you must also set COMPASS_USE
# to 1.
# RebootRequired: True
# 0: Disabled
# 1: Enabled
COMPASS_ENABLE,1

# Compass2 is attached via an external cable
# Configure second compass so it is attached externally. This is auto-detected on most boards. If set
# to 0 or 1 then auto-detection by bus connection can override the value. If set to 2 then
# auto-detection will be disabled.
# 0: Internal
# 1: External
# 2: ForcedExternal
COMPASS_EXTERN2,0

# Compass3 is attached via an external cable
# Configure third compass so it is attached externally. This is auto-detected on most boards. If set
# to 0 or 1 then auto-detection by bus connection can override the value. If set to 2 then
# auto-detection will be disabled.
# 0: Internal
# 1: External
# 2: ForcedExternal
COMPASS_EXTERN3,0

# Compass is attached via an external cable
# Configure compass so it is attached externally. This is auto-detected on most boards. Set to 1 if
# the compass is externally connected. When externally connected the COMPASS_ORIENT option operates
# independently of the AHRS_ORIENTATION board orientation option. If set to 0 or 1 then auto-detection
# by bus connection can override the value. If set to 2 then auto-detection will be disabled.
# 0: Internal
# 1: External
# 2: ForcedExternal
COMPASS_EXTERNAL,1

# Range in which sample is accepted
# This sets the range around the average value that new samples must be within to be accepted. This
# can help reduce the impact of noise on sensors that are on long I2C cables. The value is a
# percentage from the average value. A value of zero disables this filter.
# Units: % (percent)
# Range: 0 100
# Increment: 1
COMPASS_FLTR_RNG,0

# Learn compass offsets automatically
# Enable or disable the automatic learning of compass offsets. You can enable learning either using a
# compass-only method that is suitable only for fixed wing aircraft or using the offsets learnt by the
# active EKF state estimator. If this option is enabled then the learnt offsets are saved when you
# disarm the vehicle. If InFlight learning is enabled then the compass with automatically start
# learning once a flight starts (must be armed). While InFlight learning is running you cannot use
# position control modes.
# 0: Disabled
# 1: Internal-Learning
# 2: EKF-Learning
# 3: InFlight-Learning
COMPASS_LEARN,0

# Motor interference compensation for body frame X axis
# Multiplied by the current throttle and added to the compass's x-axis values to compensate for motor
# interference (Offset per Amp or at Full Throttle)
# Range: -1000 1000
# Units: mGauss/A (milligauss per ampere)
# Increment: 1
# Calibration: 1
COMPASS_MOT_X,0

# Motor interference compensation for body frame Y axis
# Multiplied by the current throttle and added to the compass's y-axis values to compensate for motor
# interference (Offset per Amp or at Full Throttle)
# Range: -1000 1000
# Units: mGauss/A (milligauss per ampere)
# Increment: 1
# Calibration: 1
COMPASS_MOT_Y,0

# Motor interference compensation for body frame Z axis
# Multiplied by the current throttle and added to the compass's z-axis values to compensate for motor
# interference (Offset per Amp or at Full Throttle)
# Range: -1000 1000
# Units: mGauss/A (milligauss per ampere)
# Increment: 1
COMPASS_MOT_Z,0

# Motor interference compensation to compass2 for body frame X axis
# Multiplied by the current throttle and added to compass2's x-axis values to compensate for motor
# interference (Offset per Amp or at Full Throttle)
# Range: -1000 1000
# Units: mGauss/A (milligauss per ampere)
# Increment: 1
# Calibration: 1
COMPASS_MOT2_X,0

# Motor interference compensation to compass2 for body frame Y axis
# Multiplied by the current throttle and added to compass2's y-axis values to compensate for motor
# interference (Offset per Amp or at Full Throttle)
# Range: -1000 1000
# Units: mGauss/A (milligauss per ampere)
# Increment: 1
# Calibration: 1
COMPASS_MOT2_Y,0

# Motor interference compensation to compass2 for body frame Z axis
# Multiplied by the current throttle and added to compass2's z-axis values to compensate for motor
# interference (Offset per Amp or at Full Throttle)
# Range: -1000 1000
# Units: mGauss/A (milligauss per ampere)
# Increment: 1
COMPASS_MOT2_Z,0

# Motor interference compensation to compass3 for body frame X axis
# Multiplied by the current throttle and added to compass3's x-axis values to compensate for motor
# interference (Offset per Amp or at Full Throttle)
# Range: -1000 1000
# Units: mGauss/A (milligauss per ampere)
# Increment: 1
# Calibration: 1
COMPASS_MOT3_X,0

# Motor interference compensation to compass3 for body frame Y axis
# Multiplied by the current throttle and added to compass3's y-axis values to compensate for motor
# interference (Offset per Amp or at Full Throttle)
# Range: -1000 1000
# Units: mGauss/A (milligauss per ampere)
# Increment: 1
# Calibration: 1
COMPASS_MOT3_Y,0

# Motor interference compensation to compass3 for body frame Z axis
# Multiplied by the current throttle and added to compass3's z-axis values to compensate for motor
# interference (Offset per Amp or at Full Throttle)
# Range: -1000 1000
# Units: mGauss/A (milligauss per ampere)
# Increment: 1
COMPASS_MOT3_Z,0

# Motor interference compensation type
# Set motor interference compensation type to disabled, throttle or current.  Do not change manually.
# Calibration: 1
# 0: Disabled
# 1: Use Throttle
# 2: Use Current
COMPASS_MOTCT,0

# Compass soft-iron off-diagonal X component
# ODI_X in the compass soft-iron calibration matrix: [[DIA_X, ODI_X, ODI_Y], [ODI_X, DIA_Y, ODI_Z],
# [ODI_Y, ODI_Z, DIA_Z]]
# Calibration: 1
COMPASS_ODI_X,0

# Compass soft-iron off-diagonal Y component
# ODI_Y in the compass soft-iron calibration matrix: [[DIA_X, ODI_X, ODI_Y], [ODI_X, DIA_Y, ODI_Z],
# [ODI_Y, ODI_Z, DIA_Z]]
# Calibration: 1
COMPASS_ODI_Y,0

# Compass soft-iron off-diagonal Z component
# ODI_Z in the compass soft-iron calibration matrix: [[DIA_X, ODI_X, ODI_Y], [ODI_X, DIA_Y, ODI_Z],
# [ODI_Y, ODI_Z, DIA_Z]]
COMPASS_ODI_Z,0

# Compass2 soft-iron off-diagonal X component
# ODI_X in the compass2 soft-iron calibration matrix: [[DIA_X, ODI_X, ODI_Y], [ODI_X, DIA_Y, ODI_Z],
# [ODI_Y, ODI_Z, DIA_Z]]
# Calibration: 1
COMPASS_ODI2_X,0

# Compass2 soft-iron off-diagonal Y component
# ODI_Y in the compass2 soft-iron calibration matrix: [[DIA_X, ODI_X, ODI_Y], [ODI_X, DIA_Y, ODI_Z],
# [ODI_Y, ODI_Z, DIA_Z]]
# Calibration: 1
COMPASS_ODI2_Y,0

# Compass2 soft-iron off-diagonal Z component
# ODI_Z in the compass2 soft-iron calibration matrix: [[DIA_X, ODI_X, ODI_Y], [ODI_X, DIA_Y, ODI_Z],
# [ODI_Y, ODI_Z, DIA_Z]]
COMPASS_ODI2_Z,0

# Compass3 soft-iron off-diagonal X component
# ODI_X in the compass3 soft-iron calibration matrix: [[DIA_X, ODI_X, ODI_Y], [ODI_X, DIA_Y, ODI_Z],
# [ODI_Y, ODI_Z, DIA_Z]]
# Calibration: 1
COMPASS_ODI3_X,0

# Compass3 soft-iron off-diagonal Y component
# ODI_Y in the compass3 soft-iron calibration matrix: [[DIA_X, ODI_X, ODI_Y], [ODI_X, DIA_Y, ODI_Z],
# [ODI_Y, ODI_Z, DIA_Z]]
# Calibration: 1
COMPASS_ODI3_Y,0

# Compass3 soft-iron off-diagonal Z component
# ODI_Z in the compass3 soft-iron calibration matrix: [[DIA_X, ODI_X, ODI_Y], [ODI_X, DIA_Y, ODI_Z],
# [ODI_Y, ODI_Z, DIA_Z]]
COMPASS_ODI3_Z,0

# Compass maximum offset
# This sets the maximum allowed compass offset in calibration and arming checks
# Range: 500 3000
# Increment: 1
COMPASS_OFFS_MAX,1800

# Compass offsets in milligauss on the X axis
# Offset to be added to the compass x-axis values to compensate for metal in the frame
# Range: -400 400
# Units: mGauss (milligauss)
# Increment: 1
# Calibration: 1
COMPASS_OFS_X,5

# Compass offsets in milligauss on the Y axis
# Offset to be added to the compass y-axis values to compensate for metal in the frame
# Range: -400 400
# Units: mGauss (milligauss)
# Increment: 1
# Calibration: 1
COMPASS_OFS_Y,13

# Compass offsets in milligauss on the Z axis
# Offset to be added to the compass z-axis values to compensate for metal in the frame
# Range: -400 400
# Units: mGauss (milligauss)
# Increment: 1
COMPASS_OFS_Z,-18

# Compass2 offsets in milligauss on the X axis
# Offset to be added to compass2's x-axis values to compensate for metal in the frame
# Range: -400 400
# Units: mGauss (milligauss)
# Increment: 1
# Calibration: 1
COMPASS_OFS2_X,5

# Compass2 offsets in milligauss on the Y axis
# Offset to be added to compass2's y-axis values to compensate for metal in the frame
# Range: -400 400
# Units: mGauss (milligauss)
# Increment: 1
# Calibration: 1
COMPASS_OFS2_Y,13

# Compass2 offsets in milligauss on the Z axis
# Offset to be added to compass2's z-axis values to compensate for metal in the frame
# Range: -400 400
# Units: mGauss (milligauss)
# Increment: 1
COMPASS_OFS2_Z,-18

# Compass3 offsets in milligauss on the X axis
# Offset to be added to compass3's x-axis values to compensate for metal in the frame
# Range: -400 400
# Units: mGauss (milligauss)
# Increment: 1
# Calibration: 1
COMPASS_OFS3_X,5

# Compass3 offsets in milligauss on the Y axis
# Offset to be added to compass3's y-axis values to compensate for metal in the frame
# Range: -400 400
# Units: mGauss (milligauss)
# Increment: 1
# Calibration: 1
COMPASS_OFS3_Y,13

# Compass3 offsets in milligauss on the Z axis
# Offset to be added to compass3's z-axis values to compensate for metal in the frame
# Range: -400 400
# Units: mGauss (milligauss)
# Increment: 1
COMPASS_OFS3_Z,-18

# Compass options
# This sets options to change the behaviour of the compass
# Bitmask: 0:CalRequireGPS, 1: Allow missing DroneCAN compasses to be automaticaly replaced (calibration still required)
COMPASS_OPTIONS,0

# Compass orientation
# The orientation of the first external compass relative to the vehicle frame. This value will be
# ignored unless this compass is set as an external compass. When set correctly in the northern
# hemisphere, pointing the nose and right side down should increase the MagX and MagY values
# respectively. Rolling the vehicle upside down should decrease the MagZ value. For southern
# hemisphere, switch increase and decrease. NOTE: For internal compasses, AHRS_ORIENT is used. The
# label for each option is specified in the order of rotations for that orientation. Firmware versions
# 4.2 and prior can use a CUSTOM (100) rotation to set the COMPASS_CUS_ROLL/PIT/YAW angles for Compass
# orientation. Later versions provide two general custom rotations which can be used, Custom 1 and
# Custom 2, with CUST_1_ROLL/PIT/YAW or CUST_2_ROLL/PIT/YAW angles.
# 0: None                             16: Roll90                          32: Pitch180Roll270
# 1: Yaw45                            17: Yaw45Roll90                     33: Pitch270Roll90
# 2: Yaw90                            18: Yaw90Roll90                     34: Pitch270Roll180
# 3: Yaw135                           19: Yaw135Roll90                    35: Pitch270Roll270
# 4: Yaw180                           20: Roll270                         36: Yaw90Pitch180Roll90
# 5: Yaw225                           21: Yaw45Roll270                    37: Yaw270Roll90
# 6: Yaw270                           22: Yaw90Roll270                    38: Yaw293Pitch68Roll180
# 7: Yaw315                           23: Yaw135Roll270                   39: Pitch315
# 8: Roll180                          24: Pitch90                         40: Pitch315Roll90
# 9: Yaw45Roll180                     25: Pitch270                        42: Roll45
# 10: Yaw90Roll180                    26: Yaw90Pitch180                   43: Roll315
# 11: Yaw135Roll180                   27: Yaw270Pitch180                  100: Custom 4.1 and older
# 12: Pitch180                        28: Pitch90Roll90                   101: Custom 1
# 13: Yaw225Roll180                   29: Pitch90Roll180                  102: Custom 2
# 14: Yaw270Roll180                   30: Pitch90Roll270
# 15: Yaw315Roll180                   31: Pitch180Roll90
COMPASS_ORIENT,0

# Compass2 orientation
# The orientation of a second external compass relative to the vehicle frame. This value will be
# ignored unless this compass is set as an external compass. When set correctly in the northern
# hemisphere, pointing the nose and right side down should increase the MagX and MagY values
# respectively. Rolling the vehicle upside down should decrease the MagZ value. For southern
# hemisphere, switch increase and decrease. NOTE: For internal compasses, AHRS_ORIENT is used. The
# label for each option is specified in the order of rotations for that orientation. Firmware versions
# 4.2 and prior can use a CUSTOM (100) rotation to set the COMPASS_CUS_ROLL/PIT/YAW angles for Compass
# orientation. Later versions provide two general custom rotations which can be used, Custom 1 and
# Custom 2, with CUST_1_ROLL/PIT/YAW or CUST_2_ROLL/PIT/YAW angles.
# 0: None                             16: Roll90                          32: Pitch180Roll270
# 1: Yaw45                            17: Yaw45Roll90                     33: Pitch270Roll90
# 2: Yaw90                            18: Yaw90Roll90                     34: Pitch270Roll180
# 3: Yaw135                           19: Yaw135Roll90                    35: Pitch270Roll270
# 4: Yaw180                           20: Roll270                         36: Yaw90Pitch180Roll90
# 5: Yaw225                           21: Yaw45Roll270                    37: Yaw270Roll90
# 6: Yaw270                           22: Yaw90Roll270                    38: Yaw293Pitch68Roll180
# 7: Yaw315                           23: Yaw135Roll270                   39: Pitch315
# 8: Roll180                          24: Pitch90                         40: Pitch315Roll90
# 9: Yaw45Roll180                     25: Pitch270                        42: Roll45
# 10: Yaw90Roll180                    26: Yaw90Pitch180                   43: Roll315
# 11: Yaw135Roll180                   27: Yaw270Pitch180                  100: Custom 4.1 and older
# 12: Pitch180                        28: Pitch90Roll90                   101: Custom 1
# 13: Yaw225Roll180                   29: Pitch90Roll180                  102: Custom 2
# 14: Yaw270Roll180                   30: Pitch90Roll270
# 15: Yaw315Roll180                   31: Pitch180Roll90
COMPASS_ORIENT2,0

# Compass3 orientation
# The orientation of a third external compass relative to the vehicle frame. This value will be
# ignored unless this compass is set as an external compass. When set correctly in the northern
# hemisphere, pointing the nose and right side down should increase the MagX and MagY values
# respectively. Rolling the vehicle upside down should decrease the MagZ value. For southern
# hemisphere, switch increase and decrease. NOTE: For internal compasses, AHRS_ORIENT is used. The
# label for each option is specified in the order of rotations for that orientation. Firmware versions
# 4.2 and prior can use a CUSTOM (100) rotation to set the COMPASS_CUS_ROLL/PIT/YAW angles for Compass
# orientation. Later versions provide two general custom rotations which can be used, Custom 1 and
# Custom 2, with CUST_1_ROLL/PIT/YAW or CUST_2_ROLL/PIT/YAW angles.
# 0: None                             16: Roll90                          32: Pitch180Roll270
# 1: Yaw45                            17: Yaw45Roll90                     33: Pitch270Roll90
# 2: Yaw90                            18: Yaw90Roll90                     34: Pitch270Roll180
# 3: Yaw135                           19: Yaw135Roll90                    35: Pitch270Roll270
# 4: Yaw180                           20: Roll270                         36: Yaw90Pitch180Roll90
# 5: Yaw225                           21: Yaw45Roll270                    37: Yaw270Roll90
# 6: Yaw270                           22: Yaw90Roll270                    38: Yaw293Pitch68Roll180
# 7: Yaw315                           23: Yaw135Roll270                   39: Pitch315
# 8: Roll180                          24: Pitch90                         40: Pitch315Roll90
# 9: Yaw45Roll180                     25: Pitch270                        42: Roll45
# 10: Yaw90Roll180                    26: Yaw90Pitch180                   43: Roll315
# 11: Yaw135Roll180                   27: Yaw270Pitch180                  100: Custom 4.1 and older
# 12: Pitch180                        28: Pitch90Roll90                   101: Custom 1
# 13: Yaw225Roll180                   29: Pitch90Roll180                  102: Custom 2
# 14: Yaw270Roll180                   30: Pitch90Roll270
# 15: Yaw315Roll180                   31: Pitch180Roll90
COMPASS_ORIENT3,0

# per-motor compass correction enable
# This enables per-motor compass corrections
# 0: Disabled
# 1: Enabled
COMPASS_PMOT_EN,0

# Compass device id with 1st order priority
# Compass device id with 1st order priority, set automatically if 0. Reboot required after change.
# RebootRequired: True
COMPASS_PRIO1_ID,97539

# Compass device id with 2nd order priority
# Compass device id with 2nd order priority, set automatically if 0. Reboot required after change.
# RebootRequired: True
COMPASS_PRIO2_ID,131874

# Compass device id with 3rd order priority
# Compass device id with 3rd order priority, set automatically if 0. Reboot required after change.
# RebootRequired: True
COMPASS_PRIO3_ID,263178

# Compass1 scale factor
# Scaling factor for first compass to compensate for sensor scaling errors. If this is 0 then no
# scaling is done
# Range: 0 1.3
COMPASS_SCALE,1

# Compass2 scale factor
# Scaling factor for 2nd compass to compensate for sensor scaling errors. If this is 0 then no scaling
# is done
# Range: 0 1.3
COMPASS_SCALE2,1

# Compass3 scale factor
# Scaling factor for 3rd compass to compensate for sensor scaling errors. If this is 0 then no scaling
# is done
# Range: 0 1.3
COMPASS_SCALE3,1

# Use compass for yaw
# Enable or disable the use of the compass (instead of the GPS) for determining heading
# 0: Disabled
# 1: Enabled
COMPASS_USE,1

# Compass2 used for yaw
# Enable or disable the secondary compass for determining heading.
# 0: Disabled
# 1: Enabled
COMPASS_USE2,1

# Compass3 used for yaw
# Enable or disable the tertiary compass for determining heading.
# 0: Disabled
# 1: Enabled
COMPASS_USE3,1
CRASH_ACC_THRESH,0
CRASH_DETECT,0
CRUISE_ALT_FLOOR,0

# Enable Custom rotations
# This enables custom rotations
# RebootRequired: True
# 0: Disable
# 1: Enable
CUST_ROT_ENABLE,0

# Enable ODID subsystem
# Enable ODID subsystem
# 0: Disabled
# 1: Enabled
DID_ENABLE,0
DSPOILER_AILMTCH,100
DSPOILER_CROW_W1,0
DSPOILER_CROW_W2,0
DSPOILER_OPTS,3
DSPOILR_RUD_RATE,100

# AHRS logging rate
# Logging rate for EARHS devices
# Units: Hz (hertz)
EAHRS_LOG_RATE,10

# External AHRS options
# External AHRS options bitmask
# Bitmask: 0:Vector Nav use uncompensated values for accel gyro and mag.
EAHRS_OPTIONS,0

# AHRS data rate
# Requested rate for AHRS device
# Units: Hz (hertz)
EAHRS_RATE,200

# External AHRS sensors
# External AHRS sensors bitmask
# Bitmask: 0:GPS,1:IMU,2:Baro,3:Compass
EAHRS_SENSORS,15

# AHRS type
# Type of AHRS device
# 0: None
# 1: VectorNav
# 2: MicroStrain5
# 5: Inertial_Labs
# 7: MicroStrain7
EAHRS_TYPE,5

# EFI communication type
# What method of communication is used for EFI #1
# RebootRequired: True
# 0: None
# 1: Serial-MS
# 2: NWPMU
# 3: Serial-Lutan
# 5: DroneCAN
# 6: Currawong-ECU
# 7: Scripting
# 8: Hirth
# 9: MAV
EFI_TYPE,0

# Enable EKF2
# This enables EKF2. Enabling EKF2 only makes the maths run, it does not mean it will be used for
# flight control. To use it for flight control set AHRS_EKF_TYPE=2. A reboot or restart will need to
# be performed after changing the value of EK2_ENABLE for it to take effect.
# RebootRequired: True
# 0: Disabled
# 1: Enabled
EK2_ENABLE,0

# Accelerometer bias stability (m/s^3)
# This noise controls the growth of the vertical accelerometer delta velocity bias state error
# estimate. Increasing it makes accelerometer bias estimation faster and noisier.
# Range: 0.00001 0.02
# Units: m/s/s/s (meters per cubic second)
EK3_ABIAS_P_NSE,0.02

# Accelerometer bias limit
# The accelerometer bias state will be limited to +- this value
# Range: 0.5 2.5
# Increment: 0.1
# Units: m/s/s (meters per square second)
EK3_ACC_BIAS_LIM,1

# Accelerometer noise (m/s^2)
# This control disturbance noise controls the growth of estimated error due to accelerometer
# measurement errors excluding bias. Increasing it makes the flter trust the accelerometer
# measurements less and other measurements more.
# Range: 0.01 1.0
# Increment: 0.01
# Units: m/s/s (meters per square second)
EK3_ACC_P_NSE,0.35

# EKF3 Sensor Affinity Options
# These options control the affinity between sensor instances and EKF cores
# Bitmask: 0:EnableGPSAffinity,1:EnableBaroAffinity,2:EnableCompassAffinity,3:EnableAirspeedAffinity
# RebootRequired: True
EK3_AFFINITY,0

# Altitude measurement noise (m)
# This is the RMS value of noise in the altitude measurement. Increasing it reduces the weighting of
# the baro measurement and will make the filter respond more slowly to baro measurement errors, but
# will make it more sensitive to GPS and accelerometer errors. A larger value for EK3_ALT_M_NSE may be
# required when operating with EK3_SRCx_POSZ = 0. This parameter also sets the noise for the
# 'synthetic' zero height measurement that is used when EK3_SRCx_POSZ = 0.
# Range: 0.1 100.0
# Increment: 0.1
# Units: m (meters)
EK3_ALT_M_NSE,3

# Range beacon measurement delay (msec)
# This is the number of msec that the range beacon measurements lag behind the inertial measurements.
# Range: 0 250
# Increment: 10
# Units: ms (milliseconds)
# RebootRequired: True
EK3_BCN_DELAY,50

# Range beacon measurement gate size
# This sets the percentage number of standard deviations applied to the range beacon measurement
# innovation consistency check. Decreasing it makes it more likely that good measurements will be
# rejected. Increasing it makes it more likely that bad measurements will be accepted.
# Range: 100 1000
# Increment: 25
EK3_BCN_I_GTE,500

# Range beacon measurement noise (m)
# This is the RMS value of noise in the range beacon measurement. Increasing it reduces the weighting
# on this measurement.
# Range: 0.1 10.0
# Increment: 0.1
# Units: m (meters)
EK3_BCN_M_NSE,1

# Bitmask controlling sidelip angle fusion
# 1 byte bitmap controlling use of sideslip angle fusion for estimation of non wind states during
# operation of 'fly forward' vehicle types such as fixed wing planes. By assuming that the angle of
# sideslip is small, the wind velocity state estimates are corrected  whenever the EKF is not dead
# reckoning (e.g. has an independent velocity or position sensor such as GPS). This behaviour is on by
# default and cannot be disabled. When the EKF is dead reckoning, the wind states are used as a
# reference, enabling use of the small angle of sideslip assumption to correct non wind velocity
# states (eg attitude, velocity, position, etc) and improve navigation accuracy. This behaviour is on
# by default and cannot be disabled. The behaviour controlled by this parameter is the use of the
# small angle of sideslip assumption to correct non wind velocity states when the EKF is NOT dead
# reckoning. This is primarily of benefit to reduce the buildup of yaw angle errors during straight
# and level flight without a yaw sensor (e.g. magnetometer or dual antenna GPS yaw) provided aerobatic
# flight maneuvers with large sideslip angles are not performed. The 'always' option might be used
# where the yaw sensor is intentionally not fitted or disabled. The 'WhenNoYawSensor' option might be
# used if a yaw sensor is fitted, but protection against in-flight failure and continual rejection by
# the EKF is desired. For vehicles operated within visual range of the operator performing frequent
# turning maneuvers, setting this parameter is unnecessary.
# Bitmask: 0:Always,1:WhenNoYawSensor
# RebootRequired: True
EK3_BETA_MASK,0

# GPS accuracy check scaler (%)
# This scales the thresholds that are used to check GPS accuracy before it is used by the EKF. A value
# of 100 is the default. Values greater than 100 increase and values less than 100 reduce the maximum
# GPS error the EKF will accept. A value of 200 will double the allowable GPS error.
# Range: 50 200
# Units: % (percent)
EK3_CHECK_SCALE,150

# Ballistic coefficient for X axis drag
# Ratio of mass to drag coefficient measured along the X body axis. This parameter enables estimation
# of wind drift for vehicles with bluff bodies and without propulsion forces in the X and Y direction
# (eg multicopters). The drag produced by this effect scales with speed squared.  Set to a postive
# value > 1.0 to enable. A starting value is the mass in Kg divided by the frontal area. The predicted
# drag from the rotors is specified separately by the EK3_DRAG_MCOEF parameter.
# Range: 0.0 1000.0
# Units: kg/m/m (kilograms per square meter)
EK3_DRAG_BCOEF_X,0

# Ballistic coefficient for Y axis drag
# Ratio of mass to drag coefficient measured along the Y body axis. This parameter enables estimation
# of wind drift for vehicles with bluff bodies and without propulsion forces in the X and Y direction
# (eg multicopters). The drag produced by this effect scales with speed squared.  Set to a postive
# value > 1.0 to enable. A starting value is the mass in Kg divided by the side area. The predicted
# drag from the rotors is specified separately by the EK3_DRAG_MCOEF parameter.
# Range: 50.0 1000.0
# Units: kg/m/m (kilograms per square meter)
EK3_DRAG_BCOEF_Y,0

# Observation noise for drag acceleration
# This sets the amount of noise used when fusing X and Y acceleration as an observation that enables
# esitmation of wind velocity for multi-rotor vehicles. This feature is enabled by the
# EK3_DRAG_BCOEF_X and EK3_DRAG_BCOEF_Y parameters
# Range: 0.1 2.0
# Increment: 0.1
# Units: m/s/s (meters per square second)
EK3_DRAG_M_NSE,0.5

# Momentum coefficient for propeller drag
# This parameter is used to predict the drag produced by the rotors when flying a multi-copter,
# enabling estimation of wind drift. The drag produced by this effect scales with speed not speed
# squared and is produced because some of the air velocity normal to the rotors axis of rotation is
# lost when passing through the rotor disc which changes the momentum of the airflow causing drag. For
# unducted rotors the effect is roughly proportional to the area of the propeller blades when viewed
# side on and changes with different propellers. It is higher for ducted rotors. For example if flying
# at 15 m/s at sea level conditions produces a rotor induced drag acceleration of 1.5 m/s/s, then
# EK3_DRAG_MCOEF would be set to 0.1 = (1.5/15.0). Set EK3_MCOEF to a postive value to enable wind
# estimation using this drag effect. To account for the drag produced by the body which scales with
# speed squared, see documentation for the EK3_DRAG_BCOEF_X and EK3_DRAG_BCOEF_Y parameters.
# Range: 0.0 1.0
# Increment: 0.01
# Units: 1/s (per second)
EK3_DRAG_MCOEF,0

# Airspeed measurement gate size
# This sets the percentage number of standard deviations applied to the airspeed measurement
# innovation consistency check. Decreasing it makes it more likely that good measurements will be
# rejected. Increasing it makes it more likely that bad measurements will be accepted.
# Range: 100 1000
# Increment: 25
EK3_EAS_I_GATE,400

# Equivalent airspeed measurement noise (m/s)
# This is the RMS value of noise in equivalent airspeed measurements used by planes. Increasing it
# reduces the weighting of airspeed measurements and will make wind speed estimates less noisy and
# slower to converge. Increasing also increases navigation errors when dead-reckoning without GPS
# measurements.
# Range: 0.5 5.0
# Increment: 0.1
# Units: m/s (meters per second)
EK3_EAS_M_NSE,1.4

# Enable EKF3
# This enables EKF3. Enabling EKF3 only makes the maths run, it does not mean it will be used for
# flight control. To use it for flight control set AHRS_EKF_TYPE=3. A reboot or restart will need to
# be performed after changing the value of EK3_ENABLE for it to take effect.
# RebootRequired: True
# 0: Disabled
# 1: Enabled
EK3_ENABLE,1

# EKF3 Lane Relative Error Sensitivity Threshold
# lanes have to be consistently better than the primary by at least this threshold to reduce their
# overall relativeCoreError, lowering this makes lane switching more sensitive to smaller error
# differences
# Range: 0.05 1
# Increment: 0.05
EK3_ERR_THRESH,0.2

# Optical Flow measurement delay (msec)
# This is the number of msec that the optical flow measurements lag behind the inertial measurements.
# It is the time from the end of the optical flow averaging period and does not include the time delay
# due to the 100msec of averaging within the flow sensor.
# Range: 0 250
# Increment: 10
# Units: ms (milliseconds)
# RebootRequired: True
EK3_FLOW_DELAY,10

# Optical Flow measurement gate size
# This sets the percentage number of standard deviations applied to the optical flow innovation
# consistency check. Decreasing it makes it more likely that good measurements will be rejected.
# Increasing it makes it more likely that bad measurements will be accepted.
# Range: 100 1000
# Increment: 25
EK3_FLOW_I_GATE,500

# Optical flow measurement noise (rad/s)
# This is the RMS value of noise and errors in optical flow measurements. Increasing it reduces the
# weighting on these measurements.
# Range: 0.05 1.0
# Increment: 0.05
# Units: rad/s (radians per second)
EK3_FLOW_M_NSE,0.15

# Optical flow use bitmask
# Controls if the optical flow data is fused into the 24-state navigation estimator OR the 1-state
# terrain height estimator.
# RebootRequired: True
# 0: None
# 1: Navigation
# 2: Terrain
EK3_FLOW_USE,2

# Rate gyro bias stability (rad/s/s)
# This state  process noise controls growth of the gyro delta angle bias state error estimate.
# Increasing it makes rate gyro bias estimation faster and noisier.
# Range: 0.00001 0.001
# Units: rad/s/s (radians per square second)
EK3_GBIAS_P_NSE,0.001

# GPS glitch radius gate size (m)
# This controls the maximum radial uncertainty in position between the value predicted by the filter
# and the value measured by the GPS before the filter position and velocity states are reset to the
# GPS. Making this value larger allows the filter to ignore larger GPS glitches but also means that
# non-GPS errors such as IMU and compass can create a larger error in position before the filter is
# forced back to the GPS position. If EK3_GLITCH_RAD set to 0 the GPS innovations will be clipped
# instead of rejected if they exceed the gate size set by EK3_VEL_I_GATE and EK3_POS_I_GATE which can
# be useful if poor quality sensor data is causing GPS rejection and loss of navigation but does make
# the EKF more susceptible to GPS glitches. If setting EK3_GLITCH_RAD to 0 it is recommended to reduce
# EK3_VEL_I_GATE and EK3_POS_I_GATE to 300.
# Range: 10 100
# Increment: 5
# Units: m (meters)
EK3_GLITCH_RAD,25

# Baro height ground effect dead zone
# This parameter sets the size of the dead zone that is applied to negative baro height spikes that
# can occur when taking off or landing when a vehicle with lift rotors is operating in ground effect
# ground effect. Set to about 0.5m less than the amount of negative offset in baro height that occurs
# just prior to takeoff when lift motors are spooling up. Set to 0 if no ground effect is present.
# Range: 0.0 10.0
# Increment: 0.5
EK3_GND_EFF_DZ,4

# GPS preflight check
# This is a 1 byte bitmap controlling which GPS preflight checks are performed. Set to 0 to bypass all
# checks. Set to 255 perform all checks. Set to 3 to check just the number of satellites and HDoP. Set
# to 31 for the most rigorous checks that will still allow checks to pass when the copter is moving,
# eg launch from a boat.
# Bitmask: 0:NSats,1:HDoP,2:speed error,3:position error,4:yaw error,5:pos drift,6:vert speed,7:horiz speed
EK3_GPS_CHECK,31

# GPS vertical accuracy threshold
# Vertical accuracy threshold for GPS as the altitude source. The GPS will not be used as an altitude
# source if the reported vertical accuracy of the GPS is larger than this threshold, falling back to
# baro instead. Set to zero to deactivate the threshold check.
# Range: 0.0 10.0
# Increment: 0.1
# Units: m (meters)
EK3_GPS_VACC_MAX,0

# Maximum number of resets to the EKF-GSF yaw estimate allowed
# Sets the maximum number of times the EKF3 will be allowed to reset its yaw to the estimate from the
# EKF-GSF yaw estimator. No resets will be allowed unless the use of the EKF-GSF yaw estimate is
# enabled via the EK3_GSF_USE_MASK parameter.
# Range: 1 10
# Increment: 1
# RebootRequired: True
EK3_GSF_RST_MAX,2

# Bitmask of which EKF-GSF yaw estimators run
# 1 byte bitmap of which EKF3 instances run an independant EKF-GSF yaw estimator to provide a backup
# yaw estimate that doesn't rely on magnetometer data. This estimator uses IMU, GPS and, if available,
# airspeed data. EKF-GSF yaw estimator data for the primary EKF3 instance will be logged as GSF0 and
# GSF1 messages. Use of the yaw estimate generated by this algorithm is controlled by the
# EK3_GSF_USE_MASK and EK3_GSF_RST_MAX parameters. To run the EKF-GSF yaw estimator in ride-along and
# logging only, set EK3_GSF_USE to 0.
# Bitmask: 0:FirstEKF,1:SecondEKF,2:ThirdEKF,3:FourthEKF,4:FifthEKF,5:SixthEKF
# RebootRequired: True
EK3_GSF_RUN_MASK,3

# Bitmask of which EKF-GSF yaw estimators are used
# A bitmask of which EKF3 instances will use the output from the EKF-GSF yaw estimator that has been
# turned on by the EK3_GSF_RUN_MASK parameter. If the inertial navigation calculation stops following
# the GPS, then the vehicle code can request EKF3 to attempt to resolve the issue, either by
# performing a yaw reset if enabled by this parameter by switching to another EKF3 instance.
# Bitmask: 0:FirstEKF,1:SecondEKF,2:ThirdEKF,3:FourthEKF,4:FifthEKF,5:SixthEKF
# RebootRequired: True
EK3_GSF_USE_MASK,3

# Rate gyro noise (rad/s)
# This control disturbance noise controls the growth of estimated error due to gyro measurement errors
# excluding bias. Increasing it makes the flter trust the gyro measurements less and other
# measurements more.
# Range: 0.0001 0.1
# Increment: 0.0001
# Units: rad/s (radians per second)
EK3_GYRO_P_NSE,0.015

# Height measurement delay (msec)
# This is the number of msec that the Height measurements lag behind the inertial measurements.
# Range: 0 250
# Increment: 10
# Units: ms (milliseconds)
# RebootRequired: True
EK3_HGT_DELAY,60

# Height measurement gate size
# This sets the percentage number of standard deviations applied to the height measurement innovation
# consistency check. Decreasing it makes it more likely that good measurements will be rejected.
# Increasing it makes it more likely that bad measurements will be accepted.  If EK3_GLITCH_RAD set to
# 0 the vertical position innovations will be clipped instead of rejected if they exceed the gate size
# and a smaller value of EK3_HGT_I_GATE not exceeding 300 is recommended to limit the effect of height
# sensor transient errors.
# Range: 100 1000
# Increment: 25
EK3_HGT_I_GATE,500

# Height rate filter crossover frequency
# Specifies the crossover frequency of the complementary filter used to calculate the output predictor
# height rate derivative.
# Range: 0.1 30.0
# Units: Hz (hertz)
EK3_HRT_FILT,2

# Bitmask of active IMUs
# 1 byte bitmap of IMUs to use in EKF3. A separate instance of EKF3 will be started for each IMU
# selected. Set to 1 to use the first IMU only (default), set to 2 to use the second IMU only, set to
# 3 to use the first and second IMU. Additional IMU's can be used up to a maximum of 6 if memory and
# processing resources permit. There may be insufficient memory and processing resources to run
# multiple instances. If this occurs EKF3 will fail to start.
# Bitmask: 0:FirstIMU,1:SecondIMU,2:ThirdIMU,3:FourthIMU,4:FifthIMU,5:SixthIMU
# RebootRequired: True
EK3_IMU_MASK,3

# Logging Level
# Determines how verbose the EKF3 streaming logging is. A value of 0 provides full logging(default), a
# value of 1 only XKF4 scaled innovations are logged, a value of 2 both XKF4 and GSF are logged, and a
# value of 3 disables all streaming logging of EKF3.
# Range: 0 3
# Increment: 1
EK3_LOG_LEVEL,0

# Magnetometer default fusion mode
# This determines when the filter will use the 3-axis magnetometer fusion model that estimates both
# earth and body fixed magnetic field states and when it will use a simpler magnetic heading fusion
# model that does not use magnetic field states. The 3-axis magnetometer fusion is only suitable for
# use when the external magnetic field environment is stable. EK3_MAG_CAL = 0 uses heading fusion on
# ground, 3-axis fusion in-flight, and is the default setting for Plane users. EK3_MAG_CAL = 1 uses
# 3-axis fusion only when manoeuvring. EK3_MAG_CAL = 2 uses heading fusion at all times, is
# recommended if the external magnetic field is varying and is the default for rovers. EK3_MAG_CAL = 3
# uses heading fusion on the ground and 3-axis fusion after the first in-air field and yaw reset has
# completed, and is the default for copters. EK3_MAG_CAL = 4 uses 3-axis fusion at all times.
# EK3_MAG_CAL = 5 uses an external yaw sensor with simple heading fusion. NOTE : Use of simple heading
# magnetometer fusion makes vehicle compass calibration and alignment errors harder for the EKF to
# detect which reduces the sensitivity of the Copter EKF failsafe algorithm. NOTE: The fusion mode can
# be forced to 2 for specific EKF cores using the EK3_MAG_MASK parameter. EK3_MAG_CAL = 6 uses an
# external yaw sensor with fallback to compass when the external sensor is not available if we are
# flying. NOTE: The fusion mode can be forced to 2 for specific EKF cores using the EK3_MAG_MASK
# parameter. NOTE: limited operation without a magnetometer or any other yaw sensor is possible by
# setting all COMPASS_USE, COMPASS_USE2, COMPASS_USE3, etc parameters to 0 and setting COMPASS_ENABLE
# to 0. If this is done, the EK3_GSF_RUN and EK3_GSF_USE masks must be set to the same as
# EK3_IMU_MASK. A yaw angle derived from IMU and GPS velocity data using a Gaussian Sum Filter (GSF)
# will then be used to align the yaw when flight commences and there is sufficient movement.
# RebootRequired: True
# 0: When flying
# 1: When manoeuvring
# 2: Never
# 3: After first climb yaw reset
# 4: Always
# 5: Use external yaw sensor (Deprecated in 4.1+ see EK3_SRCn_YAW)
# 6: External yaw sensor with compass fallback (Deprecated in 4.1+ see EK3_SRCn_YAW)
EK3_MAG_CAL,0

# EarthField error limit
# This limits the difference between the learned earth magnetic field and the earth field from the
# world magnetic model tables. A value of zero means to disable the use of the WMM tables.
# Range: 0 500
# Units: mGauss (milligauss)
EK3_MAG_EF_LIM,50

# Magnetometer measurement gate size
# This sets the percentage number of standard deviations applied to the magnetometer measurement
# innovation consistency check. Decreasing it makes it more likely that good measurements will be
# rejected. Increasing it makes it more likely that bad measurements will be accepted.
# Range: 100 1000
# Increment: 25
EK3_MAG_I_GATE,300

# Magnetometer measurement noise (Gauss)
# This is the RMS value of noise in magnetometer measurements. Increasing it reduces the weighting on
# these measurements.
# Range: 0.01 0.5
# Increment: 0.01
# Units: Gauss (gauss)
EK3_MAG_M_NSE,0.05

# Bitmask of active EKF cores that will always use heading fusion
# 1 byte bitmap of EKF cores that will disable magnetic field states and use simple magnetic heading
# fusion at all times. This parameter enables specified cores to be used as a backup for flight into
# an environment with high levels of external magnetic interference which may degrade the EKF attitude
# estimate when using 3-axis magnetometer fusion. NOTE : Use of a different magnetometer fusion
# algorithm on different cores makes unwanted EKF core switches due to magnetometer errors more
# likely.
# Bitmask: 0:FirstEKF,1:SecondEKF,2:ThirdEKF,3:FourthEKF,4:FifthEKF,5:SixthEKF
# RebootRequired: True
EK3_MAG_MASK,0

# Body magnetic field process noise (gauss/s)
# This state process noise controls the growth of body magnetic field state error estimates.
# Increasing it makes magnetometer bias error estimation faster and noisier.
# Range: 0.00001 0.01
# Units: Gauss/s (gauss per second)
EK3_MAGB_P_NSE,0.0001

# Earth magnetic field process noise (gauss/s)
# This state process noise controls the growth of earth magnetic field state error estimates.
# Increasing it makes earth magnetic field estimation faster and noisier.
# Range: 0.00001 0.01
# Units: Gauss/s (gauss per second)
EK3_MAGE_P_NSE,0.001

# Maximum valid optical flow rate
# This sets the magnitude maximum optical flow rate in rad/sec that will be accepted by the filter
# Range: 1.0 4.0
# Increment: 0.1
# Units: rad/s (radians per second)
EK3_MAX_FLOW,2.5

# Non-GPS operation position uncertainty (m)
# This sets the amount of position variation that the EKF allows for when operating without external
# measurements (eg GPS or optical flow). Increasing this parameter makes the EKF attitude estimate
# less sensitive to vehicle manoeuvres but more sensitive to IMU errors.
# Range: 0.5 50.0
# Units: m (meters)
EK3_NOAID_M_NSE,10

# Bitmask control of EKF reference height correction
# When a height sensor other than GPS is used as the primary height source by the EKF, the position of
# the zero height datum is defined by that sensor and its frame of reference. If a GPS height
# measurement is also available, then the height of the WGS-84 height datum used by the EKF can be
# corrected so that the height returned by the getLLH() function is compensated for primary height
# sensor drift and change in datum over time. The first two bit positions control when the height
# datum will be corrected. Correction is performed using a Bayes filter and only operates when GPS
# quality permits. The third bit position controls where the corrections to the GPS reference datum
# are applied. Corrections can be applied to the local vertical position or to the reported EKF origin
# height (default).
# Bitmask: 0:Correct when using Baro height,1:Correct when using range finder height,2:Apply corrections to local position
# RebootRequired: True
EK3_OGN_HGT_MASK,0

# On ground not moving test scale factor
# This parameter is adjust the sensitivity of the on ground not moving test which is used to assist
# with learning the yaw gyro bias and stopping yaw drift before flight when operating without a yaw
# sensor. Bigger values allow the detection of a not moving condition with noiser IMU data. Check the
# XKFM data logged when the vehicle is on ground not moving and adjust the value of OGNM_TEST_SF to be
# slightly higher than the maximum value of the XKFM.ADR, XKFM.ALR, XKFM.GDR and XKFM.GLR test levels.
# Range: 1.0 10.0
# Increment: 0.5
EK3_OGNM_TEST_SF,2

# GPS position measurement gate size
# This sets the percentage number of standard deviations applied to the GPS position measurement
# innovation consistency check. Decreasing it makes it more likely that good measurements will be
# rejected. Increasing it makes it more likely that bad measurements will be accepted. If
# EK3_GLITCH_RAD has been set to 0 the horizontal position innovations will be clipped instead of
# rejected if they exceed the gate size so a smaller value of EK3_POS_I_GATE not exceeding 300 is
# recommended to limit the effect of GPS transient errors.
# Range: 100 1000
# Increment: 25
EK3_POS_I_GATE,500

# GPS horizontal position measurement noise (m)
# This sets the GPS horizontal position observation noise. Increasing it reduces the weighting of GPS
# horizontal position measurements.
# Range: 0.1 10.0
# Increment: 0.1
# Units: m (meters)
EK3_POSNE_M_NSE,0.5

# Primary core number
# The core number (index in IMU mask) that will be used as the primary EKF core on startup. While
# disarmed the EKF will force the use of this core. A value of 0 corresponds to the first IMU in
# EK3_IMU_MASK.
# Range: 0 2
# Increment: 1
EK3_PRIMARY,0

# Range finder measurement gate size
# This sets the percentage number of standard deviations applied to the range finder innovation
# consistency check. Decreasing it makes it more likely that good measurements will be rejected.
# Increasing it makes it more likely that bad measurements will be accepted.
# Range: 100 1000
# Increment: 25
EK3_RNG_I_GATE,500

# Range finder measurement noise (m)
# This is the RMS value of noise in the range finder measurement. Increasing it reduces the weighting
# on this measurement.
# Range: 0.1 10.0
# Increment: 0.1
# Units: m (meters)
EK3_RNG_M_NSE,0.5

# Range finder switch height percentage
# Range finder can be used as the primary height source when below this percentage of its maximum
# range (see RNGFNDx_MAX_CM) and the primary height source is Baro or GPS (see EK3_SRCx_POSZ).  This
# feature should not be used for terrain following as it is designed for vertical takeoff and landing
# with climb above the range finder use height before commencing the mission, and with horizontal
# position changes below that height being limited to a flat region around the takeoff and landing
# point.
# Range: -1 70
# Increment: 1
# Units: % (percent)
EK3_RNG_USE_HGT,-1

# Range finder max ground speed
# The range finder will not be used as the primary height source when the horizontal ground speed is
# greater than this value.
# Range: 2.0 6.0
# Increment: 0.5
# Units: m/s (meters per second)
EK3_RNG_USE_SPD,2

# EKF Source Options
# EKF Source Options
# Bitmask: 0:FuseAllVelocities
EK3_SRC_OPTIONS,1

# Position Horizontal Source (Primary)
# Position Horizontal Source (Primary)
# 0: None
# 3: GPS
# 4: Beacon
# 6: ExternalNav
EK3_SRC1_POSXY,3

# Position Vertical Source
# Position Vertical Source
# 0: None
# 1: Baro
# 2: RangeFinder
# 3: GPS
# 4: Beacon
# 6: ExternalNav
EK3_SRC1_POSZ,1

# Velocity Horizontal Source
# Velocity Horizontal Source
# 0: None
# 3: GPS
# 4: Beacon
# 5: OpticalFlow
# 6: ExternalNav
# 7: WheelEncoder
EK3_SRC1_VELXY,3

# Velocity Vertical Source
# Velocity Vertical Source
# 0: None
# 3: GPS
# 4: Beacon
# 6: ExternalNav
EK3_SRC1_VELZ,3

# Yaw Source
# Yaw Source
# 0: None
# 1: Compass
# 2: GPS
# 3: GPS with Compass Fallback
# 6: ExternalNav
# 8: GSF
EK3_SRC1_YAW,1

# Position Horizontal Source (Secondary)
# Position Horizontal Source (Secondary)
# 0: None
# 3: GPS
# 4: Beacon
# 6: ExternalNav
EK3_SRC2_POSXY,0

# Position Vertical Source (Secondary)
# Position Vertical Source (Secondary)
# 0: None
# 1: Baro
# 2: RangeFinder
# 3: GPS
# 4: Beacon
# 6: ExternalNav
EK3_SRC2_POSZ,1

# Velocity Horizontal Source (Secondary)
# Velocity Horizontal Source (Secondary)
# 0: None
# 3: GPS
# 4: Beacon
# 5: OpticalFlow
# 6: ExternalNav
# 7: WheelEncoder
EK3_SRC2_VELXY,0

# Velocity Vertical Source (Secondary)
# Velocity Vertical Source (Secondary)
# 0: None
# 3: GPS
# 4: Beacon
# 6: ExternalNav
EK3_SRC2_VELZ,0

# Yaw Source (Secondary)
# Yaw Source (Secondary)
# 0: None
# 1: Compass
# 2: GPS
# 3: GPS with Compass Fallback
# 6: ExternalNav
# 8: GSF
EK3_SRC2_YAW,0

# Position Horizontal Source (Tertiary)
# Position Horizontal Source (Tertiary)
# 0: None
# 3: GPS
# 4: Beacon
# 6: ExternalNav
EK3_SRC3_POSXY,0

# Position Vertical Source (Tertiary)
# Position Vertical Source (Tertiary)
# 0: None
# 1: Baro
# 2: RangeFinder
# 3: GPS
# 4: Beacon
# 6: ExternalNav
EK3_SRC3_POSZ,1

# Velocity Horizontal Source (Tertiary)
# Velocity Horizontal Source (Tertiary)
# 0: None
# 3: GPS
# 4: Beacon
# 5: OpticalFlow
# 6: ExternalNav
# 7: WheelEncoder
EK3_SRC3_VELXY,0

# Velocity Vertical Source (Tertiary)
# Velocity Vertical Source (Tertiary)
# 0: None
# 3: GPS
# 4: Beacon
# 6: ExternalNav
EK3_SRC3_VELZ,0

# Yaw Source (Tertiary)
# Yaw Source (Tertiary)
# 0: None
# 1: Compass
# 2: GPS
# 3: GPS with Compass Fallback
# 6: ExternalNav
# 8: GSF
EK3_SRC3_YAW,0

# Output complementary filter time constant (centi-sec)
# Sets the time constant of the output complementary filter/predictor in centi-seconds.
# Range: 10 50
# Increment: 5
# Units: cs (centiseconds)
EK3_TAU_OUTPUT,25

# Maximum terrain gradient
# Specifies the maximum gradient of the terrain below the vehicle when it is using range finder as a
# height reference
# Range: 0 0.2
# Increment: 0.01
EK3_TERR_GRAD,0.1

# GPS velocity innovation gate size
# This sets the percentage number of standard deviations applied to the GPS velocity measurement
# innovation consistency check. Decreasing it makes it more likely that good measurements will be
# rejected. Increasing it makes it more likely that bad measurements will be accepted. If
# EK3_GLITCH_RAD set to 0 the velocity innovations will be clipped instead of rejected if they exceed
# the gate size and a smaller value of EK3_VEL_I_GATE not exceeding 300 is recommended to limit the
# effect of GPS transient errors.
# Range: 100 1000
# Increment: 25
EK3_VEL_I_GATE,500

# GPS vertical velocity measurement noise (m/s)
# This sets a lower limit on the speed accuracy reported by the GPS receiver that is used to set
# vertical velocity observation noise. If the model of receiver used does not provide a speed accurcy
# estimate, then the parameter value will be used. Increasing it reduces the weighting of the GPS
# vertical velocity measurements.
# Range: 0.05 5.0
# Increment: 0.05
# Units: m/s (meters per second)
EK3_VELD_M_NSE,0.7

# GPS horizontal velocity measurement noise (m/s)
# This sets a lower limit on the speed accuracy reported by the GPS receiver that is used to set
# horizontal velocity observation noise. If the model of receiver used does not provide a speed
# accurcy estimate, then the parameter value will be used. Increasing it reduces the weighting of the
# GPS horizontal velocity measurements.
# Range: 0.05 5.0
# Increment: 0.05
# Units: m/s (meters per second)
EK3_VELNE_M_NSE,0.5

# Visual odometry maximum velocity error
# This is the 1-STD odometry velocity observation error that will be assumed when minimum quality is
# reported by the sensor. When quality is between max and min, the error will be calculated using
# linear interpolation between VIS_VERR_MIN and VIS_VERR_MAX.
# Range: 0.5 5.0
# Increment: 0.1
# Units: m/s (meters per second)
EK3_VIS_VERR_MAX,0.9

# Visual odometry minimum velocity error
# This is the 1-STD odometry velocity observation error that will be assumed when maximum quality is
# reported by the sensor. When quality is between max and min, the error will be calculated using
# linear interpolation between VIS_VERR_MIN and VIS_VERR_MAX.
# Range: 0.05 0.5
# Increment: 0.05
# Units: m/s (meters per second)
EK3_VIS_VERR_MIN,0.1

# Wheel odometry velocity error
# This is the 1-STD odometry velocity observation error that will be assumed when wheel encoder data
# is being fused.
# Range: 0.01 1.0
# Increment: 0.1
# Units: m/s (meters per second)
EK3_WENC_VERR,0.1

# Wind velocity process noise (m/s^2)
# This state process noise controls the growth of wind state error estimates. Increasing it makes wind
# estimation faster and noisier.
# Range: 0.01 2.0
# Increment: 0.1
# Units: m/s/s (meters per square second)
EK3_WIND_P_NSE,0.1

# Height rate to wind process noise scaler
# This controls how much the process noise on the wind states is increased when gaining or losing
# altitude to take into account changes in wind speed and direction with altitude. Increasing this
# parameter increases how rapidly the wind states adapt when changing altitude, but does make wind
# velocity estimation noiser.
# Range: 0.0 2.0
# Increment: 0.1
EK3_WIND_PSCALE,1

# Yaw measurement gate size
# This sets the percentage number of standard deviations applied to the magnetometer yaw measurement
# innovation consistency check. Decreasing it makes it more likely that good measurements will be
# rejected. Increasing it makes it more likely that bad measurements will be accepted.
# Range: 100 1000
# Increment: 25
EK3_YAW_I_GATE,300

# Yaw measurement noise (rad)
# This is the RMS value of noise in yaw measurements from the magnetometer. Increasing it reduces the
# weighting on these measurements.
# Range: 0.05 1.0
# Increment: 0.05
# Units: rad (radians)
EK3_YAW_M_NSE,0.5

# ESC Telemetry mavlink offset
# Offset to apply to ESC numbers when reporting as ESC_TELEMETRY packets over MAVLink. This allows
# high numbered motors to be displayed as low numbered ESCs for convenience on GCS displays. A value
# of 4 would send ESC on output 5 as ESC number 1 in ESC_TELEMETRY packets
# Increment: 1
# Range: 0 31
ESC_TLM_MAV_OFS,0
FBWB_CLIMB_RATE,2
FBWB_ELEV_REV,0

# Fence Action
# What action should be taken when fence is breached
# 0: Report Only
# 1: RTL
# 6: Guided
# 7: GuidedThrottlePass
FENCE_ACTION,1

# Fence Maximum Altitude
# Maximum altitude allowed before geofence triggers
# Units: m (meters)
# Range: 10 1000
# Increment: 1
FENCE_ALT_MAX,100

# Fence Minimum Altitude
# Minimum altitude allowed before geofence triggers
# Units: m (meters)
# Range: -100 100
# Increment: 1
FENCE_ALT_MIN,-10

# Fence Auto-Enable
# Auto-enable of fences. AutoEnableOnTakeoff enables all configured fences after autotakeoffs reach
# altitude. During autolandings the fences will be disabled.  AutoEnableDisableFloorOnLanding enables
# all configured fences after autotakeoffs reach altitude. During autolandings only the Minimum
# Altitude fence will be disabled. AutoEnableOnlyWhenArmed enables all configured fences, but no
# fences are disabled during autolandings. However, fence breaches are ignored while executing prior
# breach recovery actions which may include autolandings.
# Range: 0 3
# Increment: 1
# 0: AutoEnableOff
# 1: AutoEnableOnTakeoff
# 2: AutoEnableDisableFloorOnLanding
# 3: AutoEnableOnlyWhenArmed
FENCE_AUTOENABLE,0

# Fence enable/disable
# Allows you to enable (1) or disable (0) the fence functionality
# 0: Disabled
# 1: Enabled
FENCE_ENABLE,0

# Fence Margin
# Distance that autopilot's should maintain from the fence to avoid a breach
# Units: m (meters)
# Range: 1 10
FENCE_MARGIN,2

# Fence options
# 0:Disable mode change following fence action until fence breach is cleared. When bit 1 is set the
# allowable flight areas is the union of all polygon and circle fence areas instead of the
# intersection, which means a fence breach occurs only if you are outside all of the fence areas.
# Bitmask: 0:Disable mode change following fence action until fence breach is cleared, 1:Allow union of inclusion areas
FENCE_OPTIONS,1

# Circular Fence Radius
# Circle fence radius which when breached will cause an RTL
# Units: m (meters)
# Range: 30 10000
FENCE_RADIUS,300

# Fence Return Altitude
# Altitude the vehicle will transit to when a fence breach occurs
# Units: m (meters)
# Range: 0 32767
# Increment: 1
FENCE_RET_ALT,0

# Fence Return to Rally
# Should the vehicle return to fence return point or rally point
# Range: 0 1
# Increment: 1
# 0: Fence Return Point
# 1: Nearest Rally Point
FENCE_RET_RALLY,0

# Fence polygon point total
# Number of polygon points saved in eeprom (do not update manually)
# Range: 1 20
FENCE_TOTAL,0

# Fence Type
# Enabled fence types held as bitmask
# Bitmask: 0:Max altitude,1:Circle Centered on Home,2:Inclusion/Exclusion Circles+Polygons,3:Min altitude
FENCE_TYPE,4

# Enable
# Enable Gyro FFT analyser
# RebootRequired: True
# 0: Disabled
# 1: Enabled
FFT_ENABLE,0

# Filter Type
# Filter Type
# RebootRequired: True
# 0: Disable
# 1: Notch Filter
FILT1_TYPE,0

# Filter Type
# Filter Type
# RebootRequired: True
# 0: Disable
# 1: Notch Filter
FILT2_TYPE,0

# Filter Type
# Filter Type
# RebootRequired: True
# 0: Disable
# 1: Notch Filter
FILT3_TYPE,0

# Filter Type
# Filter Type
# RebootRequired: True
# 0: Disable
# 1: Notch Filter
FILT4_TYPE,0

# Filter Type
# Filter Type
# RebootRequired: True
# 0: Disable
# 1: Notch Filter
FILT5_TYPE,0

# Filter Type
# Filter Type
# RebootRequired: True
# 0: Disable
# 1: Notch Filter
FILT6_TYPE,0

# Filter Type
# Filter Type
# RebootRequired: True
# 0: Disable
# 1: Notch Filter
FILT7_TYPE,0

# Filter Type
# Filter Type
# RebootRequired: True
# 0: Disable
# 1: Notch Filter
FILT8_TYPE,0
FLAP_1_PERCNT,0
FLAP_1_SPEED,0
FLAP_2_PERCNT,0
FLAP_2_SPEED,0
FLAP_SLEWRATE,75
FLIGHT_OPTIONS,0

# Optical flow sensor type
# Optical flow sensor type
# RebootRequired: True
# 0: None
# 1: PX4Flow
# 2: Pixart
# 3: Bebop
# 4: CXOF
# 5: MAVLink
# 6: DroneCAN
# 7: MSP
# 8: UPFLOW
FLOW_TYPE,0
FLTMODE_CH,8

# Flight mode block from GCS
# Bitmask of flight modes to disable for GCS selection. Mode can still be accessed via RC or failsafe.
# Bitmask: 0:Manual,1:Circle,2:Stabilize,3:Training,4:ACRO,5:FBWA,6:FBWB,7:CRUISE,8:AUTOTUNE,9:Auto,10:Loiter,11:Takeoff,12:AVOID_ADSB,13:Guided,14:THERMAL,15:QSTABILIZE,16:QHOVER,17:QLOITER,18:QACRO,19:QAUTOTUNE
FLTMODE_GCSBLOCK,0
FLTMODE1,11
FLTMODE2,11
FLTMODE3,5
FLTMODE4,5
FLTMODE5,0
FLTMODE6,0

# Follow enable/disable
# Enabled/disable following a target
# 0: Disabled
# 1: Enabled
FOLL_ENABLE,0
FORMAT_VERSION,13

# Default downlink sensor id
# Change the default downlink sensor id (SPort only)
# -1: Disable                         14: 14                              22: 22
# 7: 7                                15: 15                              23: 23
# 8: 8                                16: 16                              24: 24
# 9: 9                                17: 17                              25: 25
# 10: 10                              18: 18                              26: 26
# 11: 11                              19: 19                              27: 27
# 12: 12                              20: 20
# 13: 13                              21: 21
FRSKY_DNLINK_ID,27

# First downlink sensor id
# Change the first extra downlink sensor id (SPort only)
# -1: Disable                         13: 13                              20: 20
# 7: 7                                14: 14                              21: 21
# 8: 8                                15: 15                              22: 22
# 9: 9                                16: 16                              23: 23
# 10: 10                              17: 17                              24: 24
# 11: 11                              18: 18                              25: 25
# 12: 12                              19: 19                              26: 26
FRSKY_DNLINK1_ID,20

# Second downlink sensor id
# Change the second extra downlink sensor id (SPort only)
# -1: Disable                         13: 13                              20: 20
# 7: 7                                14: 14                              21: 21
# 8: 8                                15: 15                              22: 22
# 9: 9                                16: 16                              23: 23
# 10: 10                              17: 17                              24: 24
# 11: 11                              18: 18                              25: 25
# 12: 12                              19: 19                              26: 26
FRSKY_DNLINK2_ID,7

# FRSky Telemetry Options
# A bitmask to set some FRSky Telemetry specific options
# Bitmask: 0:EnableAirspeedAndGroundspeed
FRSKY_OPTIONS,0

# Uplink sensor id
# Change the uplink sensor id (SPort only)
# -1: Disable                         13: 13                              20: 20
# 7: 7                                14: 14                              21: 21
# 8: 8                                15: 15                              22: 22
# 9: 9                                16: 16                              23: 23
# 10: 10                              17: 17                              24: 24
# 11: 11                              18: 18                              25: 25
# 12: 12                              19: 19                              26: 26
FRSKY_UPLINK_ID,13
FS_EKF_THRESH,0.8
FS_GCS_ENABL,0
FS_LONG_ACTN,0
FS_LONG_TIMEOUT,5
FS_SHORT_ACTN,0
FS_SHORT_TIMEOUT,1.5
FWD_BAT_IDX,0
FWD_BAT_VOLT_MAX,0
FWD_BAT_VOLT_MIN,0
GCS_PID_MASK,0

# Generator type
# Generator type
# RebootRequired: True
# 0: Disabled
# 1: IE 650w 800w Fuel Cell
# 2: IE 2.4kW Fuel Cell
# 3: Richenpower
GEN_TYPE,0
GLIDE_SLOPE_MIN,15
GLIDE_SLOPE_THR,5

# Automatic GPS configuration
# Controls if the autopilot should automatically configure the GPS based on the parameters and default
# settings
# 0: Disables automatic configuration
# 1: Enable automatic configuration for Serial GPSes only
# 2: Enable automatic configuration for DroneCAN as well
GPS_AUTO_CONFIG,0

# Automatic Switchover Setting
# Automatic switchover to GPS reporting best lock, 1:UseBest selects the GPS with highest status, if
# both are equal the GPS with highest satellite count is used 4:Use primary if 3D fix or better, will
# revert to 'UseBest' behaviour if 3D fix is lost on primary
# 0: Use primary
# 1: UseBest
# 2: Blend
# 4: Use primary if 3D fix or better
GPS_AUTO_SWITCH,0

# Multi GPS Blending Mask
# Determines which of the accuracy measures Horizontal position, Vertical Position and Speed are used
# to calculate the weighting on each GPS receiver when soft switching has been selected by setting
# GPS_AUTO_SWITCH to 2(Blend)
# Bitmask: 0:Horiz Pos,1:Vert Pos,2:Speed
GPS_BLEND_MASK,5

# GPS Node ID 1
# GPS Node id for first-discovered GPS.
# ReadOnly: True
GPS_CAN_NODEID1,0

# GPS Node ID 2
# GPS Node id for second-discovered GPS.
# ReadOnly: True
GPS_CAN_NODEID2,0

# GPS physical COM port
# The physical COM port on the connected device, currently only applies to SBF and GSOF GPS
# Range: 0 10
# Increment: 1
# RebootRequired: True
# 0: COM1(RS232) on GSOF
# 1: COM2(TTL) on GSOF
GPS_COM_PORT,1

# GPS physical COM port
# The physical COM port on the connected device, currently only applies to SBF and GSOF GPS
# Range: 0 10
# Increment: 1
# RebootRequired: True
GPS_COM_PORT2,1

# GPS delay in milliseconds
# Controls the amount of GPS  measurement delay that the autopilot compensates for. Set to zero to use
# the default delay for the detected GPS type.
# Units: ms (milliseconds)
# Range: 0 250
# RebootRequired: True
GPS_DELAY_MS,0

# GPS 2 delay in milliseconds
# Controls the amount of GPS  measurement delay that the autopilot compensates for. Set to zero to use
# the default delay for the detected GPS type.
# Units: ms (milliseconds)
# Range: 0 250
# RebootRequired: True
GPS_DELAY_MS2,0

# driver options
# Additional backend specific options
# Bitmask: 0:Use UART2 for moving baseline on ublox,1:Use base station for GPS yaw on SBF,2:Use baudrate 115200,3:Use dedicated CAN port b/w GPSes for moving baseline,4:Use ellipsoid height instead of AMSL, 5:Override GPS satellite health of L5 band from L1 health, 6:Enable RTCM full parse even for a single channel, 7:Disable automatic full RTCM parsing when RTCM seen on more than one channel
GPS_DRV_OPTIONS,0

# GNSS system configuration
# Bitmask for what GNSS system to use on the first GPS (all unchecked or zero to leave GPS as
# configured)
# Bitmask: 0:GPS,1:SBAS,2:Galileo,3:Beidou,4:IMES,5:QZSS,6:GLONASS
GPS_GNSS_MODE,0

# GNSS system configuration
# Bitmask for what GNSS system to use on the second GPS (all unchecked or zero to leave GPS as
# configured)
# Bitmask: 0:GPS,1:SBAS,2:Galileo,3:Beidou,4:IMES,5:QZSS,6:GLONASS
GPS_GNSS_MODE2,0

# Destination for GPS_INJECT_DATA MAVLink packets
# The GGS can send raw serial packets to inject data to multiple GPSes.
# 0: send to first GPS
# 1: send to 2nd GPS
# 127: send to all
GPS_INJECT_TO,127

# Moving base type
# Controls the type of moving base used if using moving base.
# RebootRequired: True
# 0: Relative to alternate GPS instance
# 1: RelativeToCustomBase
GPS_MB1_TYPE,0

# Moving base type
# Controls the type of moving base used if using moving base.
# RebootRequired: True
# 0: Relative to alternate GPS instance
# 1: RelativeToCustomBase
GPS_MB2_TYPE,0

# Minimum elevation
# This sets the minimum elevation of satellites above the horizon for them to be used for navigation.
# Setting this to -100 leaves the minimum elevation set to the GPS modules default.
# Range: -100 90
# Units: deg (degrees)
GPS_MIN_ELEV,-100

# Navigation filter setting
# Navigation filter engine setting
# 0: Portable
# 2: Stationary
# 3: Pedestrian
# 4: Automotive
# 5: Sea
# 6: Airborne1G
# 7: Airborne2G
# 8: Airborne4G
GPS_NAVFILTER,8

# Antenna X position offset
# X position of the first GPS antenna in body frame. Positive X is forward of the origin. Use antenna
# phase centroid location if provided by the manufacturer.
# Units: m (meters)
# Range: -5 5
# Increment: 0.01
GPS_POS1_X,0

# Antenna Y position offset
# Y position of the first GPS antenna in body frame. Positive Y is to the right of the origin. Use
# antenna phase centroid location if provided by the manufacturer.
# Units: m (meters)
# Range: -5 5
# Increment: 0.01
GPS_POS1_Y,0

# Antenna Z position offset
# Z position of the first GPS antenna in body frame. Positive Z is down from the origin. Use antenna
# phase centroid location if provided by the manufacturer.
# Units: m (meters)
# Range: -5 5
# Increment: 0.01
GPS_POS1_Z,0

# Antenna X position offset
# X position of the second GPS antenna in body frame. Positive X is forward of the origin. Use antenna
# phase centroid location if provided by the manufacturer.
# Units: m (meters)
# Range: -5 5
# Increment: 0.01
GPS_POS2_X,0

# Antenna Y position offset
# Y position of the second GPS antenna in body frame. Positive Y is to the right of the origin. Use
# antenna phase centroid location if provided by the manufacturer.
# Units: m (meters)
# Range: -5 5
# Increment: 0.01
GPS_POS2_Y,0

# Antenna Z position offset
# Z position of the second GPS antenna in body frame. Positive Z is down from the origin. Use antenna
# phase centroid location if provided by the manufacturer.
# Units: m (meters)
# Range: -5 5
# Increment: 0.01
GPS_POS2_Z,0

# Primary GPS
# This GPS will be used when GPS_AUTO_SWITCH is 0 and used preferentially with GPS_AUTO_SWITCH = 4.
# Increment: 1
# 0: FirstGPS
# 1: SecondGPS
GPS_PRIMARY,0

# GPS update rate in milliseconds
# Controls how often the GPS should provide a position update. Lowering below 5Hz(default) is not
# allowed. Raising the rate above 5Hz usually provides little benefit and for some GPS (eg Ublox M9N)
# can severely impact performance.
# Units: ms (milliseconds)
# Range: 50 200
# 100: 10Hz
# 125: 8Hz
# 200: 5Hz
GPS_RATE_MS,100

# GPS 2 update rate in milliseconds
# Controls how often the GPS should provide a position update. Lowering below 5Hz(default) is not
# allowed. Raising the rate above 5Hz usually provides little benefit and for some GPS (eg Ublox M9N)
# can severely impact performance.
# Units: ms (milliseconds)
# Range: 50 200
# 100: 10Hz
# 125: 8Hz
# 200: 5Hz
GPS_RATE_MS2,100

# Raw data logging
# Handles logging raw data; on uBlox chips that support raw data this will log RXM messages into
# logger; on Septentrio this will log on the equipment's SD card and when set to 2, the autopilot will
# try to stop logging after disarming and restart after arming
# RebootRequired: True
# 0: Ignore
# 1: Always log
# 2: Stop logging when disarmed (SBF only)
# 5: Only log every five samples (uBlox only)
GPS_RAW_DATA,0

# Save GPS configuration
# Determines whether the configuration for this GPS should be written to non-volatile memory on the
# GPS. Currently working for UBlox 6 series and above.
# 0: Do not save config
# 1: Save config
# 2: Save only when needed
GPS_SAVE_CFG,2

# SBAS Mode
# This sets the SBAS (satellite based augmentation system) mode if available on this GPS. If set to 2
# then the SBAS mode is not changed in the GPS. Otherwise the GPS will be reconfigured to
# enable/disable SBAS. Disabling SBAS may be worthwhile in some parts of the world where an SBAS
# signal is available but the baseline is too long to be useful.
# 0: Disabled
# 1: Enabled
# 2: NoChange
GPS_SBAS_MODE,2

# Swift Binary Protocol Logging Mask
# Masked with the SBP msg_type field to determine whether SBR1/SBR2 data is logged
# 0: None (0x0000)
# -1: All (0xFFFF)
# -256: External only (0xFF00)
GPS_SBP_LOGMASK,-256

# 1st GPS type
# GPS type of 1st GPS
# RebootRequired: True
# 0: None                                              15: NOVA
# 1: AUTO                                              16: HemisphereNMEA
# 2: uBlox                                             17: uBlox-MovingBaseline-Base
# 5: NMEA                                              18: uBlox-MovingBaseline-Rover
# 6: SiRF                                              19: MSP
# 7: HIL                                               20: AllyStar
# 8: SwiftNav                                          21: ExternalAHRS
# 9: DroneCAN                                          22: DroneCAN-MovingBaseline-Base
# 10: SBF                                              23: DroneCAN-MovingBaseline-Rover
# 11: GSOF                                             24: UnicoreNMEA
# 13: ERB                                              25: UnicoreMovingBaselineNMEA
# 14: MAV                                              26: SBF-DualAntenna
GPS_TYPE,21

# 2nd GPS type
# GPS type of 2nd GPS
# RebootRequired: True
# 0: None                                              15: NOVA
# 1: AUTO                                              16: HemisphereNMEA
# 2: uBlox                                             17: uBlox-MovingBaseline-Base
# 5: NMEA                                              18: uBlox-MovingBaseline-Rover
# 6: SiRF                                              19: MSP
# 7: HIL                                               20: AllyStar
# 8: SwiftNav                                          21: ExternalAHRS
# 9: DroneCAN                                          22: DroneCAN-MovingBaseline-Base
# 10: SBF                                              23: DroneCAN-MovingBaseline-Rover
# 11: GSOF                                             24: UnicoreNMEA
# 13: ERB                                              25: UnicoreMovingBaselineNMEA
# 14: MAV                                              26: SBF-DualAntenna
GPS_TYPE2,0

# First DroneCAN GPS NODE ID
# GPS Node id for first GPS. If 0 the gps will be automatically selected on a first-come-first-GPS
# basis.
GPS1_CAN_OVRIDE,0

# Second DroneCAN GPS NODE ID
# GPS Node id for second GPS. If 0 the gps will be automatically selected on a second-come-second-GPS
# basis.
GPS2_CAN_OVRIDE,0

# Gripper Enable/Disable
# Gripper enable/disable
# 0: Disabled
# 1: Enabled
GRIP_ENABLE,0
GROUND_STEER_ALT,0
GROUND_STEER_DPS,90

# PID Derivative Gain
# D Gain which produces an output that is proportional to the rate of change of the error
GUIDED_D,0

# PID Derivative FeedForward Gain
# FF D Gain which produces an output that is proportional to the rate of change of the target
# Range: 0 0.02
# Increment: 0.0001
GUIDED_D_FF,0

# FF FeedForward Gain
# FF Gain which produces an output value that is proportional to the demanded input
GUIDED_FF,0

# PID Derivative term filter frequency in Hz
# Derivative filter frequency in Hz
# Units: Hz (hertz)
GUIDED_FLTD,5

# PID Error filter frequency in Hz
# Error filter frequency in Hz
# Units: Hz (hertz)
GUIDED_FLTE,5

# PID Target filter frequency in Hz
# Target filter frequency in Hz
# Units: Hz (hertz)
GUIDED_FLTT,5

# PID Integral Gain
# I Gain which produces an output that is proportional to both the magnitude and the duration of the
# error
GUIDED_I,0

# PID Integral Maximum
# The maximum/minimum value that the I term can output
GUIDED_IMAX,10

# PID Error notch filter index
# PID Error notch filter index
# Range: 1 8
GUIDED_NEF,0

# PID Target notch filter index
# PID Target notch filter index
# Range: 1 8
GUIDED_NTF,0

# PID Proportional Gain
# P Gain which produces an output value that is proportional to the current error value
GUIDED_P,5000

# PD sum maximum
# The maximum/minimum value that the sum of the P and D term can output
GUIDED_PDMX,0

# Slew rate limit
# Sets an upper limit on the slew rate produced by the combined P and D gains. If the amplitude of the
# control action produced by the rate feedback exceeds this value, then the D+P gain is reduced to
# respect the limit. This limits the amplitude of high frequency oscillations caused by an excessive
# gain. The limit should be set to no more than 25% of the actuators maximum slew rate to allow for
# load effects. Note: The gain will not be reduced to less than 10% of the nominal value. A value of
# zero will disable this feature.
# Range: 0 200
# Increment: 0.5
GUIDED_SMAX,0
HOME_RESET_ALT,0

# Enable ICEngine control
# This enables internal combustion engine control
# 0: Disabled
# 1: Enabled
ICE_ENABLE,0
INITIAL_MODE,0

# Body-fixed accelerometer
# The body-fixed accelerometer to be used for trim calculation
# 1: IMU 1
# 2: IMU 2
# 3: IMU 3
INS_ACC_BODYFIX,2

# Accelerometer ID
# Accelerometer sensor ID, taking into account its type, bus and instance
# ReadOnly: True
INS_ACC_ID,3277358

# Calibration temperature for 1st accelerometer
# Temperature that the 1st accelerometer was calibrated at
# Units: degC (degrees Celsius)
# Calibration: 1
INS_ACC1_CALTEMP,-300

# Calibration temperature for 2nd accelerometer
# Temperature that the 2nd accelerometer was calibrated at
# Units: degC (degrees Celsius)
# Calibration: 1
INS_ACC2_CALTEMP,-300

# Accelerometer2 ID
# Accelerometer2 sensor ID, taking into account its type, bus and instance
# ReadOnly: True
INS_ACC2_ID,2753028

# Accelerometer2 offsets of X axis
# Accelerometer2 offsets of X axis. This is setup using the acceleration calibration or level
# operations
# Units: m/s/s (meters per square second)
# Range: -3.5 3.5
# Calibration: 1
INS_ACC2OFFS_X,0

# Accelerometer2 offsets of Y axis
# Accelerometer2 offsets of Y axis. This is setup using the acceleration calibration or level
# operations
# Units: m/s/s (meters per square second)
# Range: -3.5 3.5
# Calibration: 1
INS_ACC2OFFS_Y,0

# Accelerometer2 offsets of Z axis
# Accelerometer2 offsets of Z axis. This is setup using the acceleration calibration or level
# operations
# Units: m/s/s (meters per square second)
# Range: -3.5 3.5
# Calibration: 1
INS_ACC2OFFS_Z,0

# Accelerometer2 scaling of X axis
# Accelerometer2 scaling of X axis.  Calculated during acceleration calibration routine
# Range: 0.8 1.2
# Calibration: 1
INS_ACC2SCAL_X,1

# Accelerometer2 scaling of Y axis
# Accelerometer2 scaling of Y axis  Calculated during acceleration calibration routine
# Range: 0.8 1.2
# Calibration: 1
INS_ACC2SCAL_Y,1

# Accelerometer2 scaling of Z axis
# Accelerometer2 scaling of Z axis  Calculated during acceleration calibration routine
# Range: 0.8 1.2
# Calibration: 1
INS_ACC2SCAL_Z,1

# Calibration temperature for 3rd accelerometer
# Temperature that the 3rd accelerometer was calibrated at
# Units: degC (degrees Celsius)
# Calibration: 1
INS_ACC3_CALTEMP,-300

# Accelerometer3 ID
# Accelerometer3 sensor ID, taking into account its type, bus and instance
# ReadOnly: True
INS_ACC3_ID,2753036

# Accelerometer3 offsets of X axis
# Accelerometer3 offsets of X axis. This is setup using the acceleration calibration or level
# operations
# Units: m/s/s (meters per square second)
# Range: -3.5 3.5
# Calibration: 1
INS_ACC3OFFS_X,0

# Accelerometer3 offsets of Y axis
# Accelerometer3 offsets of Y axis. This is setup using the acceleration calibration or level
# operations
# Units: m/s/s (meters per square second)
# Range: -3.5 3.5
# Calibration: 1
INS_ACC3OFFS_Y,0

# Accelerometer3 offsets of Z axis
# Accelerometer3 offsets of Z axis. This is setup using the acceleration calibration or level
# operations
# Units: m/s/s (meters per square second)
# Range: -3.5 3.5
# Calibration: 1
INS_ACC3OFFS_Z,0

# Accelerometer3 scaling of X axis
# Accelerometer3 scaling of X axis.  Calculated during acceleration calibration routine
# Range: 0.8 1.2
# Calibration: 1
INS_ACC3SCAL_X,1

# Accelerometer3 scaling of Y axis
# Accelerometer3 scaling of Y axis  Calculated during acceleration calibration routine
# Range: 0.8 1.2
# Calibration: 1
INS_ACC3SCAL_Y,1

# Accelerometer3 scaling of Z axis
# Accelerometer3 scaling of Z axis  Calculated during acceleration calibration routine
# Range: 0.8 1.2
# Calibration: 1
INS_ACC3SCAL_Z,1

# Accel filter cutoff frequency
# Filter cutoff frequency for accelerometers. This can be set to a lower value to try to cope with
# very high vibration levels in aircraft. A value of zero means no filtering (not recommended!)
# Units: Hz (hertz)
# Range: 0 256
INS_ACCEL_FILTER,20

# Accelerometer offsets of X axis
# Accelerometer offsets of X axis. This is setup using the acceleration calibration or level
# operations
# Units: m/s/s (meters per square second)
# Range: -3.5 3.5
# Calibration: 1
INS_ACCOFFS_X,0

# Accelerometer offsets of Y axis
# Accelerometer offsets of Y axis. This is setup using the acceleration calibration or level
# operations
# Units: m/s/s (meters per square second)
# Range: -3.5 3.5
# Calibration: 1
INS_ACCOFFS_Y,0

# Accelerometer offsets of Z axis
# Accelerometer offsets of Z axis. This is setup using the acceleration calibration or level
# operations
# Units: m/s/s (meters per square second)
# Range: -3.5 3.5
# Calibration: 1
INS_ACCOFFS_Z,0

# Accelerometer scaling of X axis
# Accelerometer scaling of X axis.  Calculated during acceleration calibration routine
# Range: 0.8 1.2
# Calibration: 1
INS_ACCSCAL_X,1

# Accelerometer scaling of Y axis
# Accelerometer scaling of Y axis  Calculated during acceleration calibration routine
# Range: 0.8 1.2
# Calibration: 1
INS_ACCSCAL_Y,1

# Accelerometer scaling of Z axis
# Accelerometer scaling of Z axis  Calculated during acceleration calibration routine
# Range: 0.8 1.2
# Calibration: 1
INS_ACCSCAL_Z,1

# IMU enable mask
# Bitmask of IMUs to enable. It can be used to prevent startup of specific detected IMUs
# Bitmask: 0:FirstIMU,1:SecondIMU,2:ThirdIMU,3:FourthIMU,4:FifthIMU,5:SixthIMU,6:SeventhIMU
INS_ENABLE_MASK,127

# Fast sampling mask
# Mask of IMUs to enable fast sampling on, if available
# Bitmask: 0:FirstIMU,1:SecondIMU,2:ThirdIMU
INS_FAST_SAMPLE,1

# Gyro Calibration scheme
# Conrols when automatic gyro calibration is performed
# 0: Never
# 1: Start-up only
INS_GYR_CAL,1

# Gyro ID
# Gyro sensor ID, taking into account its type, bus and instance
# ReadOnly: True
INS_GYR_ID,3277102

# Calibration temperature for 1st gyroscope
# Temperature that the 1st gyroscope was calibrated at
# Units: degC (degrees Celsius)
# Calibration: 1
INS_GYR1_CALTEMP,0

# Calibration temperature for 2nd gyroscope
# Temperature that the 2nd gyroscope was calibrated at
# Units: degC (degrees Celsius)
# Calibration: 1
INS_GYR2_CALTEMP,25.02919

# Gyro2 ID
# Gyro2 sensor ID, taking into account its type, bus and instance
# ReadOnly: True
INS_GYR2_ID,2752772

# Gyro2 offsets of X axis
# Gyro2 sensor offsets of X axis. This is setup on each boot during gyro calibrations
# Units: rad/s (radians per second)
# Calibration: 1
INS_GYR2OFFS_X,-8.7424E-06

# Gyro2 offsets of Y axis
# Gyro2 sensor offsets of Y axis. This is setup on each boot during gyro calibrations
# Units: rad/s (radians per second)
# Calibration: 1
INS_GYR2OFFS_Y,3.52615E-05

# Gyro2 offsets of Z axis
# Gyro2 sensor offsets of Z axis. This is setup on each boot during gyro calibrations
# Units: rad/s (radians per second)
# Calibration: 1
INS_GYR2OFFS_Z,-2.886211E-05

# Calibration temperature for 3rd gyroscope
# Temperature that the 3rd gyroscope was calibrated at
# Units: degC (degrees Celsius)
# Calibration: 1
INS_GYR3_CALTEMP,25.02919

# Gyro3 ID
# Gyro3 sensor ID, taking into account its type, bus and instance
# ReadOnly: True
INS_GYR3_ID,2752780

# Gyro3 offsets of X axis
# Gyro3 sensor offsets of X axis. This is setup on each boot during gyro calibrations
# Units: rad/s (radians per second)
# Calibration: 1
INS_GYR3OFFS_X,3.173848E-05

# Gyro3 offsets of Y axis
# Gyro3 sensor offsets of Y axis. This is setup on each boot during gyro calibrations
# Units: rad/s (radians per second)
# Calibration: 1
INS_GYR3OFFS_Y,5.807671E-06

# Gyro3 offsets of Z axis
# Gyro3 sensor offsets of Z axis. This is setup on each boot during gyro calibrations
# Units: rad/s (radians per second)
# Calibration: 1
INS_GYR3OFFS_Z,4.565936E-08

# Gyro filter cutoff frequency
# Filter cutoff frequency for gyroscopes. This can be set to a lower value to try to cope with very
# high vibration levels in aircraft. A value of zero means no filtering (not recommended!)
# Units: Hz (hertz)
# Range: 0 256
INS_GYRO_FILTER,20

# Gyro rate for IMUs with Fast Sampling enabled
# Gyro rate for IMUs with fast sampling enabled. The gyro rate is the sample rate at which the IMU
# filters operate and needs to be at least double the maximum filter frequency. If the sensor does not
# support the selected rate the next highest supported rate will be used. For IMUs which do not
# support fast sampling this setting is ignored and the default gyro rate of 1Khz is used.
# RebootRequired: True
# 0: 1kHz
# 1: 2kHz
# 2: 4kHz
# 3: 8kHz
INS_GYRO_RATE,0

# Gyro offsets of X axis
# Gyro sensor offsets of X axis. This is setup on each boot during gyro calibrations
# Units: rad/s (radians per second)
# Calibration: 1
INS_GYROFFS_X,-0.0001591563

# Gyro offsets of Y axis
# Gyro sensor offsets of Y axis. This is setup on each boot during gyro calibrations
# Units: rad/s (radians per second)
# Calibration: 1
INS_GYROFFS_Y,-4.70697E-05

# Gyro offsets of Z axis
# Gyro sensor offsets of Z axis. This is setup on each boot during gyro calibrations
# Units: rad/s (radians per second)
# Calibration: 1
INS_GYROFFS_Z,1.655334E-05

# Harmonic Notch Filter enable
# Harmonic Notch Filter enable
# 0: Disabled
# 1: Enabled
INS_HNTC2_ENABLE,0

# Harmonic Notch Filter enable
# Harmonic Notch Filter enable
# 0: Disabled
# 1: Enabled
INS_HNTCH_ENABLE,0

# sample count per batch
# Number of samples to take when logging streams of IMU sensor readings.  Will be rounded down to a
# multiple of 32. This option takes effect on the next reboot.
# Increment: 32
# RebootRequired: True
INS_LOG_BAT_CNT,1024

# logging count
# Number of samples to push to count every INS_LOG_BAT_LGIN
# Increment: 1
INS_LOG_BAT_LGCT,32

# logging interval
# Interval between pushing samples to the AP_Logger log
# Units: ms (milliseconds)
# Increment: 10
INS_LOG_BAT_LGIN,20

# Sensor Bitmask
# Bitmap of which IMUs to log batch data for. This option takes effect on the next reboot.
# Bitmask: 0:IMU1,1:IMU2,2:IMU3
# RebootRequired: True
INS_LOG_BAT_MASK,0

# Batch Logging Options Mask
# Options for the BatchSampler.
# Bitmask: 0:Sensor-Rate Logging (sample at full sensor rate seen by AP), 1: Sample post-filtering, 2: Sample pre- and post-filter
INS_LOG_BAT_OPT,0

# IMU accelerometer X position
# X position of the first IMU Accelerometer in body frame. Positive X is forward of the origin.
# Attention: The IMU should be located as close to the vehicle c.g. as practical so that the value of
# this parameter is minimised. Failure to do so can result in noisy navigation velocity measurements
# due to vibration and IMU gyro noise. If the IMU cannot be moved and velocity noise is a problem, a
# location closer to the IMU can be used as the body frame origin.
# Units: m (meters)
# Range: -5 5
# Increment: 0.01
INS_POS1_X,0

# IMU accelerometer Y position
# Y position of the first IMU accelerometer in body frame. Positive Y is to the right of the origin.
# Attention: The IMU should be located as close to the vehicle c.g. as practical so that the value of
# this parameter is minimised. Failure to do so can result in noisy navigation velocity measurements
# due to vibration and IMU gyro noise. If the IMU cannot be moved and velocity noise is a problem, a
# location closer to the IMU can be used as the body frame origin.
# Units: m (meters)
# Range: -5 5
# Increment: 0.01
INS_POS1_Y,0

# IMU accelerometer Z position
# Z position of the first IMU accelerometer in body frame. Positive Z is down from the origin.
# Attention: The IMU should be located as close to the vehicle c.g. as practical so that the value of
# this parameter is minimised. Failure to do so can result in noisy navigation velocity measurements
# due to vibration and IMU gyro noise. If the IMU cannot be moved and velocity noise is a problem, a
# location closer to the IMU can be used as the body frame origin.
# Units: m (meters)
# Range: -5 5
# Increment: 0.01
INS_POS1_Z,0

# IMU accelerometer X position
# X position of the second IMU accelerometer in body frame. Positive X is forward of the origin.
# Attention: The IMU should be located as close to the vehicle c.g. as practical so that the value of
# this parameter is minimised. Failure to do so can result in noisy navigation velocity measurements
# due to vibration and IMU gyro noise. If the IMU cannot be moved and velocity noise is a problem, a
# location closer to the IMU can be used as the body frame origin.
# Units: m (meters)
# Range: -5 5
# Increment: 0.01
INS_POS2_X,0

# IMU accelerometer Y position
# Y position of the second IMU accelerometer in body frame. Positive Y is to the right of the origin.
# Attention: The IMU should be located as close to the vehicle c.g. as practical so that the value of
# this parameter is minimised. Failure to do so can result in noisy navigation velocity measurements
# due to vibration and IMU gyro noise. If the IMU cannot be moved and velocity noise is a problem, a
# location closer to the IMU can be used as the body frame origin.
# Units: m (meters)
# Range: -5 5
# Increment: 0.01
INS_POS2_Y,0

# IMU accelerometer Z position
# Z position of the second IMU accelerometer in body frame. Positive Z is down from the origin.
# Attention: The IMU should be located as close to the vehicle c.g. as practical so that the value of
# this parameter is minimised. Failure to do so can result in noisy navigation velocity measurements
# due to vibration and IMU gyro noise. If the IMU cannot be moved and velocity noise is a problem, a
# location closer to the IMU can be used as the body frame origin.
# Units: m (meters)
# Range: -5 5
# Increment: 0.01
INS_POS2_Z,0

# IMU accelerometer X position
# X position of the third IMU accelerometer in body frame. Positive X is forward of the origin.
# Attention: The IMU should be located as close to the vehicle c.g. as practical so that the value of
# this parameter is minimised. Failure to do so can result in noisy navigation velocity measurements
# due to vibration and IMU gyro noise. If the IMU cannot be moved and velocity noise is a problem, a
# location closer to the IMU can be used as the body frame origin.
# Units: m (meters)
# Range: -10 10
INS_POS3_X,0

# IMU accelerometer Y position
# Y position of the third IMU accelerometer in body frame. Positive Y is to the right of the origin.
# Attention: The IMU should be located as close to the vehicle c.g. as practical so that the value of
# this parameter is minimised. Failure to do so can result in noisy navigation velocity measurements
# due to vibration and IMU gyro noise. If the IMU cannot be moved and velocity noise is a problem, a
# location closer to the IMU can be used as the body frame origin.
# Units: m (meters)
# Range: -5 5
# Increment: 0.01
INS_POS3_Y,0

# IMU accelerometer Z position
# Z position of the third IMU accelerometer in body frame. Positive Z is down from the origin.
# Attention: The IMU should be located as close to the vehicle c.g. as practical so that the value of
# this parameter is minimised. Failure to do so can result in noisy navigation velocity measurements
# due to vibration and IMU gyro noise. If the IMU cannot be moved and velocity noise is a problem, a
# location closer to the IMU can be used as the body frame origin.
# Units: m (meters)
# Range: -5 5
# Increment: 0.01
INS_POS3_Z,0

# Raw logging options
# Raw logging options bitmask
# Bitmask: 0:Log primary gyro only, 1:Log all gyros, 2:Post filter, 3: Pre and post filter
INS_RAW_LOG_OPT,0

# Stillness threshold for detecting if we are moving
# Threshold to tolerate vibration to determine if vehicle is motionless. This depends on the frame
# type and if there is a constant vibration due to motors before launch or after landing. Total
# motionless is about 0.05. Suggested values: Planes/rover use 0.1, multirotors use 1, tradHeli uses 5
# Range: 0.05 50
INS_STILL_THRESH,0.05

# Options for temperature calibration
# This enables optional temperature calibration features. Setting PersistParams will save the
# accelerometer and temperature calibration parameters in the bootloader sector on the next update of
# the bootloader.
# Bitmask: 0:PersistParams
INS_TCAL_OPTIONS,0

# Enable temperature calibration
# Enable the use of temperature calibration parameters for this IMU. For automatic learning set to 2
# and also set the INS_TCALn_TMAX to the target temperature, then reboot
# RebootRequired: True
# 0: Disabled
# 1: Enabled
# 2: LearnCalibration
INS_TCAL1_ENABLE,0

# Enable temperature calibration
# Enable the use of temperature calibration parameters for this IMU. For automatic learning set to 2
# and also set the INS_TCALn_TMAX to the target temperature, then reboot
# RebootRequired: True
# 0: Disabled
# 1: Enabled
# 2: LearnCalibration
INS_TCAL2_ENABLE,0

# Enable temperature calibration
# Enable the use of temperature calibration parameters for this IMU. For automatic learning set to 2
# and also set the INS_TCALn_TMAX to the target temperature, then reboot
# RebootRequired: True
# 0: Disabled
# 1: Enabled
# 2: LearnCalibration
INS_TCAL3_ENABLE,0

# Accel cal trim option
# Specifies how the accel cal routine determines the trims
# 0: Don't adjust the trims
# 1: Assume first orientation was level
# 2: Assume ACC_BODYFIX is perfectly aligned to the vehicle
INS_TRIM_OPTION,1

# Use first IMU for attitude, velocity and position estimates
# Use first IMU for attitude, velocity and position estimates
# 0: Disabled
# 1: Enabled
INS_USE,1

# Use second IMU for attitude, velocity and position estimates
# Use second IMU for attitude, velocity and position estimates
# 0: Disabled
# 1: Enabled
INS_USE2,1

# Use third IMU for attitude, velocity and position estimates
# Use third IMU for attitude, velocity and position estimates
# 0: Disabled
# 1: Enabled
INS_USE3,1

# Number of motor poles
# Sets the number of motor poles to calculate the correct RPM value
KDE_NPOLE,14
KFF_RDDRMIX,0.5
KFF_THR2PTCH,0

# Landing auto-abort slope threshold
# This parameter is used when using a rangefinder during landing for altitude correction from baro
# drift (RNGFND_LANDING=1) and the altitude correction indicates your actual altitude is higher than
# the intended slope path. Normally it would pitch down steeply but that can result in a crash with
# high airspeed so this allows remembering the baro offset and self-abort the landing and come around
# for another landing with the correct baro offset applied for a perfect slope. An auto-abort
# go-around will only happen once, next attempt will not auto-abort again. This operation happens
# entirely automatically in AUTO mode. This value is the delta degrees threshold to trigger the
# go-around compared to the original slope. Example: if set to 5 deg and the mission planned slope is
# 15 deg then if the new slope is 21 then it will go-around. Set to 0 to disable. Requires
# LAND_SLOPE_RCALC > 0.
# Range: 0 90
# Units: deg (degrees)
# Increment: 0.1
LAND_ABORT_DEG,0

# Landing abort using throttle
# Allow a landing abort to trigger with an input throttle >= 90%. This works with or without
# stick-mixing enabled.
# 0: Disabled
# 1: Enabled
LAND_ABORT_THR,0

# Landing disarm delay
# After a landing has completed using a LAND waypoint, automatically disarm after this many seconds
# have passed. Use 0 to not disarm.
# Units: s (seconds)
# Increment: 1
# Range: 0 127
LAND_DISARMDELAY,20

# Landing flap percentage
# The amount of flaps (as a percentage) to apply in the landing approach and flare of an automatic
# landing
# Range: 0 100
# Units: % (percent)
# Increment: 1
LAND_FLAP_PERCNT,0

# Flare aim point adjustment percentage.
# This parameter controls how much the aim point is moved to allow for the time spent in the flare
# manoeuvre. When set to 100% the aim point is adjusted on the assumption that the flare sink rate
# controller instantly achieves the sink rate set by TECS_LAND_SINK. when set to 0%, no aim point
# adjustment is made. If the plane consistently touches down short of the aim point reduce the
# parameter and vice verse.
# Range: 0 100
# Units: % (percent)
# Increment: 1
LAND_FLARE_AIM,50

# Landing flare altitude
# Altitude in autoland at which to lock heading and flare to the LAND_PITCH_DEG pitch. Note that this
# option is secondary to LAND_FLARE_SEC. For a good landing it preferable that the flare is triggered
# by LAND_FLARE_SEC.
# Units: m (meters)
# Range: 0 30
# Increment: 0.1
LAND_FLARE_ALT,3

# Landing flare time
# Vertical time before landing point at which to lock heading and flare with the motor stopped. This
# is vertical time, and is calculated based solely on the current height above the ground and the
# current descent rate.  Set to 0 if you only wish to flare based on altitude (see LAND_FLARE_ALT).
# Units: s (seconds)
# Range: 0 10
# Increment: 0.1
LAND_FLARE_SEC,2

# Landing options bitmask
# Bitmask of options to use with landing.
# Bitmask: 0: honor min throttle during landing flare,1: Increase Target landing airspeed constraint From Trim Airspeed to AIRSPEED_MAX
LAND_OPTIONS,0

# Landing pre-flare altitude
# Altitude to trigger pre-flare flight stage where LAND_PF_ARSPD controls airspeed. The pre-flare
# flight stage trigger works just like LAND_FLARE_ALT but higher. Disabled when LAND_PF_ARSPD is 0.
# Units: m (meters)
# Range: 0 30
# Increment: 0.1
LAND_PF_ALT,10

# Landing pre-flare airspeed
# Desired airspeed during pre-flare flight stage. This is useful to reduce airspeed just before the
# flare. Use 0 to disable.
# Units: m/s (meters per second)
# Range: 0 30
# Increment: 0.1
LAND_PF_ARSPD,0

# Landing pre-flare time
# Vertical time to ground to trigger pre-flare flight stage where LAND_PF_ARSPD controls airspeed.
# This pre-flare flight stage trigger works just like LAND_FLARE_SEC but earlier. Disabled when
# LAND_PF_ARSPD is 0.
# Units: s (seconds)
# Range: 0 10
# Increment: 0.1
LAND_PF_SEC,6

# Landing Pitch
# Used in autoland to give the minimum pitch in the final stage of landing (after the flare). This
# parameter can be used to ensure that the final landing attitude is appropriate for the type of
# undercarriage on the aircraft. Note that it is a minimum pitch only - the landing code will control
# pitch above this value to try to achieve the configured landing sink rate.
# Units: deg (degrees)
# Range: -20 20
# Increment: 10
LAND_PITCH_DEG,0

# Landing slope re-calc threshold
# This parameter is used when using a rangefinder during landing for altitude correction from baro
# drift (RNGFND_LANDING=1) and the altitude correction indicates your altitude is lower than the
# intended slope path. This value is the threshold of the correction to re-calculate the landing
# approach slope. Set to zero to keep the original slope all the way down and any detected baro drift
# will be corrected by pitching/throttling up to snap back to resume the original slope path.
# Otherwise, when a rangefinder altitude correction exceeds this threshold it will trigger a slope
# re-calculate to give a shallower slope. This also smoothes out the approach when flying over objects
# such as trees. Recommend a value of 2m.
# Range: 0 5
# Units: m (meters)
# Increment: 0.5
LAND_SLOPE_RCALC,2

# Set servos to neutral after landing
# When enabled, after an autoland and auto-disarm via LAND_DISARMDELAY happens then set all servos to
# neutral. This is helpful when an aircraft has a rough landing upside down or a crazy angle causing
# the servos to strain.
# 0: Disabled
# 1: Servos to Neutral
# 2: Servos to Zero PWM
LAND_THEN_NEUTRL,0

# Landing throttle slew rate
# This parameter sets the slew rate for the throttle during auto landing. When this is zero the
# THR_SLEWRATE parameter is used during landing. The value is a percentage throttle change per second,
# so a value of 20 means to advance the throttle over 5 seconds on landing. Values below 50 are not
# recommended as it may cause a stall when airspeed is low and you can not throttle up fast enough.
# Units: % (percent)
# Range: 0 127
# Increment: 1
LAND_THR_SLEW,0

# Auto-landing type
# Specifies the auto-landing type to use
# 0: Standard Glide Slope
# 1: Deepstall
LAND_TYPE,0

# Headwind Compensation when Landing
# This param controls how much headwind compensation is used when landing.  Headwind speed component
# multiplied by this parameter is added to TECS_LAND_ARSPD command.  Set to Zero to disable.  Note:
# The target landing airspeed command is still limited to AIRSPEED_MAX.
# Range: 0 100
# Units: % (percent)
# Increment: 1
LAND_WIND_COMP,50
LEVEL_ROLL_LIMIT,5

# Enable landing gear
# Enable landing gear control
# 0: Disabled
# 1: Enabled
LGR_ENABLE,0

# AP_Logger Backend Storage type
# Bitmap of what Logger backend types to enable. Block-based logging is available on SITL and boards
# with dataflash chips. Multiple backends can be selected.
# Bitmask: 0:File,1:MAVLink,2:Block
LOG_BACKEND_TYPE,1
LOG_BITMASK,65535

# Maximum logging rate for block backend
# This sets the maximum rate that streaming log messages will be logged to the block backend. A value
# of zero means that rate limiting is disabled.
# Units: Hz (hertz)
# Range: 0 1000
# Increment: 0.1
LOG_BLK_RATEMAX,0

# Maximum logging rate when disarmed
# This sets the maximum rate that streaming log messages will be logged to any backend when disarmed.
# A value of zero means that the normal backend rate limit is applied.
# Units: Hz (hertz)
# Range: 0 1000
# Increment: 0.1
LOG_DARM_RATEMAX,0

# Enable logging while disarmed
# If LOG_DISARMED is set to 1 then logging will be enabled at all times including when disarmed.
# Logging before arming can make for very large logfiles but can help a lot when tracking down startup
# issues and is necessary if logging of EKF replay data is selected via the LOG_REPLAY parameter. If
# LOG_DISARMED is set to 2, then logging will be enabled when disarmed, but not if a USB connection is
# detected. This can be used to prevent unwanted data logs being generated when the vehicle is
# connected via USB for log downloading or parameter changes. If LOG_DISARMED is set to 3 then logging
# will happen while disarmed, but if the vehicle never arms then the logs using the filesystem backend
# will be discarded on the next boot.
# 0: Disabled
# 1: Enabled
# 2: Disabled on USB connection
# 3: Discard log on reboot if never armed
LOG_DISARMED,0

# Maximum AP_Logger File and Block Backend buffer size (in kilobytes)
# The File and Block backends use a buffer to store data before writing to the block device.  Raising
# this value may reduce "gaps" in your SD card logging.  This buffer size may be reduced depending on
# available memory.  PixHawk requires at least 4 kilobytes.  Maximum value available here is 64
# kilobytes.
LOG_FILE_BUFSIZE,200

# Stop logging to current file on disarm
# When set, the current log file is closed when the vehicle is disarmed.  If LOG_DISARMED is set then
# a fresh log will be opened. Applies to the File and Block logging backends.
# 0: Disabled
# 1: Enabled
LOG_FILE_DSRMROT,0

# Old logs on the SD card will be deleted to maintain this amount of free space
# Set this such that the free space is larger than your largest typical flight log
# Units: MB (megabyte)
# Range: 10 1000
LOG_FILE_MB_FREE,500

# Maximum logging rate for file backend
# This sets the maximum rate that streaming log messages will be logged to the file backend. A value
# of zero means that rate limiting is disabled.
# Units: Hz (hertz)
# Range: 0 1000
# Increment: 0.1
LOG_FILE_RATEMAX,0

# Timeout before giving up on file writes
# This controls the amount of time before failing writes to a log file cause the file to be closed and
# logging stopped.
# Units: s (seconds)
LOG_FILE_TIMEOUT,5

# Maximum AP_Logger MAVLink Backend buffer size
# Maximum amount of memory to allocate to AP_Logger-over-mavlink
# Units: kB (kilobytes)
LOG_MAV_BUFSIZE,8

# Maximum logging rate for mavlink backend
# This sets the maximum rate that streaming log messages will be logged to the mavlink backend. A
# value of zero means that rate limiting is disabled.
# Units: Hz (hertz)
# Range: 0 1000
# Increment: 0.1
LOG_MAV_RATEMAX,0

# Maximum number of log files
# This sets the maximum number of log file that will be written on dataflash or sd card before
# starting to rotate log number. Limit is capped at 500 logs.
# Range: 2 500
# Increment: 1
# RebootRequired: True
LOG_MAX_FILES,500

# Enable logging of information needed for Replay
# If LOG_REPLAY is set to 1 then the EKF2 and EKF3 state estimators will log detailed information
# needed for diagnosing problems with the Kalman filter. LOG_DISARMED must be set to 1 or 2 or else
# the log will not contain the pre-flight data required for replay testing of the EKF's. It is
# suggested that you also raise LOG_FILE_BUFSIZE to give more buffer space for logging and use a high
# quality microSD card to ensure no sensor data is lost.
# 0: Disabled
# 1: Enabled
LOG_REPLAY,0
MAN_EXPO_PITCH,0
MAN_EXPO_ROLL,0
MAN_EXPO_RUDDER,0
MANUAL_RCMASK,0
MIN_GROUNDSPEED,0

# Mission options bitmask
# Bitmask of what options to use in missions.
# Bitmask: 0:Clear Mission on reboot, 1:Use distance to land calc on battery failsafe,2:ContinueAfterLand
MIS_OPTIONS,0

# Mission Restart when entering Auto mode
# Controls mission starting point when entering Auto mode (either restart from beginning of mission or
# resume from last command run)
# 0: Resume Mission
# 1: Restart Mission
MIS_RESTART,0

# Total mission commands
# The number of mission mission items that has been loaded by the ground station. Do not change this
# manually.
# Range: 0 32766
# Increment: 1
# ReadOnly: True
MIS_TOTAL,0
MIXING_GAIN,0.5
MIXING_OFFSET,0

# Mount Type
# Mount Type
# RebootRequired: True
# 0: None                                              6: Gremsy
# 1: Servo                                             7: BrushlessPWM
# 2: 3DR Solo                                          8: Siyi
# 3: Alexmos Serial                                    9: Scripting
# 4: SToRM32 MAVLink                                   10: Xacti
# 5: SToRM32 Serial                                    11: Viewpro
MNT1_TYPE,0

# Mount Type
# Mount Type
# RebootRequired: True
# 0: None                                              6: Gremsy
# 1: Servo                                             7: BrushlessPWM
# 2: 3DR Solo                                          8: Siyi
# 3: Alexmos Serial                                    9: Scripting
# 4: SToRM32 MAVLink                                   10: Xacti
# 5: SToRM32 Serial                                    11: Viewpro
MNT2_TYPE,0

# MSP OSD Options
# A bitmask to set some MSP specific options: EnableTelemetryMode-allows "push" mode telemetry when
# only rx line of OSD ic connected to autopilot,  EnableBTFLFonts-uses indexes corresponding to
# Betaflight fonts if OSD uses those instead of ArduPilot fonts.
# Bitmask: 0:EnableTelemetryMode, 1: unused, 2:EnableBTFLFonts
MSP_OPTIONS,0

# Cell count override
# Used for average cell voltage calculation
# 0: Auto                                              8: 8
# 1: 1                                                 9: 9
# 2: 2                                                 10: 10
# 3: 3                                                 11: 11
# 4: 4                                                 12: 12
# 5: 5                                                 13: 13
# 6: 6                                                 14: 14
# 7: 7
MSP_OSD_NCELLS,0

# L1 control damping ratio
# Damping ratio for L1 control. Increase this in increments of 0.05 if you are getting overshoot in
# path tracking. You should not need a value below 0.7 or above 0.85.
# Range: 0.6 1.0
# Increment: 0.05
NAVL1_DAMPING,0.75

# Loiter Radius Bank Angle Limit
# The sealevel bank angle limit for a continous loiter. (Used to calculate airframe loading limits at
# higher altitudes). Setting to 0, will instead just scale the loiter radius directly
# Units: deg (degrees)
# Range: 0 89
NAVL1_LIM_BANK,0

# L1 control period
# Period in seconds of L1 tracking loop. This parameter is the primary control for agressiveness of
# turns in auto mode. This needs to be larger for less responsive airframes. The default of 20 is
# quite conservative, but for most RC aircraft will lead to reasonable flight. For smaller more agile
# aircraft a value closer to 15 is appropriate, or even as low as 10 for some very agile aircraft.
# When tuning, change this value in small increments, as a value that is much too small (say 5 or 10
# below the right value) can lead to very radical turns, and a risk of stalling.
# Units: s (seconds)
# Range: 1 60
# Increment: 1
NAVL1_PERIOD,17

# L1 control crosstrack integrator gain
# Crosstrack error integrator gain. This gain is applied to the crosstrack error to ensure it
# converges to zero. Set to zero to disable. Smaller values converge slower, higher values will cause
# crosstrack error oscillation.
# Range: 0 0.1
# Increment: 0.01
NAVL1_XTRACK_I,0.02

# Networking Enable
# Networking Enable
# RebootRequired: True
# 0: Disable
# 1: Enable
NET_ENABLED,0

# Port type
# Port type for network serial port. For the two client types a valid destination IP address must be
# set. For the two server types either 0.0.0.0 or a local address can be used. The UDP client type
# will use broadcast if the IP is set to 255.255.255.255 and will use UDP multicast if the IP is in
# the multicast address range.
# RebootRequired: True
# 0: Disabled
# 1: UDP client
# 2: UDP server
# 3: TCP client
# 4: TCP server
NET_P1_TYPE,0

# Port type
# Port type for network serial port. For the two client types a valid destination IP address must be
# set. For the two server types either 0.0.0.0 or a local address can be used. The UDP client type
# will use broadcast if the IP is set to 255.255.255.255 and will use UDP multicast if the IP is in
# the multicast address range.
# RebootRequired: True
# 0: Disabled
# 1: UDP client
# 2: UDP server
# 3: TCP client
# 4: TCP server
NET_P2_TYPE,0

# Port type
# Port type for network serial port. For the two client types a valid destination IP address must be
# set. For the two server types either 0.0.0.0 or a local address can be used. The UDP client type
# will use broadcast if the IP is set to 255.255.255.255 and will use UDP multicast if the IP is in
# the multicast address range.
# RebootRequired: True
# 0: Disabled
# 1: UDP client
# 2: UDP server
# 3: TCP client
# 4: TCP server
NET_P3_TYPE,0

# Port type
# Port type for network serial port. For the two client types a valid destination IP address must be
# set. For the two server types either 0.0.0.0 or a local address can be used. The UDP client type
# will use broadcast if the IP is set to 255.255.255.255 and will use UDP multicast if the IP is in
# the multicast address range.
# RebootRequired: True
# 0: Disabled
# 1: UDP client
# 2: UDP server
# 3: TCP client
# 4: TCP server
NET_P4_TYPE,0

# Messages Enable bitmask
# This is a bitmask of enabled NMEA messages. All messages will be sent consecutively at the same rate
# interval
# Bitmask: 0:GPGGA,1:GPRMC,2:PASHR
NMEA_MSG_EN,3

# NMEA Output rate
# NMEA Output rate. This controls the interval at which all the enabled NMEA messages are sent. Most
# NMEA systems expect 100ms (10Hz) or slower.
# Range: 20 2000
# Increment: 1
# Units: ms (milliseconds)
NMEA_RATE_MS,100

# Buzzer-on pin logic level
# Specifies pin level that indicates buzzer should play
# 0: LowIsOn
# 1: HighIsOn
NTF_BUZZ_ON_LVL,1

# Buzzer pin
# Enables to connect active buzzer to arbitrary pin. Requires 3-pin buzzer or additional MOSFET! Some
# the Wiki's "GPIOs" page for how to determine the pin number for a given autopilot.
# -1: Disabled
NTF_BUZZ_PIN,-1

# Buzzer Driver Types
# Controls what types of Buzzer will be enabled
# Bitmask: 0:Built-in buzzer, 1:DShot, 2:DroneCAN
NTF_BUZZ_TYPES,5

# Buzzer volume
# Control the volume of the buzzer
# Range: 0 100
# Units: % (percent)
NTF_BUZZ_VOLUME,100

# Type of on-board I2C display
# This sets up the type of on-board I2C display. Disabled by default.
# 0: Disable
# 1: ssd1306
# 2: sh1106
# 10: SITL
NTF_DISPLAY_TYPE,0

# LED Brightness
# Select the RGB LED brightness level. When USB is connected brightness will never be higher than low
# regardless of the setting.
# 0: Off
# 1: Low
# 2: Medium
# 3: High
NTF_LED_BRIGHT,3

# Serial LED String Length
# The number of Serial LED's to use for notifications (NeoPixel's and ProfiLED)
# Range: 1 32
# RebootRequired: True
NTF_LED_LEN,1

# Specifies colour source for the RGBLed
# Specifies the source for the colours and brightness for the LED.  OutbackChallenge conforms to the
# MedicalExpress (https://uavchallenge.org/medical-express/) rules, essentially "Green" is disarmed
# (safe-to-approach), "Red" is armed (not safe-to-approach). Traffic light is a simplified color set,
# red when armed, yellow when the safety switch is not surpressing outputs (but disarmed), and green
# when outputs are surpressed and disarmed, the LED will blink faster if disarmed and failing arming
# checks.
# 0: Standard
# 1: MAVLink/Scripting/AP_Periph
# 2: OutbackChallenge
# 3: TrafficLight
NTF_LED_OVERRIDE,0

# LED Driver Types
# Controls what types of LEDs will be enabled
# Bitmask: 0:Built-in LED, 1:Internal ToshibaLED, 2:External ToshibaLED, 3:External PCA9685, 4:Oreo LED, 5:DroneCAN, 6:NCP5623 External, 7:NCP5623 Internal, 8:NeoPixel, 9:ProfiLED, 10:Scripting, 11:DShot, 12:ProfiLED_SPI, 13:LP5562 External, 14: LP5562 Internal, 15:IS31FL3195 External, 16: IS31FL3195 Internal, 17: DiscreteRGB, 18: NeoPixelRGB
NTF_LED_TYPES,123079
ONESHOT_MASK,0

# OSD type
# OSD type. TXONLY makes the OSD parameter selection available to other modules even if there is no
# native OSD support on the board, for instance CRSF.
# RebootRequired: True
# 0: None
# 1: MAX7456
# 2: SITL
# 3: MSP
# 4: TXONLY
# 5: MSP_DISPLAYPORT
OSD_TYPE,0

# Precision Land enabled/disabled
# Precision Land enabled/disabled
# 0: Disabled
# 1: Enabled
PLND_ENABLED,0
PTCH_LIM_MAX_DEG,20
PTCH_LIM_MIN_DEG,-25

# Pitch axis rate controller D gain
# Pitch axis rate controller D gain.  Compensates for short-term change in desired roll rate vs actual
# roll rate
# Range: 0.001 0.03
# Increment: 0.001
PTCH_RATE_D,0

# Pitch Derivative FeedForward Gain
# FF D Gain which produces an output that is proportional to the rate of change of the target
# Range: 0 0.03
# Increment: 0.001
PTCH_RATE_D_FF,0

# Pitch axis rate controller feed forward
# Pitch axis rate controller feed forward
# Range: 0 3.0
# Increment: 0.001
PTCH_RATE_FF,0.345

# Pitch axis rate controller derivative frequency in Hz
# Pitch axis rate controller derivative frequency in Hz
# Range: 0 50
# Increment: 1
# Units: Hz (hertz)
PTCH_RATE_FLTD,12

# Pitch axis rate controller error frequency in Hz
# Pitch axis rate controller error frequency in Hz
# Range: 2 50
# Increment: 1
# Units: Hz (hertz)
PTCH_RATE_FLTE,0

# Pitch axis rate controller target frequency in Hz
# Pitch axis rate controller target frequency in Hz
# Range: 2 50
# Increment: 1
# Units: Hz (hertz)
PTCH_RATE_FLTT,3

# Pitch axis rate controller I gain
# Pitch axis rate controller I gain.  Corrects long-term difference in desired roll rate vs actual
# roll rate
# Range: 0.01 0.6
# Increment: 0.01
PTCH_RATE_I,0.15

# Pitch axis rate controller I gain maximum
# Pitch axis rate controller I gain maximum.  Constrains the maximum that the I term will output
# Range: 0 1
# Increment: 0.01
PTCH_RATE_IMAX,0.666

# Pitch Error notch filter index
# Pitch Error notch filter index
# Range: 1 8
PTCH_RATE_NEF,0

# Pitch Target notch filter index
# Pitch Target notch filter index
# Range: 1 8
PTCH_RATE_NTF,0

# Pitch axis rate controller P gain
# Pitch axis rate controller P gain. Corrects in proportion to the difference between the desired
# pitch rate vs actual pitch rate
# Range: 0.08 0.35
# Increment: 0.005
PTCH_RATE_P,0.04

# Pitch axis rate controller PD sum maximum
# Pitch axis rate controller PD sum maximum.  The maximum/minimum value that the sum of the P and D
# term can output
# Range: 0 1
# Increment: 0.01
PTCH_RATE_PDMX,0

# Pitch slew rate limit
# Sets an upper limit on the slew rate produced by the combined P and D gains. If the amplitude of the
# control action produced by the rate feedback exceeds this value, then the D+P gain is reduced to
# respect the limit. This limits the amplitude of high frequency oscillations caused by an excessive
# gain. The limit should be set to no more than 25% of the actuators maximum slew rate to allow for
# load effects. Note: The gain will not be reduced to less than 10% of the nominal value. A value of
# zero will disable this feature.
# Range: 0 200
# Increment: 0.5
PTCH_RATE_SMAX,150
PTCH_TRIM_DEG,0

# Roll compensation
# Gain added to pitch to keep aircraft from descending or ascending in turns. Increase in increments
# of 0.05 to reduce altitude loss. Decrease for altitude gain.
# Range: 0.7 1.5
# Increment: 0.05
PTCH2SRV_RLL,1

# Pitch down max rate
# This sets the maximum nose down pitch rate that the attitude controller will demand (degrees/sec) in
# angle stabilized modes. Setting it to zero disables the limit.
# Range: 0 100
# Units: deg/s (degrees per second)
# Increment: 1
PTCH2SRV_RMAX_DN,0

# Pitch up max rate
# This sets the maximum nose up pitch rate that the attitude controller will demand (degrees/sec) in
# angle stabilized modes. Setting it to zero disables the limit.
# Range: 0 100
# Units: deg/s (degrees per second)
# Increment: 1
PTCH2SRV_RMAX_UP,0

# Pitch Time Constant
# Time constant in seconds from demanded to achieved pitch angle. Most models respond well to 0.5. May
# be reduced for faster responses, but setting lower than a model can achieve will not help.
# Range: 0.4 1.0
# Units: s (seconds)
# Increment: 0.1
PTCH2SRV_TCONST,0.5

# Enable QuadPlane
# This enables QuadPlane functionality, assuming multicopter motors start on output 5. If this is set
# to 2 then when starting AUTO mode it will initially be in VTOL AUTO mode.
# RebootRequired: True
# 0: Disable
# 1: Enable
# 2: Enable VTOL AUTO
Q_ENABLE,0

# Rally Include Home
# Controls if Home is included as a Rally point (i.e. as a safe landing place) for RTL
# 0: DoNotIncludeHome
# 1: IncludeHome
RALLY_INCL_HOME,0

# Rally Limit
# Maximum distance to rally point. If the closest rally point is more than this number of kilometers
# from the current position and the home location is closer than any of the rally points from the
# current position then do RTL to home rather than to the closest rally point. This prevents a
# leftover rally point from a different airfield being used accidentally. If this is set to 0 then the
# closest rally point is always used.
# Units: km (kilometers)
# Increment: 0.1
RALLY_LIMIT_KM,5

# Rally Total
# Number of rally points currently loaded
RALLY_TOTAL,0

# RC options
# RC input options
# Bitmask: 0:Ignore RC Receiver, 1:Ignore MAVLink Overrides, 2:Ignore Receiver Failsafe bit but allow other RC failsafes if setup, 3:FPort Pad, 4:Log RC input bytes, 5:Arming check throttle for 0 input, 6:Skip the arming check for neutral Roll/Pitch/Yaw sticks, 7:Allow Switch reverse, 8:Use passthrough for CRSF telemetry, 9:Suppress CRSF mode/rate message for ELRS systems,10:Enable multiple receiver support, 11:Use Link Quality for RSSI with CRSF, 12:Annotate CRSF flight mode with * on disarm, 13: Use 420kbaud for ELRS protocol
RC_OPTIONS,32

# RC override timeout
# Timeout after which RC overrides will no longer be used, and RC input will resume, 0 will disable RC
# overrides, -1 will never timeout, and continue using overrides until they are disabled
# Range: 0.0 120.0
# Units: s (seconds)
RC_OVERRIDE_TIME,3

# RC protocols enabled
# Bitmask of enabled RC protocols. Allows narrowing the protocol detection to only specific types of
# RC receivers which can avoid issues with incorrect detection. Set to 1 to enable all protocols.
# Bitmask: 0:All,1:PPM,2:IBUS,3:SBUS,4:SBUS_NI,5:DSM,6:SUMD,7:SRXL,8:SRXL2,9:CRSF,10:ST24,11:FPORT,12:FPORT2,13:FastSBUS,14:DroneCAN,15:Ghost,16:MAVRadio
RC_PROTOCOLS,1

# RC dead-zone
# PWM dead zone in microseconds around trim or bottom
# Units: PWM (PWM in microseconds)
# Range: 0 200
RC1_DZ,30

# RC max PWM
# RC maximum PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000
# is upper limit.
# Units: PWM (PWM in microseconds)
# Range: 800 2200
# Increment: 1
RC1_MAX,1900

# RC min PWM
# RC minimum PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000
# is upper limit.
# Units: PWM (PWM in microseconds)
# Range: 800 2200
# Increment: 1
RC1_MIN,1100

# RC input option
# Function assigned to this RC channel
# 0: Do Nothing
# 52: ACRO Mode
# 38: ADSB Avoidance Enable
# 16: AUTO Mode
# 84: AirMode
# 210: Airbrakes
# 91: Airspeed Ratio Calibration
# 165: Arm/Emergency Motor Stop
# 41: ArmDisarm (4.1 and lower)
# 153: ArmDisarm (4.2 and higher)
# 154: ArmDisarm with Quadplane AirMode (4.2 and higher)
# 24: Auto Mission Reset
# 172: Battery MPPT Enable
# 72: CIRCLE Mode
# 150: CRUISE Mode
# 171: Calibrate Compasses
# 169: Camera Auto Focus
# 174: Camera Image Tracking
# 175: Camera Lens
# 168: Camera Manual Focus
# 102: Camera Mode Toggle
# 166: Camera Record Video
# 9: Camera Trigger
# 167: Camera Zoom
# 58: Clear Waypoints
# 62: Compass Learn
# 87: Crow Select
# 106: Disable Airspeed Use
# 81: Disarm
# 90: EKF Pos Source
# 107: Enable FW Autotune
# 92: FBWA Mode
# 95: FBWA taildragger takeoff mode
# 162: FFT Tune
# 11: Fence Enable
# 208: Flap
# 157: Force FS Action to FBWA
# 65: GPS Disable
# 105: GPS Disable Yaw
# 55: GUIDED Mode
# 85: Generator
# 43: InvertedFlight Enable
# 100: KillIMU1
# 101: KillIMU2
# 110: KillIMU3
# 56: LOITER Mode
# 89: Landing Flare
# 29: Landing Gear
# 30: Lost Plane Sound
# 51: MANUAL Mode
# 31: Motor Emergency Stop
# 163: Mount Lock
# 213: Mount1 Pitch
# 212: Mount1 Roll
# 214: Mount1 Yaw
# 216: Mount2 Pitch
# 215: Mount2 Roll
# 217: Mount2 Yaw
# 86: Non Auto Terrain Follow Disable
# 158: Optflow Calibration
# 22: Parachute Release
# 164: Pause Stream Logging
# 173: Plane AUTO Mode Landing Abort
# 82: QAssist 3pos
# 108: QRTL Mode
# 170: QSTABILIZE Mode
# 176: Quadplane Fwd Throttle Override enable
# 46: RC Override Enable
# 4: RTL
# 28: Relay1 On/Off
# 34: Relay2 On/Off
# 35: Relay3 On/Off
# 36: Relay4 On/Off
# 66: Relay5 On/Off
# 67: Relay6 On/Off
# 27: Retract Mount1
# 64: Reverse Throttle
# 78: RunCam Control
# 79: RunCam OSD Control
# 300: Scripting1
# 301: Scripting2
# 302: Scripting3
# 303: Scripting4
# 304: Scripting5
# 305: Scripting6
# 306: Scripting7
# 307: Scripting8
# 155: Set roll pitch and yaw trim to current servo and RC
# 88: Soaring Enable
# 112: SwitchExternalAHRS
# 77: TAKEOFF Mode
# 98: TRAINING Mode
# 96: Trigger re-reading of mode switch
# 209: VTOL Forward Throttle
# 94: VTX Power
# 160: Weathervane Enable
RC1_OPTION,0

# RC reversed
# Reverse channel input. Set to 0 for normal operation. Set to 1 to reverse this input channel.
# 0: Normal
# 1: Reversed
RC1_REVERSED,0

# RC trim PWM
# RC trim (neutral) PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral
# and 2000 is upper limit.
# Units: PWM (PWM in microseconds)
# Range: 800 2200
# Increment: 1
RC1_TRIM,1500

# RC dead-zone
# PWM dead zone in microseconds around trim or bottom
# Units: PWM (PWM in microseconds)
# Range: 0 200
RC10_DZ,0

# RC max PWM
# RC maximum PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000
# is upper limit.
# Units: PWM (PWM in microseconds)
# Range: 800 2200
# Increment: 1
RC10_MAX,1900

# RC min PWM
# RC minimum PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000
# is upper limit.
# Units: PWM (PWM in microseconds)
# Range: 800 2200
# Increment: 1
RC10_MIN,1100

# RC input option
# Function assigned to this RC channel
# 0: Do Nothing
# 52: ACRO Mode
# 38: ADSB Avoidance Enable
# 16: AUTO Mode
# 84: AirMode
# 210: Airbrakes
# 91: Airspeed Ratio Calibration
# 165: Arm/Emergency Motor Stop
# 41: ArmDisarm (4.1 and lower)
# 153: ArmDisarm (4.2 and higher)
# 154: ArmDisarm with Quadplane AirMode (4.2 and higher)
# 24: Auto Mission Reset
# 172: Battery MPPT Enable
# 72: CIRCLE Mode
# 150: CRUISE Mode
# 171: Calibrate Compasses
# 169: Camera Auto Focus
# 174: Camera Image Tracking
# 175: Camera Lens
# 168: Camera Manual Focus
# 102: Camera Mode Toggle
# 166: Camera Record Video
# 9: Camera Trigger
# 167: Camera Zoom
# 58: Clear Waypoints
# 62: Compass Learn
# 87: Crow Select
# 106: Disable Airspeed Use
# 81: Disarm
# 90: EKF Pos Source
# 107: Enable FW Autotune
# 92: FBWA Mode
# 95: FBWA taildragger takeoff mode
# 162: FFT Tune
# 11: Fence Enable
# 208: Flap
# 157: Force FS Action to FBWA
# 65: GPS Disable
# 105: GPS Disable Yaw
# 55: GUIDED Mode
# 85: Generator
# 43: InvertedFlight Enable
# 100: KillIMU1
# 101: KillIMU2
# 110: KillIMU3
# 56: LOITER Mode
# 89: Landing Flare
# 29: Landing Gear
# 30: Lost Plane Sound
# 51: MANUAL Mode
# 31: Motor Emergency Stop
# 163: Mount Lock
# 213: Mount1 Pitch
# 212: Mount1 Roll
# 214: Mount1 Yaw
# 216: Mount2 Pitch
# 215: Mount2 Roll
# 217: Mount2 Yaw
# 86: Non Auto Terrain Follow Disable
# 158: Optflow Calibration
# 22: Parachute Release
# 164: Pause Stream Logging
# 173: Plane AUTO Mode Landing Abort
# 82: QAssist 3pos
# 108: QRTL Mode
# 170: QSTABILIZE Mode
# 176: Quadplane Fwd Throttle Override enable
# 46: RC Override Enable
# 4: RTL
# 28: Relay1 On/Off
# 34: Relay2 On/Off
# 35: Relay3 On/Off
# 36: Relay4 On/Off
# 66: Relay5 On/Off
# 67: Relay6 On/Off
# 27: Retract Mount1
# 64: Reverse Throttle
# 78: RunCam Control
# 79: RunCam OSD Control
# 300: Scripting1
# 301: Scripting2
# 302: Scripting3
# 303: Scripting4
# 304: Scripting5
# 305: Scripting6
# 306: Scripting7
# 307: Scripting8
# 155: Set roll pitch and yaw trim to current servo and RC
# 88: Soaring Enable
# 112: SwitchExternalAHRS
# 77: TAKEOFF Mode
# 98: TRAINING Mode
# 96: Trigger re-reading of mode switch
# 209: VTOL Forward Throttle
# 94: VTX Power
# 160: Weathervane Enable
RC10_OPTION,0

# RC reversed
# Reverse channel input. Set to 0 for normal operation. Set to 1 to reverse this input channel.
# 0: Normal
# 1: Reversed
RC10_REVERSED,0

# RC trim PWM
# RC trim (neutral) PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral
# and 2000 is upper limit.
# Units: PWM (PWM in microseconds)
# Range: 800 2200
# Increment: 1
RC10_TRIM,1500

# RC dead-zone
# PWM dead zone in microseconds around trim or bottom
# Units: PWM (PWM in microseconds)
# Range: 0 200
RC11_DZ,0

# RC max PWM
# RC maximum PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000
# is upper limit.
# Units: PWM (PWM in microseconds)
# Range: 800 2200
# Increment: 1
RC11_MAX,1900

# RC min PWM
# RC minimum PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000
# is upper limit.
# Units: PWM (PWM in microseconds)
# Range: 800 2200
# Increment: 1
RC11_MIN,1100

# RC input option
# Function assigned to this RC channel
# 0: Do Nothing
# 52: ACRO Mode
# 38: ADSB Avoidance Enable
# 16: AUTO Mode
# 84: AirMode
# 210: Airbrakes
# 91: Airspeed Ratio Calibration
# 165: Arm/Emergency Motor Stop
# 41: ArmDisarm (4.1 and lower)
# 153: ArmDisarm (4.2 and higher)
# 154: ArmDisarm with Quadplane AirMode (4.2 and higher)
# 24: Auto Mission Reset
# 172: Battery MPPT Enable
# 72: CIRCLE Mode
# 150: CRUISE Mode
# 171: Calibrate Compasses
# 169: Camera Auto Focus
# 174: Camera Image Tracking
# 175: Camera Lens
# 168: Camera Manual Focus
# 102: Camera Mode Toggle
# 166: Camera Record Video
# 9: Camera Trigger
# 167: Camera Zoom
# 58: Clear Waypoints
# 62: Compass Learn
# 87: Crow Select
# 106: Disable Airspeed Use
# 81: Disarm
# 90: EKF Pos Source
# 107: Enable FW Autotune
# 92: FBWA Mode
# 95: FBWA taildragger takeoff mode
# 162: FFT Tune
# 11: Fence Enable
# 208: Flap
# 157: Force FS Action to FBWA
# 65: GPS Disable
# 105: GPS Disable Yaw
# 55: GUIDED Mode
# 85: Generator
# 43: InvertedFlight Enable
# 100: KillIMU1
# 101: KillIMU2
# 110: KillIMU3
# 56: LOITER Mode
# 89: Landing Flare
# 29: Landing Gear
# 30: Lost Plane Sound
# 51: MANUAL Mode
# 31: Motor Emergency Stop
# 163: Mount Lock
# 213: Mount1 Pitch
# 212: Mount1 Roll
# 214: Mount1 Yaw
# 216: Mount2 Pitch
# 215: Mount2 Roll
# 217: Mount2 Yaw
# 86: Non Auto Terrain Follow Disable
# 158: Optflow Calibration
# 22: Parachute Release
# 164: Pause Stream Logging
# 173: Plane AUTO Mode Landing Abort
# 82: QAssist 3pos
# 108: QRTL Mode
# 170: QSTABILIZE Mode
# 176: Quadplane Fwd Throttle Override enable
# 46: RC Override Enable
# 4: RTL
# 28: Relay1 On/Off
# 34: Relay2 On/Off
# 35: Relay3 On/Off
# 36: Relay4 On/Off
# 66: Relay5 On/Off
# 67: Relay6 On/Off
# 27: Retract Mount1
# 64: Reverse Throttle
# 78: RunCam Control
# 79: RunCam OSD Control
# 300: Scripting1
# 301: Scripting2
# 302: Scripting3
# 303: Scripting4
# 304: Scripting5
# 305: Scripting6
# 306: Scripting7
# 307: Scripting8
# 155: Set roll pitch and yaw trim to current servo and RC
# 88: Soaring Enable
# 112: SwitchExternalAHRS
# 77: TAKEOFF Mode
# 98: TRAINING Mode
# 96: Trigger re-reading of mode switch
# 209: VTOL Forward Throttle
# 94: VTX Power
# 160: Weathervane Enable
RC11_OPTION,0

# RC reversed
# Reverse channel input. Set to 0 for normal operation. Set to 1 to reverse this input channel.
# 0: Normal
# 1: Reversed
RC11_REVERSED,0

# RC trim PWM
# RC trim (neutral) PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral
# and 2000 is upper limit.
# Units: PWM (PWM in microseconds)
# Range: 800 2200
# Increment: 1
RC11_TRIM,1500

# RC dead-zone
# PWM dead zone in microseconds around trim or bottom
# Units: PWM (PWM in microseconds)
# Range: 0 200
RC12_DZ,0

# RC max PWM
# RC maximum PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000
# is upper limit.
# Units: PWM (PWM in microseconds)
# Range: 800 2200
# Increment: 1
RC12_MAX,1900

# RC min PWM
# RC minimum PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000
# is upper limit.
# Units: PWM (PWM in microseconds)
# Range: 800 2200
# Increment: 1
RC12_MIN,1100

# RC input option
# Function assigned to this RC channel
# 0: Do Nothing
# 52: ACRO Mode
# 38: ADSB Avoidance Enable
# 16: AUTO Mode
# 84: AirMode
# 210: Airbrakes
# 91: Airspeed Ratio Calibration
# 165: Arm/Emergency Motor Stop
# 41: ArmDisarm (4.1 and lower)
# 153: ArmDisarm (4.2 and higher)
# 154: ArmDisarm with Quadplane AirMode (4.2 and higher)
# 24: Auto Mission Reset
# 172: Battery MPPT Enable
# 72: CIRCLE Mode
# 150: CRUISE Mode
# 171: Calibrate Compasses
# 169: Camera Auto Focus
# 174: Camera Image Tracking
# 175: Camera Lens
# 168: Camera Manual Focus
# 102: Camera Mode Toggle
# 166: Camera Record Video
# 9: Camera Trigger
# 167: Camera Zoom
# 58: Clear Waypoints
# 62: Compass Learn
# 87: Crow Select
# 106: Disable Airspeed Use
# 81: Disarm
# 90: EKF Pos Source
# 107: Enable FW Autotune
# 92: FBWA Mode
# 95: FBWA taildragger takeoff mode
# 162: FFT Tune
# 11: Fence Enable
# 208: Flap
# 157: Force FS Action to FBWA
# 65: GPS Disable
# 105: GPS Disable Yaw
# 55: GUIDED Mode
# 85: Generator
# 43: InvertedFlight Enable
# 100: KillIMU1
# 101: KillIMU2
# 110: KillIMU3
# 56: LOITER Mode
# 89: Landing Flare
# 29: Landing Gear
# 30: Lost Plane Sound
# 51: MANUAL Mode
# 31: Motor Emergency Stop
# 163: Mount Lock
# 213: Mount1 Pitch
# 212: Mount1 Roll
# 214: Mount1 Yaw
# 216: Mount2 Pitch
# 215: Mount2 Roll
# 217: Mount2 Yaw
# 86: Non Auto Terrain Follow Disable
# 158: Optflow Calibration
# 22: Parachute Release
# 164: Pause Stream Logging
# 173: Plane AUTO Mode Landing Abort
# 82: QAssist 3pos
# 108: QRTL Mode
# 170: QSTABILIZE Mode
# 176: Quadplane Fwd Throttle Override enable
# 46: RC Override Enable
# 4: RTL
# 28: Relay1 On/Off
# 34: Relay2 On/Off
# 35: Relay3 On/Off
# 36: Relay4 On/Off
# 66: Relay5 On/Off
# 67: Relay6 On/Off
# 27: Retract Mount1
# 64: Reverse Throttle
# 78: RunCam Control
# 79: RunCam OSD Control
# 300: Scripting1
# 301: Scripting2
# 302: Scripting3
# 303: Scripting4
# 304: Scripting5
# 305: Scripting6
# 306: Scripting7
# 307: Scripting8
# 155: Set roll pitch and yaw trim to current servo and RC
# 88: Soaring Enable
# 112: SwitchExternalAHRS
# 77: TAKEOFF Mode
# 98: TRAINING Mode
# 96: Trigger re-reading of mode switch
# 209: VTOL Forward Throttle
# 94: VTX Power
# 160: Weathervane Enable
RC12_OPTION,0

# RC reversed
# Reverse channel input. Set to 0 for normal operation. Set to 1 to reverse this input channel.
# 0: Normal
# 1: Reversed
RC12_REVERSED,0

# RC trim PWM
# RC trim (neutral) PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral
# and 2000 is upper limit.
# Units: PWM (PWM in microseconds)
# Range: 800 2200
# Increment: 1
RC12_TRIM,1500

# RC dead-zone
# PWM dead zone in microseconds around trim or bottom
# Units: PWM (PWM in microseconds)
# Range: 0 200
RC13_DZ,0

# RC max PWM
# RC maximum PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000
# is upper limit.
# Units: PWM (PWM in microseconds)
# Range: 800 2200
# Increment: 1
RC13_MAX,1900

# RC min PWM
# RC minimum PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000
# is upper limit.
# Units: PWM (PWM in microseconds)
# Range: 800 2200
# Increment: 1
RC13_MIN,1100

# RC input option
# Function assigned to this RC channel
# 0: Do Nothing
# 52: ACRO Mode
# 38: ADSB Avoidance Enable
# 16: AUTO Mode
# 84: AirMode
# 210: Airbrakes
# 91: Airspeed Ratio Calibration
# 165: Arm/Emergency Motor Stop
# 41: ArmDisarm (4.1 and lower)
# 153: ArmDisarm (4.2 and higher)
# 154: ArmDisarm with Quadplane AirMode (4.2 and higher)
# 24: Auto Mission Reset
# 172: Battery MPPT Enable
# 72: CIRCLE Mode
# 150: CRUISE Mode
# 171: Calibrate Compasses
# 169: Camera Auto Focus
# 174: Camera Image Tracking
# 175: Camera Lens
# 168: Camera Manual Focus
# 102: Camera Mode Toggle
# 166: Camera Record Video
# 9: Camera Trigger
# 167: Camera Zoom
# 58: Clear Waypoints
# 62: Compass Learn
# 87: Crow Select
# 106: Disable Airspeed Use
# 81: Disarm
# 90: EKF Pos Source
# 107: Enable FW Autotune
# 92: FBWA Mode
# 95: FBWA taildragger takeoff mode
# 162: FFT Tune
# 11: Fence Enable
# 208: Flap
# 157: Force FS Action to FBWA
# 65: GPS Disable
# 105: GPS Disable Yaw
# 55: GUIDED Mode
# 85: Generator
# 43: InvertedFlight Enable
# 100: KillIMU1
# 101: KillIMU2
# 110: KillIMU3
# 56: LOITER Mode
# 89: Landing Flare
# 29: Landing Gear
# 30: Lost Plane Sound
# 51: MANUAL Mode
# 31: Motor Emergency Stop
# 163: Mount Lock
# 213: Mount1 Pitch
# 212: Mount1 Roll
# 214: Mount1 Yaw
# 216: Mount2 Pitch
# 215: Mount2 Roll
# 217: Mount2 Yaw
# 86: Non Auto Terrain Follow Disable
# 158: Optflow Calibration
# 22: Parachute Release
# 164: Pause Stream Logging
# 173: Plane AUTO Mode Landing Abort
# 82: QAssist 3pos
# 108: QRTL Mode
# 170: QSTABILIZE Mode
# 176: Quadplane Fwd Throttle Override enable
# 46: RC Override Enable
# 4: RTL
# 28: Relay1 On/Off
# 34: Relay2 On/Off
# 35: Relay3 On/Off
# 36: Relay4 On/Off
# 66: Relay5 On/Off
# 67: Relay6 On/Off
# 27: Retract Mount1
# 64: Reverse Throttle
# 78: RunCam Control
# 79: RunCam OSD Control
# 300: Scripting1
# 301: Scripting2
# 302: Scripting3
# 303: Scripting4
# 304: Scripting5
# 305: Scripting6
# 306: Scripting7
# 307: Scripting8
# 155: Set roll pitch and yaw trim to current servo and RC
# 88: Soaring Enable
# 112: SwitchExternalAHRS
# 77: TAKEOFF Mode
# 98: TRAINING Mode
# 96: Trigger re-reading of mode switch
# 209: VTOL Forward Throttle
# 94: VTX Power
# 160: Weathervane Enable
RC13_OPTION,0

# RC reversed
# Reverse channel input. Set to 0 for normal operation. Set to 1 to reverse this input channel.
# 0: Normal
# 1: Reversed
RC13_REVERSED,0

# RC trim PWM
# RC trim (neutral) PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral
# and 2000 is upper limit.
# Units: PWM (PWM in microseconds)
# Range: 800 2200
# Increment: 1
RC13_TRIM,1500

# RC dead-zone
# PWM dead zone in microseconds around trim or bottom
# Units: PWM (PWM in microseconds)
# Range: 0 200
RC14_DZ,0

# RC max PWM
# RC maximum PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000
# is upper limit.
# Units: PWM (PWM in microseconds)
# Range: 800 2200
# Increment: 1
RC14_MAX,1900

# RC min PWM
# RC minimum PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000
# is upper limit.
# Units: PWM (PWM in microseconds)
# Range: 800 2200
# Increment: 1
RC14_MIN,1100

# RC input option
# Function assigned to this RC channel
# 0: Do Nothing
# 52: ACRO Mode
# 38: ADSB Avoidance Enable
# 16: AUTO Mode
# 84: AirMode
# 210: Airbrakes
# 91: Airspeed Ratio Calibration
# 165: Arm/Emergency Motor Stop
# 41: ArmDisarm (4.1 and lower)
# 153: ArmDisarm (4.2 and higher)
# 154: ArmDisarm with Quadplane AirMode (4.2 and higher)
# 24: Auto Mission Reset
# 172: Battery MPPT Enable
# 72: CIRCLE Mode
# 150: CRUISE Mode
# 171: Calibrate Compasses
# 169: Camera Auto Focus
# 174: Camera Image Tracking
# 175: Camera Lens
# 168: Camera Manual Focus
# 102: Camera Mode Toggle
# 166: Camera Record Video
# 9: Camera Trigger
# 167: Camera Zoom
# 58: Clear Waypoints
# 62: Compass Learn
# 87: Crow Select
# 106: Disable Airspeed Use
# 81: Disarm
# 90: EKF Pos Source
# 107: Enable FW Autotune
# 92: FBWA Mode
# 95: FBWA taildragger takeoff mode
# 162: FFT Tune
# 11: Fence Enable
# 208: Flap
# 157: Force FS Action to FBWA
# 65: GPS Disable
# 105: GPS Disable Yaw
# 55: GUIDED Mode
# 85: Generator
# 43: InvertedFlight Enable
# 100: KillIMU1
# 101: KillIMU2
# 110: KillIMU3
# 56: LOITER Mode
# 89: Landing Flare
# 29: Landing Gear
# 30: Lost Plane Sound
# 51: MANUAL Mode
# 31: Motor Emergency Stop
# 163: Mount Lock
# 213: Mount1 Pitch
# 212: Mount1 Roll
# 214: Mount1 Yaw
# 216: Mount2 Pitch
# 215: Mount2 Roll
# 217: Mount2 Yaw
# 86: Non Auto Terrain Follow Disable
# 158: Optflow Calibration
# 22: Parachute Release
# 164: Pause Stream Logging
# 173: Plane AUTO Mode Landing Abort
# 82: QAssist 3pos
# 108: QRTL Mode
# 170: QSTABILIZE Mode
# 176: Quadplane Fwd Throttle Override enable
# 46: RC Override Enable
# 4: RTL
# 28: Relay1 On/Off
# 34: Relay2 On/Off
# 35: Relay3 On/Off
# 36: Relay4 On/Off
# 66: Relay5 On/Off
# 67: Relay6 On/Off
# 27: Retract Mount1
# 64: Reverse Throttle
# 78: RunCam Control
# 79: RunCam OSD Control
# 300: Scripting1
# 301: Scripting2
# 302: Scripting3
# 303: Scripting4
# 304: Scripting5
# 305: Scripting6
# 306: Scripting7
# 307: Scripting8
# 155: Set roll pitch and yaw trim to current servo and RC
# 88: Soaring Enable
# 112: SwitchExternalAHRS
# 77: TAKEOFF Mode
# 98: TRAINING Mode
# 96: Trigger re-reading of mode switch
# 209: VTOL Forward Throttle
# 94: VTX Power
# 160: Weathervane Enable
RC14_OPTION,0

# RC reversed
# Reverse channel input. Set to 0 for normal operation. Set to 1 to reverse this input channel.
# 0: Normal
# 1: Reversed
RC14_REVERSED,0

# RC trim PWM
# RC trim (neutral) PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral
# and 2000 is upper limit.
# Units: PWM (PWM in microseconds)
# Range: 800 2200
# Increment: 1
RC14_TRIM,1500

# RC dead-zone
# PWM dead zone in microseconds around trim or bottom
# Units: PWM (PWM in microseconds)
# Range: 0 200
RC15_DZ,0

# RC max PWM
# RC maximum PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000
# is upper limit.
# Units: PWM (PWM in microseconds)
# Range: 800 2200
# Increment: 1
RC15_MAX,1900

# RC min PWM
# RC minimum PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000
# is upper limit.
# Units: PWM (PWM in microseconds)
# Range: 800 2200
# Increment: 1
RC15_MIN,1100

# RC input option
# Function assigned to this RC channel
# 0: Do Nothing
# 52: ACRO Mode
# 38: ADSB Avoidance Enable
# 16: AUTO Mode
# 84: AirMode
# 210: Airbrakes
# 91: Airspeed Ratio Calibration
# 165: Arm/Emergency Motor Stop
# 41: ArmDisarm (4.1 and lower)
# 153: ArmDisarm (4.2 and higher)
# 154: ArmDisarm with Quadplane AirMode (4.2 and higher)
# 24: Auto Mission Reset
# 172: Battery MPPT Enable
# 72: CIRCLE Mode
# 150: CRUISE Mode
# 171: Calibrate Compasses
# 169: Camera Auto Focus
# 174: Camera Image Tracking
# 175: Camera Lens
# 168: Camera Manual Focus
# 102: Camera Mode Toggle
# 166: Camera Record Video
# 9: Camera Trigger
# 167: Camera Zoom
# 58: Clear Waypoints
# 62: Compass Learn
# 87: Crow Select
# 106: Disable Airspeed Use
# 81: Disarm
# 90: EKF Pos Source
# 107: Enable FW Autotune
# 92: FBWA Mode
# 95: FBWA taildragger takeoff mode
# 162: FFT Tune
# 11: Fence Enable
# 208: Flap
# 157: Force FS Action to FBWA
# 65: GPS Disable
# 105: GPS Disable Yaw
# 55: GUIDED Mode
# 85: Generator
# 43: InvertedFlight Enable
# 100: KillIMU1
# 101: KillIMU2
# 110: KillIMU3
# 56: LOITER Mode
# 89: Landing Flare
# 29: Landing Gear
# 30: Lost Plane Sound
# 51: MANUAL Mode
# 31: Motor Emergency Stop
# 163: Mount Lock
# 213: Mount1 Pitch
# 212: Mount1 Roll
# 214: Mount1 Yaw
# 216: Mount2 Pitch
# 215: Mount2 Roll
# 217: Mount2 Yaw
# 86: Non Auto Terrain Follow Disable
# 158: Optflow Calibration
# 22: Parachute Release
# 164: Pause Stream Logging
# 173: Plane AUTO Mode Landing Abort
# 82: QAssist 3pos
# 108: QRTL Mode
# 170: QSTABILIZE Mode
# 176: Quadplane Fwd Throttle Override enable
# 46: RC Override Enable
# 4: RTL
# 28: Relay1 On/Off
# 34: Relay2 On/Off
# 35: Relay3 On/Off
# 36: Relay4 On/Off
# 66: Relay5 On/Off
# 67: Relay6 On/Off
# 27: Retract Mount1
# 64: Reverse Throttle
# 78: RunCam Control
# 79: RunCam OSD Control
# 300: Scripting1
# 301: Scripting2
# 302: Scripting3
# 303: Scripting4
# 304: Scripting5
# 305: Scripting6
# 306: Scripting7
# 307: Scripting8
# 155: Set roll pitch and yaw trim to current servo and RC
# 88: Soaring Enable
# 112: SwitchExternalAHRS
# 77: TAKEOFF Mode
# 98: TRAINING Mode
# 96: Trigger re-reading of mode switch
# 209: VTOL Forward Throttle
# 94: VTX Power
# 160: Weathervane Enable
RC15_OPTION,0

# RC reversed
# Reverse channel input. Set to 0 for normal operation. Set to 1 to reverse this input channel.
# 0: Normal
# 1: Reversed
RC15_REVERSED,0

# RC trim PWM
# RC trim (neutral) PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral
# and 2000 is upper limit.
# Units: PWM (PWM in microseconds)
# Range: 800 2200
# Increment: 1
RC15_TRIM,1500

# RC dead-zone
# PWM dead zone in microseconds around trim or bottom
# Units: PWM (PWM in microseconds)
# Range: 0 200
RC16_DZ,0

# RC max PWM
# RC maximum PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000
# is upper limit.
# Units: PWM (PWM in microseconds)
# Range: 800 2200
# Increment: 1
RC16_MAX,1900

# RC min PWM
# RC minimum PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000
# is upper limit.
# Units: PWM (PWM in microseconds)
# Range: 800 2200
# Increment: 1
RC16_MIN,1100

# RC input option
# Function assigned to this RC channel
# 0: Do Nothing
# 52: ACRO Mode
# 38: ADSB Avoidance Enable
# 16: AUTO Mode
# 84: AirMode
# 210: Airbrakes
# 91: Airspeed Ratio Calibration
# 165: Arm/Emergency Motor Stop
# 41: ArmDisarm (4.1 and lower)
# 153: ArmDisarm (4.2 and higher)
# 154: ArmDisarm with Quadplane AirMode (4.2 and higher)
# 24: Auto Mission Reset
# 172: Battery MPPT Enable
# 72: CIRCLE Mode
# 150: CRUISE Mode
# 171: Calibrate Compasses
# 169: Camera Auto Focus
# 174: Camera Image Tracking
# 175: Camera Lens
# 168: Camera Manual Focus
# 102: Camera Mode Toggle
# 166: Camera Record Video
# 9: Camera Trigger
# 167: Camera Zoom
# 58: Clear Waypoints
# 62: Compass Learn
# 87: Crow Select
# 106: Disable Airspeed Use
# 81: Disarm
# 90: EKF Pos Source
# 107: Enable FW Autotune
# 92: FBWA Mode
# 95: FBWA taildragger takeoff mode
# 162: FFT Tune
# 11: Fence Enable
# 208: Flap
# 157: Force FS Action to FBWA
# 65: GPS Disable
# 105: GPS Disable Yaw
# 55: GUIDED Mode
# 85: Generator
# 43: InvertedFlight Enable
# 100: KillIMU1
# 101: KillIMU2
# 110: KillIMU3
# 56: LOITER Mode
# 89: Landing Flare
# 29: Landing Gear
# 30: Lost Plane Sound
# 51: MANUAL Mode
# 31: Motor Emergency Stop
# 163: Mount Lock
# 213: Mount1 Pitch
# 212: Mount1 Roll
# 214: Mount1 Yaw
# 216: Mount2 Pitch
# 215: Mount2 Roll
# 217: Mount2 Yaw
# 86: Non Auto Terrain Follow Disable
# 158: Optflow Calibration
# 22: Parachute Release
# 164: Pause Stream Logging
# 173: Plane AUTO Mode Landing Abort
# 82: QAssist 3pos
# 108: QRTL Mode
# 170: QSTABILIZE Mode
# 176: Quadplane Fwd Throttle Override enable
# 46: RC Override Enable
# 4: RTL
# 28: Relay1 On/Off
# 34: Relay2 On/Off
# 35: Relay3 On/Off
# 36: Relay4 On/Off
# 66: Relay5 On/Off
# 67: Relay6 On/Off
# 27: Retract Mount1
# 64: Reverse Throttle
# 78: RunCam Control
# 79: RunCam OSD Control
# 300: Scripting1
# 301: Scripting2
# 302: Scripting3
# 303: Scripting4
# 304: Scripting5
# 305: Scripting6
# 306: Scripting7
# 307: Scripting8
# 155: Set roll pitch and yaw trim to current servo and RC
# 88: Soaring Enable
# 112: SwitchExternalAHRS
# 77: TAKEOFF Mode
# 98: TRAINING Mode
# 96: Trigger re-reading of mode switch
# 209: VTOL Forward Throttle
# 94: VTX Power
# 160: Weathervane Enable
RC16_OPTION,0

# RC reversed
# Reverse channel input. Set to 0 for normal operation. Set to 1 to reverse this input channel.
# 0: Normal
# 1: Reversed
RC16_REVERSED,0

# RC trim PWM
# RC trim (neutral) PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral
# and 2000 is upper limit.
# Units: PWM (PWM in microseconds)
# Range: 800 2200
# Increment: 1
RC16_TRIM,1500

# RC dead-zone
# PWM dead zone in microseconds around trim or bottom
# Units: PWM (PWM in microseconds)
# Range: 0 200
RC2_DZ,30

# RC max PWM
# RC maximum PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000
# is upper limit.
# Units: PWM (PWM in microseconds)
# Range: 800 2200
# Increment: 1
RC2_MAX,1900

# RC min PWM
# RC minimum PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000
# is upper limit.
# Units: PWM (PWM in microseconds)
# Range: 800 2200
# Increment: 1
RC2_MIN,1100

# RC input option
# Function assigned to this RC channel
# 0: Do Nothing
# 52: ACRO Mode
# 38: ADSB Avoidance Enable
# 16: AUTO Mode
# 84: AirMode
# 210: Airbrakes
# 91: Airspeed Ratio Calibration
# 165: Arm/Emergency Motor Stop
# 41: ArmDisarm (4.1 and lower)
# 153: ArmDisarm (4.2 and higher)
# 154: ArmDisarm with Quadplane AirMode (4.2 and higher)
# 24: Auto Mission Reset
# 172: Battery MPPT Enable
# 72: CIRCLE Mode
# 150: CRUISE Mode
# 171: Calibrate Compasses
# 169: Camera Auto Focus
# 174: Camera Image Tracking
# 175: Camera Lens
# 168: Camera Manual Focus
# 102: Camera Mode Toggle
# 166: Camera Record Video
# 9: Camera Trigger
# 167: Camera Zoom
# 58: Clear Waypoints
# 62: Compass Learn
# 87: Crow Select
# 106: Disable Airspeed Use
# 81: Disarm
# 90: EKF Pos Source
# 107: Enable FW Autotune
# 92: FBWA Mode
# 95: FBWA taildragger takeoff mode
# 162: FFT Tune
# 11: Fence Enable
# 208: Flap
# 157: Force FS Action to FBWA
# 65: GPS Disable
# 105: GPS Disable Yaw
# 55: GUIDED Mode
# 85: Generator
# 43: InvertedFlight Enable
# 100: KillIMU1
# 101: KillIMU2
# 110: KillIMU3
# 56: LOITER Mode
# 89: Landing Flare
# 29: Landing Gear
# 30: Lost Plane Sound
# 51: MANUAL Mode
# 31: Motor Emergency Stop
# 163: Mount Lock
# 213: Mount1 Pitch
# 212: Mount1 Roll
# 214: Mount1 Yaw
# 216: Mount2 Pitch
# 215: Mount2 Roll
# 217: Mount2 Yaw
# 86: Non Auto Terrain Follow Disable
# 158: Optflow Calibration
# 22: Parachute Release
# 164: Pause Stream Logging
# 173: Plane AUTO Mode Landing Abort
# 82: QAssist 3pos
# 108: QRTL Mode
# 170: QSTABILIZE Mode
# 176: Quadplane Fwd Throttle Override enable
# 46: RC Override Enable
# 4: RTL
# 28: Relay1 On/Off
# 34: Relay2 On/Off
# 35: Relay3 On/Off
# 36: Relay4 On/Off
# 66: Relay5 On/Off
# 67: Relay6 On/Off
# 27: Retract Mount1
# 64: Reverse Throttle
# 78: RunCam Control
# 79: RunCam OSD Control
# 300: Scripting1
# 301: Scripting2
# 302: Scripting3
# 303: Scripting4
# 304: Scripting5
# 305: Scripting6
# 306: Scripting7
# 307: Scripting8
# 155: Set roll pitch and yaw trim to current servo and RC
# 88: Soaring Enable
# 112: SwitchExternalAHRS
# 77: TAKEOFF Mode
# 98: TRAINING Mode
# 96: Trigger re-reading of mode switch
# 209: VTOL Forward Throttle
# 94: VTX Power
# 160: Weathervane Enable
RC2_OPTION,0

# RC reversed
# Reverse channel input. Set to 0 for normal operation. Set to 1 to reverse this input channel.
# 0: Normal
# 1: Reversed
RC2_REVERSED,0

# RC trim PWM
# RC trim (neutral) PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral
# and 2000 is upper limit.
# Units: PWM (PWM in microseconds)
# Range: 800 2200
# Increment: 1
RC2_TRIM,1500

# RC dead-zone
# PWM dead zone in microseconds around trim or bottom
# Units: PWM (PWM in microseconds)
# Range: 0 200
RC3_DZ,30

# RC max PWM
# RC maximum PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000
# is upper limit.
# Units: PWM (PWM in microseconds)
# Range: 800 2200
# Increment: 1
RC3_MAX,1900

# RC min PWM
# RC minimum PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000
# is upper limit.
# Units: PWM (PWM in microseconds)
# Range: 800 2200
# Increment: 1
RC3_MIN,1100

# RC input option
# Function assigned to this RC channel
# 0: Do Nothing
# 52: ACRO Mode
# 38: ADSB Avoidance Enable
# 16: AUTO Mode
# 84: AirMode
# 210: Airbrakes
# 91: Airspeed Ratio Calibration
# 165: Arm/Emergency Motor Stop
# 41: ArmDisarm (4.1 and lower)
# 153: ArmDisarm (4.2 and higher)
# 154: ArmDisarm with Quadplane AirMode (4.2 and higher)
# 24: Auto Mission Reset
# 172: Battery MPPT Enable
# 72: CIRCLE Mode
# 150: CRUISE Mode
# 171: Calibrate Compasses
# 169: Camera Auto Focus
# 174: Camera Image Tracking
# 175: Camera Lens
# 168: Camera Manual Focus
# 102: Camera Mode Toggle
# 166: Camera Record Video
# 9: Camera Trigger
# 167: Camera Zoom
# 58: Clear Waypoints
# 62: Compass Learn
# 87: Crow Select
# 106: Disable Airspeed Use
# 81: Disarm
# 90: EKF Pos Source
# 107: Enable FW Autotune
# 92: FBWA Mode
# 95: FBWA taildragger takeoff mode
# 162: FFT Tune
# 11: Fence Enable
# 208: Flap
# 157: Force FS Action to FBWA
# 65: GPS Disable
# 105: GPS Disable Yaw
# 55: GUIDED Mode
# 85: Generator
# 43: InvertedFlight Enable
# 100: KillIMU1
# 101: KillIMU2
# 110: KillIMU3
# 56: LOITER Mode
# 89: Landing Flare
# 29: Landing Gear
# 30: Lost Plane Sound
# 51: MANUAL Mode
# 31: Motor Emergency Stop
# 163: Mount Lock
# 213: Mount1 Pitch
# 212: Mount1 Roll
# 214: Mount1 Yaw
# 216: Mount2 Pitch
# 215: Mount2 Roll
# 217: Mount2 Yaw
# 86: Non Auto Terrain Follow Disable
# 158: Optflow Calibration
# 22: Parachute Release
# 164: Pause Stream Logging
# 173: Plane AUTO Mode Landing Abort
# 82: QAssist 3pos
# 108: QRTL Mode
# 170: QSTABILIZE Mode
# 176: Quadplane Fwd Throttle Override enable
# 46: RC Override Enable
# 4: RTL
# 28: Relay1 On/Off
# 34: Relay2 On/Off
# 35: Relay3 On/Off
# 36: Relay4 On/Off
# 66: Relay5 On/Off
# 67: Relay6 On/Off
# 27: Retract Mount1
# 64: Reverse Throttle
# 78: RunCam Control
# 79: RunCam OSD Control
# 300: Scripting1
# 301: Scripting2
# 302: Scripting3
# 303: Scripting4
# 304: Scripting5
# 305: Scripting6
# 306: Scripting7
# 307: Scripting8
# 155: Set roll pitch and yaw trim to current servo and RC
# 88: Soaring Enable
# 112: SwitchExternalAHRS
# 77: TAKEOFF Mode
# 98: TRAINING Mode
# 96: Trigger re-reading of mode switch
# 209: VTOL Forward Throttle
# 94: VTX Power
# 160: Weathervane Enable
RC3_OPTION,0

# RC reversed
# Reverse channel input. Set to 0 for normal operation. Set to 1 to reverse this input channel.
# 0: Normal
# 1: Reversed
RC3_REVERSED,0

# RC trim PWM
# RC trim (neutral) PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral
# and 2000 is upper limit.
# Units: PWM (PWM in microseconds)
# Range: 800 2200
# Increment: 1
RC3_TRIM,1500

# RC dead-zone
# PWM dead zone in microseconds around trim or bottom
# Units: PWM (PWM in microseconds)
# Range: 0 200
RC4_DZ,30

# RC max PWM
# RC maximum PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000
# is upper limit.
# Units: PWM (PWM in microseconds)
# Range: 800 2200
# Increment: 1
RC4_MAX,1900

# RC min PWM
# RC minimum PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000
# is upper limit.
# Units: PWM (PWM in microseconds)
# Range: 800 2200
# Increment: 1
RC4_MIN,1100

# RC input option
# Function assigned to this RC channel
# 0: Do Nothing
# 52: ACRO Mode
# 38: ADSB Avoidance Enable
# 16: AUTO Mode
# 84: AirMode
# 210: Airbrakes
# 91: Airspeed Ratio Calibration
# 165: Arm/Emergency Motor Stop
# 41: ArmDisarm (4.1 and lower)
# 153: ArmDisarm (4.2 and higher)
# 154: ArmDisarm with Quadplane AirMode (4.2 and higher)
# 24: Auto Mission Reset
# 172: Battery MPPT Enable
# 72: CIRCLE Mode
# 150: CRUISE Mode
# 171: Calibrate Compasses
# 169: Camera Auto Focus
# 174: Camera Image Tracking
# 175: Camera Lens
# 168: Camera Manual Focus
# 102: Camera Mode Toggle
# 166: Camera Record Video
# 9: Camera Trigger
# 167: Camera Zoom
# 58: Clear Waypoints
# 62: Compass Learn
# 87: Crow Select
# 106: Disable Airspeed Use
# 81: Disarm
# 90: EKF Pos Source
# 107: Enable FW Autotune
# 92: FBWA Mode
# 95: FBWA taildragger takeoff mode
# 162: FFT Tune
# 11: Fence Enable
# 208: Flap
# 157: Force FS Action to FBWA
# 65: GPS Disable
# 105: GPS Disable Yaw
# 55: GUIDED Mode
# 85: Generator
# 43: InvertedFlight Enable
# 100: KillIMU1
# 101: KillIMU2
# 110: KillIMU3
# 56: LOITER Mode
# 89: Landing Flare
# 29: Landing Gear
# 30: Lost Plane Sound
# 51: MANUAL Mode
# 31: Motor Emergency Stop
# 163: Mount Lock
# 213: Mount1 Pitch
# 212: Mount1 Roll
# 214: Mount1 Yaw
# 216: Mount2 Pitch
# 215: Mount2 Roll
# 217: Mount2 Yaw
# 86: Non Auto Terrain Follow Disable
# 158: Optflow Calibration
# 22: Parachute Release
# 164: Pause Stream Logging
# 173: Plane AUTO Mode Landing Abort
# 82: QAssist 3pos
# 108: QRTL Mode
# 170: QSTABILIZE Mode
# 176: Quadplane Fwd Throttle Override enable
# 46: RC Override Enable
# 4: RTL
# 28: Relay1 On/Off
# 34: Relay2 On/Off
# 35: Relay3 On/Off
# 36: Relay4 On/Off
# 66: Relay5 On/Off
# 67: Relay6 On/Off
# 27: Retract Mount1
# 64: Reverse Throttle
# 78: RunCam Control
# 79: RunCam OSD Control
# 300: Scripting1
# 301: Scripting2
# 302: Scripting3
# 303: Scripting4
# 304: Scripting5
# 305: Scripting6
# 306: Scripting7
# 307: Scripting8
# 155: Set roll pitch and yaw trim to current servo and RC
# 88: Soaring Enable
# 112: SwitchExternalAHRS
# 77: TAKEOFF Mode
# 98: TRAINING Mode
# 96: Trigger re-reading of mode switch
# 209: VTOL Forward Throttle
# 94: VTX Power
# 160: Weathervane Enable
RC4_OPTION,0

# RC reversed
# Reverse channel input. Set to 0 for normal operation. Set to 1 to reverse this input channel.
# 0: Normal
# 1: Reversed
RC4_REVERSED,0

# RC trim PWM
# RC trim (neutral) PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral
# and 2000 is upper limit.
# Units: PWM (PWM in microseconds)
# Range: 800 2200
# Increment: 1
RC4_TRIM,1500

# RC dead-zone
# PWM dead zone in microseconds around trim or bottom
# Units: PWM (PWM in microseconds)
# Range: 0 200
RC5_DZ,0

# RC max PWM
# RC maximum PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000
# is upper limit.
# Units: PWM (PWM in microseconds)
# Range: 800 2200
# Increment: 1
RC5_MAX,1900

# RC min PWM
# RC minimum PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000
# is upper limit.
# Units: PWM (PWM in microseconds)
# Range: 800 2200
# Increment: 1
RC5_MIN,1100

# RC input option
# Function assigned to this RC channel
# 0: Do Nothing
# 52: ACRO Mode
# 38: ADSB Avoidance Enable
# 16: AUTO Mode
# 84: AirMode
# 210: Airbrakes
# 91: Airspeed Ratio Calibration
# 165: Arm/Emergency Motor Stop
# 41: ArmDisarm (4.1 and lower)
# 153: ArmDisarm (4.2 and higher)
# 154: ArmDisarm with Quadplane AirMode (4.2 and higher)
# 24: Auto Mission Reset
# 172: Battery MPPT Enable
# 72: CIRCLE Mode
# 150: CRUISE Mode
# 171: Calibrate Compasses
# 169: Camera Auto Focus
# 174: Camera Image Tracking
# 175: Camera Lens
# 168: Camera Manual Focus
# 102: Camera Mode Toggle
# 166: Camera Record Video
# 9: Camera Trigger
# 167: Camera Zoom
# 58: Clear Waypoints
# 62: Compass Learn
# 87: Crow Select
# 106: Disable Airspeed Use
# 81: Disarm
# 90: EKF Pos Source
# 107: Enable FW Autotune
# 92: FBWA Mode
# 95: FBWA taildragger takeoff mode
# 162: FFT Tune
# 11: Fence Enable
# 208: Flap
# 157: Force FS Action to FBWA
# 65: GPS Disable
# 105: GPS Disable Yaw
# 55: GUIDED Mode
# 85: Generator
# 43: InvertedFlight Enable
# 100: KillIMU1
# 101: KillIMU2
# 110: KillIMU3
# 56: LOITER Mode
# 89: Landing Flare
# 29: Landing Gear
# 30: Lost Plane Sound
# 51: MANUAL Mode
# 31: Motor Emergency Stop
# 163: Mount Lock
# 213: Mount1 Pitch
# 212: Mount1 Roll
# 214: Mount1 Yaw
# 216: Mount2 Pitch
# 215: Mount2 Roll
# 217: Mount2 Yaw
# 86: Non Auto Terrain Follow Disable
# 158: Optflow Calibration
# 22: Parachute Release
# 164: Pause Stream Logging
# 173: Plane AUTO Mode Landing Abort
# 82: QAssist 3pos
# 108: QRTL Mode
# 170: QSTABILIZE Mode
# 176: Quadplane Fwd Throttle Override enable
# 46: RC Override Enable
# 4: RTL
# 28: Relay1 On/Off
# 34: Relay2 On/Off
# 35: Relay3 On/Off
# 36: Relay4 On/Off
# 66: Relay5 On/Off
# 67: Relay6 On/Off
# 27: Retract Mount1
# 64: Reverse Throttle
# 78: RunCam Control
# 79: RunCam OSD Control
# 300: Scripting1
# 301: Scripting2
# 302: Scripting3
# 303: Scripting4
# 304: Scripting5
# 305: Scripting6
# 306: Scripting7
# 307: Scripting8
# 155: Set roll pitch and yaw trim to current servo and RC
# 88: Soaring Enable
# 112: SwitchExternalAHRS
# 77: TAKEOFF Mode
# 98: TRAINING Mode
# 96: Trigger re-reading of mode switch
# 209: VTOL Forward Throttle
# 94: VTX Power
# 160: Weathervane Enable
RC5_OPTION,0

# RC reversed
# Reverse channel input. Set to 0 for normal operation. Set to 1 to reverse this input channel.
# 0: Normal
# 1: Reversed
RC5_REVERSED,0

# RC trim PWM
# RC trim (neutral) PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral
# and 2000 is upper limit.
# Units: PWM (PWM in microseconds)
# Range: 800 2200
# Increment: 1
RC5_TRIM,1500

# RC dead-zone
# PWM dead zone in microseconds around trim or bottom
# Units: PWM (PWM in microseconds)
# Range: 0 200
RC6_DZ,0

# RC max PWM
# RC maximum PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000
# is upper limit.
# Units: PWM (PWM in microseconds)
# Range: 800 2200
# Increment: 1
RC6_MAX,1900

# RC min PWM
# RC minimum PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000
# is upper limit.
# Units: PWM (PWM in microseconds)
# Range: 800 2200
# Increment: 1
RC6_MIN,1100

# RC input option
# Function assigned to this RC channel
# 0: Do Nothing
# 52: ACRO Mode
# 38: ADSB Avoidance Enable
# 16: AUTO Mode
# 84: AirMode
# 210: Airbrakes
# 91: Airspeed Ratio Calibration
# 165: Arm/Emergency Motor Stop
# 41: ArmDisarm (4.1 and lower)
# 153: ArmDisarm (4.2 and higher)
# 154: ArmDisarm with Quadplane AirMode (4.2 and higher)
# 24: Auto Mission Reset
# 172: Battery MPPT Enable
# 72: CIRCLE Mode
# 150: CRUISE Mode
# 171: Calibrate Compasses
# 169: Camera Auto Focus
# 174: Camera Image Tracking
# 175: Camera Lens
# 168: Camera Manual Focus
# 102: Camera Mode Toggle
# 166: Camera Record Video
# 9: Camera Trigger
# 167: Camera Zoom
# 58: Clear Waypoints
# 62: Compass Learn
# 87: Crow Select
# 106: Disable Airspeed Use
# 81: Disarm
# 90: EKF Pos Source
# 107: Enable FW Autotune
# 92: FBWA Mode
# 95: FBWA taildragger takeoff mode
# 162: FFT Tune
# 11: Fence Enable
# 208: Flap
# 157: Force FS Action to FBWA
# 65: GPS Disable
# 105: GPS Disable Yaw
# 55: GUIDED Mode
# 85: Generator
# 43: InvertedFlight Enable
# 100: KillIMU1
# 101: KillIMU2
# 110: KillIMU3
# 56: LOITER Mode
# 89: Landing Flare
# 29: Landing Gear
# 30: Lost Plane Sound
# 51: MANUAL Mode
# 31: Motor Emergency Stop
# 163: Mount Lock
# 213: Mount1 Pitch
# 212: Mount1 Roll
# 214: Mount1 Yaw
# 216: Mount2 Pitch
# 215: Mount2 Roll
# 217: Mount2 Yaw
# 86: Non Auto Terrain Follow Disable
# 158: Optflow Calibration
# 22: Parachute Release
# 164: Pause Stream Logging
# 173: Plane AUTO Mode Landing Abort
# 82: QAssist 3pos
# 108: QRTL Mode
# 170: QSTABILIZE Mode
# 176: Quadplane Fwd Throttle Override enable
# 46: RC Override Enable
# 4: RTL
# 28: Relay1 On/Off
# 34: Relay2 On/Off
# 35: Relay3 On/Off
# 36: Relay4 On/Off
# 66: Relay5 On/Off
# 67: Relay6 On/Off
# 27: Retract Mount1
# 64: Reverse Throttle
# 78: RunCam Control
# 79: RunCam OSD Control
# 300: Scripting1
# 301: Scripting2
# 302: Scripting3
# 303: Scripting4
# 304: Scripting5
# 305: Scripting6
# 306: Scripting7
# 307: Scripting8
# 155: Set roll pitch and yaw trim to current servo and RC
# 88: Soaring Enable
# 112: SwitchExternalAHRS
# 77: TAKEOFF Mode
# 98: TRAINING Mode
# 96: Trigger re-reading of mode switch
# 209: VTOL Forward Throttle
# 94: VTX Power
# 160: Weathervane Enable
RC6_OPTION,0

# RC reversed
# Reverse channel input. Set to 0 for normal operation. Set to 1 to reverse this input channel.
# 0: Normal
# 1: Reversed
RC6_REVERSED,0

# RC trim PWM
# RC trim (neutral) PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral
# and 2000 is upper limit.
# Units: PWM (PWM in microseconds)
# Range: 800 2200
# Increment: 1
RC6_TRIM,1500

# RC dead-zone
# PWM dead zone in microseconds around trim or bottom
# Units: PWM (PWM in microseconds)
# Range: 0 200
RC7_DZ,0

# RC max PWM
# RC maximum PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000
# is upper limit.
# Units: PWM (PWM in microseconds)
# Range: 800 2200
# Increment: 1
RC7_MAX,1900

# RC min PWM
# RC minimum PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000
# is upper limit.
# Units: PWM (PWM in microseconds)
# Range: 800 2200
# Increment: 1
RC7_MIN,1100

# RC input option
# Function assigned to this RC channel
# 0: Do Nothing
# 52: ACRO Mode
# 38: ADSB Avoidance Enable
# 16: AUTO Mode
# 84: AirMode
# 210: Airbrakes
# 91: Airspeed Ratio Calibration
# 165: Arm/Emergency Motor Stop
# 41: ArmDisarm (4.1 and lower)
# 153: ArmDisarm (4.2 and higher)
# 154: ArmDisarm with Quadplane AirMode (4.2 and higher)
# 24: Auto Mission Reset
# 172: Battery MPPT Enable
# 72: CIRCLE Mode
# 150: CRUISE Mode
# 171: Calibrate Compasses
# 169: Camera Auto Focus
# 174: Camera Image Tracking
# 175: Camera Lens
# 168: Camera Manual Focus
# 102: Camera Mode Toggle
# 166: Camera Record Video
# 9: Camera Trigger
# 167: Camera Zoom
# 58: Clear Waypoints
# 62: Compass Learn
# 87: Crow Select
# 106: Disable Airspeed Use
# 81: Disarm
# 90: EKF Pos Source
# 107: Enable FW Autotune
# 92: FBWA Mode
# 95: FBWA taildragger takeoff mode
# 162: FFT Tune
# 11: Fence Enable
# 208: Flap
# 157: Force FS Action to FBWA
# 65: GPS Disable
# 105: GPS Disable Yaw
# 55: GUIDED Mode
# 85: Generator
# 43: InvertedFlight Enable
# 100: KillIMU1
# 101: KillIMU2
# 110: KillIMU3
# 56: LOITER Mode
# 89: Landing Flare
# 29: Landing Gear
# 30: Lost Plane Sound
# 51: MANUAL Mode
# 31: Motor Emergency Stop
# 163: Mount Lock
# 213: Mount1 Pitch
# 212: Mount1 Roll
# 214: Mount1 Yaw
# 216: Mount2 Pitch
# 215: Mount2 Roll
# 217: Mount2 Yaw
# 86: Non Auto Terrain Follow Disable
# 158: Optflow Calibration
# 22: Parachute Release
# 164: Pause Stream Logging
# 173: Plane AUTO Mode Landing Abort
# 82: QAssist 3pos
# 108: QRTL Mode
# 170: QSTABILIZE Mode
# 176: Quadplane Fwd Throttle Override enable
# 46: RC Override Enable
# 4: RTL
# 28: Relay1 On/Off
# 34: Relay2 On/Off
# 35: Relay3 On/Off
# 36: Relay4 On/Off
# 66: Relay5 On/Off
# 67: Relay6 On/Off
# 27: Retract Mount1
# 64: Reverse Throttle
# 78: RunCam Control
# 79: RunCam OSD Control
# 300: Scripting1
# 301: Scripting2
# 302: Scripting3
# 303: Scripting4
# 304: Scripting5
# 305: Scripting6
# 306: Scripting7
# 307: Scripting8
# 155: Set roll pitch and yaw trim to current servo and RC
# 88: Soaring Enable
# 112: SwitchExternalAHRS
# 77: TAKEOFF Mode
# 98: TRAINING Mode
# 96: Trigger re-reading of mode switch
# 209: VTOL Forward Throttle
# 94: VTX Power
# 160: Weathervane Enable
RC7_OPTION,0

# RC reversed
# Reverse channel input. Set to 0 for normal operation. Set to 1 to reverse this input channel.
# 0: Normal
# 1: Reversed
RC7_REVERSED,0

# RC trim PWM
# RC trim (neutral) PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral
# and 2000 is upper limit.
# Units: PWM (PWM in microseconds)
# Range: 800 2200
# Increment: 1
RC7_TRIM,1500

# RC dead-zone
# PWM dead zone in microseconds around trim or bottom
# Units: PWM (PWM in microseconds)
# Range: 0 200
RC8_DZ,0

# RC max PWM
# RC maximum PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000
# is upper limit.
# Units: PWM (PWM in microseconds)
# Range: 800 2200
# Increment: 1
RC8_MAX,1900

# RC min PWM
# RC minimum PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000
# is upper limit.
# Units: PWM (PWM in microseconds)
# Range: 800 2200
# Increment: 1
RC8_MIN,1100

# RC input option
# Function assigned to this RC channel
# 0: Do Nothing
# 52: ACRO Mode
# 38: ADSB Avoidance Enable
# 16: AUTO Mode
# 84: AirMode
# 210: Airbrakes
# 91: Airspeed Ratio Calibration
# 165: Arm/Emergency Motor Stop
# 41: ArmDisarm (4.1 and lower)
# 153: ArmDisarm (4.2 and higher)
# 154: ArmDisarm with Quadplane AirMode (4.2 and higher)
# 24: Auto Mission Reset
# 172: Battery MPPT Enable
# 72: CIRCLE Mode
# 150: CRUISE Mode
# 171: Calibrate Compasses
# 169: Camera Auto Focus
# 174: Camera Image Tracking
# 175: Camera Lens
# 168: Camera Manual Focus
# 102: Camera Mode Toggle
# 166: Camera Record Video
# 9: Camera Trigger
# 167: Camera Zoom
# 58: Clear Waypoints
# 62: Compass Learn
# 87: Crow Select
# 106: Disable Airspeed Use
# 81: Disarm
# 90: EKF Pos Source
# 107: Enable FW Autotune
# 92: FBWA Mode
# 95: FBWA taildragger takeoff mode
# 162: FFT Tune
# 11: Fence Enable
# 208: Flap
# 157: Force FS Action to FBWA
# 65: GPS Disable
# 105: GPS Disable Yaw
# 55: GUIDED Mode
# 85: Generator
# 43: InvertedFlight Enable
# 100: KillIMU1
# 101: KillIMU2
# 110: KillIMU3
# 56: LOITER Mode
# 89: Landing Flare
# 29: Landing Gear
# 30: Lost Plane Sound
# 51: MANUAL Mode
# 31: Motor Emergency Stop
# 163: Mount Lock
# 213: Mount1 Pitch
# 212: Mount1 Roll
# 214: Mount1 Yaw
# 216: Mount2 Pitch
# 215: Mount2 Roll
# 217: Mount2 Yaw
# 86: Non Auto Terrain Follow Disable
# 158: Optflow Calibration
# 22: Parachute Release
# 164: Pause Stream Logging
# 173: Plane AUTO Mode Landing Abort
# 82: QAssist 3pos
# 108: QRTL Mode
# 170: QSTABILIZE Mode
# 176: Quadplane Fwd Throttle Override enable
# 46: RC Override Enable
# 4: RTL
# 28: Relay1 On/Off
# 34: Relay2 On/Off
# 35: Relay3 On/Off
# 36: Relay4 On/Off
# 66: Relay5 On/Off
# 67: Relay6 On/Off
# 27: Retract Mount1
# 64: Reverse Throttle
# 78: RunCam Control
# 79: RunCam OSD Control
# 300: Scripting1
# 301: Scripting2
# 302: Scripting3
# 303: Scripting4
# 304: Scripting5
# 305: Scripting6
# 306: Scripting7
# 307: Scripting8
# 155: Set roll pitch and yaw trim to current servo and RC
# 88: Soaring Enable
# 112: SwitchExternalAHRS
# 77: TAKEOFF Mode
# 98: TRAINING Mode
# 96: Trigger re-reading of mode switch
# 209: VTOL Forward Throttle
# 94: VTX Power
# 160: Weathervane Enable
RC8_OPTION,0

# RC reversed
# Reverse channel input. Set to 0 for normal operation. Set to 1 to reverse this input channel.
# 0: Normal
# 1: Reversed
RC8_REVERSED,0

# RC trim PWM
# RC trim (neutral) PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral
# and 2000 is upper limit.
# Units: PWM (PWM in microseconds)
# Range: 800 2200
# Increment: 1
RC8_TRIM,1500

# RC dead-zone
# PWM dead zone in microseconds around trim or bottom
# Units: PWM (PWM in microseconds)
# Range: 0 200
RC9_DZ,0

# RC max PWM
# RC maximum PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000
# is upper limit.
# Units: PWM (PWM in microseconds)
# Range: 800 2200
# Increment: 1
RC9_MAX,1900

# RC min PWM
# RC minimum PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000
# is upper limit.
# Units: PWM (PWM in microseconds)
# Range: 800 2200
# Increment: 1
RC9_MIN,1100

# RC input option
# Function assigned to this RC channel
# 0: Do Nothing
# 52: ACRO Mode
# 38: ADSB Avoidance Enable
# 16: AUTO Mode
# 84: AirMode
# 210: Airbrakes
# 91: Airspeed Ratio Calibration
# 165: Arm/Emergency Motor Stop
# 41: ArmDisarm (4.1 and lower)
# 153: ArmDisarm (4.2 and higher)
# 154: ArmDisarm with Quadplane AirMode (4.2 and higher)
# 24: Auto Mission Reset
# 172: Battery MPPT Enable
# 72: CIRCLE Mode
# 150: CRUISE Mode
# 171: Calibrate Compasses
# 169: Camera Auto Focus
# 174: Camera Image Tracking
# 175: Camera Lens
# 168: Camera Manual Focus
# 102: Camera Mode Toggle
# 166: Camera Record Video
# 9: Camera Trigger
# 167: Camera Zoom
# 58: Clear Waypoints
# 62: Compass Learn
# 87: Crow Select
# 106: Disable Airspeed Use
# 81: Disarm
# 90: EKF Pos Source
# 107: Enable FW Autotune
# 92: FBWA Mode
# 95: FBWA taildragger takeoff mode
# 162: FFT Tune
# 11: Fence Enable
# 208: Flap
# 157: Force FS Action to FBWA
# 65: GPS Disable
# 105: GPS Disable Yaw
# 55: GUIDED Mode
# 85: Generator
# 43: InvertedFlight Enable
# 100: KillIMU1
# 101: KillIMU2
# 110: KillIMU3
# 56: LOITER Mode
# 89: Landing Flare
# 29: Landing Gear
# 30: Lost Plane Sound
# 51: MANUAL Mode
# 31: Motor Emergency Stop
# 163: Mount Lock
# 213: Mount1 Pitch
# 212: Mount1 Roll
# 214: Mount1 Yaw
# 216: Mount2 Pitch
# 215: Mount2 Roll
# 217: Mount2 Yaw
# 86: Non Auto Terrain Follow Disable
# 158: Optflow Calibration
# 22: Parachute Release
# 164: Pause Stream Logging
# 173: Plane AUTO Mode Landing Abort
# 82: QAssist 3pos
# 108: QRTL Mode
# 170: QSTABILIZE Mode
# 176: Quadplane Fwd Throttle Override enable
# 46: RC Override Enable
# 4: RTL
# 28: Relay1 On/Off
# 34: Relay2 On/Off
# 35: Relay3 On/Off
# 36: Relay4 On/Off
# 66: Relay5 On/Off
# 67: Relay6 On/Off
# 27: Retract Mount1
# 64: Reverse Throttle
# 78: RunCam Control
# 79: RunCam OSD Control
# 300: Scripting1
# 301: Scripting2
# 302: Scripting3
# 303: Scripting4
# 304: Scripting5
# 305: Scripting6
# 306: Scripting7
# 307: Scripting8
# 155: Set roll pitch and yaw trim to current servo and RC
# 88: Soaring Enable
# 112: SwitchExternalAHRS
# 77: TAKEOFF Mode
# 98: TRAINING Mode
# 96: Trigger re-reading of mode switch
# 209: VTOL Forward Throttle
# 94: VTX Power
# 160: Weathervane Enable
RC9_OPTION,0

# RC reversed
# Reverse channel input. Set to 0 for normal operation. Set to 1 to reverse this input channel.
# 0: Normal
# 1: Reversed
RC9_REVERSED,0

# RC trim PWM
# RC trim (neutral) PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral
# and 2000 is upper limit.
# Units: PWM (PWM in microseconds)
# Range: 800 2200
# Increment: 1
RC9_TRIM,1500

# Pitch channel
# Pitch channel number. This is useful when you have a RC transmitter that can't change the channel
# order easily. Pitch is normally on channel 2, but you can move it to any channel with this
# parameter.  Reboot is required for changes to take effect.
# Range: 1 16
# Increment: 1
# RebootRequired: True
RCMAP_PITCH,2

# Roll channel
# Roll channel number. This is useful when you have a RC transmitter that can't change the channel
# order easily. Roll is normally on channel 1, but you can move it to any channel with this parameter.
#  Reboot is required for changes to take effect.
# Range: 1 16
# Increment: 1
# RebootRequired: True
RCMAP_ROLL,1

# Throttle channel
# Throttle channel number. This is useful when you have a RC transmitter that can't change the channel
# order easily. Throttle is normally on channel 3, but you can move it to any channel with this
# parameter. Reboot is required for changes to take effect.
# Range: 1 16
# Increment: 1
# RebootRequired: True
RCMAP_THROTTLE,3

# Yaw channel
# Yaw channel number. This is useful when you have a RC transmitter that can't change the channel
# order easily. Yaw (also known as rudder) is normally on channel 4, but you can move it to any
# channel with this parameter.  Reboot is required for changes to take effect.
# Range: 1 16
# Increment: 1
# RebootRequired: True
RCMAP_YAW,4

# Relay default state
# Should the relay default to on or off, this only applies to RELAYx_FUNC "Relay" (1). All other uses
# will pick the appropriate default output state from within the controlling function's parameters.
# 0: Off
# 1: On
# 2: NoChange
RELAY1_DEFAULT,0

# Relay function
# The function the relay channel is mapped to.
# 0: None
# 1: Relay
# 2: Ignition
# 3: Parachute
# 4: Camera
# 9: ICE Starter
RELAY1_FUNCTION,1

# Relay pin
# Digital pin number for relay control. Some common values are given, but see the Wiki's "GPIOs" page
# for how to determine the pin number for a given autopilot.
# -1: Disabled                        101: MainOut1                       1004: DroneCAN Hardpoint ID 4
# 49: BB Blue GP0 pin 4               102: MainOut2                       1005: DroneCAN Hardpoint ID 5
# 50: AUXOUT1                         103: MainOut3                       1006: DroneCAN Hardpoint ID 6
# 51: AUXOUT2                         104: MainOut4                       1007: DroneCAN Hardpoint ID 7
# 52: AUXOUT3                         105: MainOut5                       1008: DroneCAN Hardpoint ID 8
# 53: AUXOUT4                         106: MainOut6                       1009: DroneCAN Hardpoint ID 9
# 54: AUXOUT5                         107: MainOut7                       1010: DroneCAN Hardpoint ID 10
# 55: AUXOUT6                         108: MainOut8                       1011: DroneCAN Hardpoint ID 11
# 57: BB Blue GP0 pin 3               1000: DroneCAN Hardpoint ID 0       1012: DroneCAN Hardpoint ID 12
# 113: BB Blue GP0 pin 6              1001: DroneCAN Hardpoint ID 1       1013: DroneCAN Hardpoint ID 13
# 116: BB Blue GP0 pin 5              1002: DroneCAN Hardpoint ID 2       1014: DroneCAN Hardpoint ID 14
# 62: BBBMini Pin P8.13               1003: DroneCAN Hardpoint ID 3       1015: DroneCAN Hardpoint ID 15
RELAY1_PIN,13

# Relay function
# The function the relay channel is mapped to.
# 0: None
# 1: Relay
# 2: Ignition
# 3: Parachute
# 4: Camera
# 9: ICE Starter
RELAY2_FUNCTION,0

# Relay function
# The function the relay channel is mapped to.
# 0: None
# 1: Relay
# 2: Ignition
# 3: Parachute
# 4: Camera
# 9: ICE Starter
RELAY3_FUNCTION,0

# Relay function
# The function the relay channel is mapped to.
# 0: None
# 1: Relay
# 2: Ignition
# 3: Parachute
# 4: Camera
# 9: ICE Starter
RELAY4_FUNCTION,0

# Relay function
# The function the relay channel is mapped to.
# 0: None
# 1: Relay
# 2: Ignition
# 3: Parachute
# 4: Camera
# 9: ICE Starter
RELAY5_FUNCTION,0

# Relay function
# The function the relay channel is mapped to.
# 0: None
# 1: Relay
# 2: Ignition
# 3: Parachute
# 4: Camera
# 9: ICE Starter
RELAY6_FUNCTION,0

# Roll axis rate controller D gain
# Roll axis rate controller D gain.  Compensates for short-term change in desired roll rate vs actual
# roll rate
# Range: 0.001 0.03
# Increment: 0.001
RLL_RATE_D,0

# Roll Derivative FeedForward Gain
# FF D Gain which produces an output that is proportional to the rate of change of the target
# Range: 0 0.03
# Increment: 0.001
RLL_RATE_D_FF,0

# Roll axis rate controller feed forward
# Roll axis rate controller feed forward
# Range: 0 3.0
# Increment: 0.001
RLL_RATE_FF,0.345

# Roll axis rate controller derivative frequency in Hz
# Roll axis rate controller derivative frequency in Hz
# Range: 0 50
# Increment: 1
# Units: Hz (hertz)
RLL_RATE_FLTD,12

# Roll axis rate controller error frequency in Hz
# Roll axis rate controller error frequency in Hz
# Range: 2 50
# Increment: 1
# Units: Hz (hertz)
RLL_RATE_FLTE,0

# Roll axis rate controller target frequency in Hz
# Roll axis rate controller target frequency in Hz
# Range: 2 50
# Increment: 1
# Units: Hz (hertz)
RLL_RATE_FLTT,3

# Roll axis rate controller I gain
# Roll axis rate controller I gain.  Corrects long-term difference in desired roll rate vs actual roll
# rate
# Range: 0.01 0.6
# Increment: 0.01
RLL_RATE_I,0.15

# Roll axis rate controller I gain maximum
# Roll axis rate controller I gain maximum.  Constrains the maximum that the I term will output
# Range: 0 1
# Increment: 0.01
RLL_RATE_IMAX,0.666

# Roll Error notch filter index
# Roll Error notch filter index
# Range: 1 8
RLL_RATE_NEF,0

# Roll Target notch filter index
# Roll Target notch filter index
# Range: 1 8
RLL_RATE_NTF,0

# Roll axis rate controller P gain
# Roll axis rate controller P gain. Corrects in proportion to the difference between the desired roll
# rate vs actual roll rate
# Range: 0.08 0.35
# Increment: 0.005
RLL_RATE_P,0.08

# Roll axis rate controller PD sum maximum
# Roll axis rate controller PD sum maximum.  The maximum/minimum value that the sum of the P and D
# term can output
# Range: 0 1
# Increment: 0.01
RLL_RATE_PDMX,0

# Roll slew rate limit
# Sets an upper limit on the slew rate produced by the combined P and D gains. If the amplitude of the
# control action produced by the rate feedback exceeds this value, then the D+P gain is reduced to
# respect the limit. This limits the amplitude of high frequency oscillations caused by an excessive
# gain. The limit should be set to no more than 25% of the actuators maximum slew rate to allow for
# load effects. Note: The gain will not be reduced to less than 10% of the nominal value. A value of
# zero will disable this feature.
# Range: 0 200
# Increment: 0.5
RLL_RATE_SMAX,150

# Maximum Roll Rate
# This sets the maximum roll rate that the attitude controller will demand (degrees/sec) in angle
# stabilized modes. Setting it to zero disables this limit.
# Range: 0 180
# Units: deg/s (degrees per second)
# Increment: 1
RLL2SRV_RMAX,0

# Roll Time Constant
# Time constant in seconds from demanded to achieved roll angle. Most models respond well to 0.5. May
# be reduced for faster responses, but setting lower than a model can achieve will not help.
# Range: 0.4 1.0
# Units: s (seconds)
# Increment: 0.1
RLL2SRV_TCONST,0.5
RNGFND_LANDING,0

# Rangefinder type
# Type of connected rangefinder
# 0: None                             15: LidarLiteV3-I2C                 29: LeddarVu8-Serial
# 1: Analog                           16: VL53L0X or VL53L1X              30: HC-SR04
# 2: MaxbotixI2C                      17: NMEA                            31: GYUS42v2
# 3: LidarLite-I2C                    18: WASP-LRF                        32: MSP
# 5: PWM                              19: BenewakeTF02                    33: USD1_CAN
# 6: BBB-PRU                          20: Benewake-Serial                 34: Benewake_CAN
# 7: LightWareI2C                     21: LidarLightV3HP                  35: TeraRangerSerial
# 8: LightWareSerial                  22: PWM                             36: Lua_Scripting
# 9: Bebop                            23: BlueRoboticsPing                37: NoopLoop_TOFSense
# 10: MAVLink                         24: DroneCAN                        38: NoopLoop_TOFSense_CAN
# 11: USD1_Serial                     25: BenewakeTFminiPlus-I2C          39: NRA24_CAN
# 12: LeddarOne                       26: LanbaoPSK-CM8JL65-CC5           40: NoopLoop_TOFSenseF_I2C
# 13: MaxbotixSerial                  27: BenewakeTF03                    41: JRE_Serial
# 14: TeraRangerI2C                   28: VL53L1X-ShortRange              100: SITL
RNGFND1_TYPE,0

# Rangefinder type
# Type of connected rangefinder
# 0: None                             15: LidarLiteV3-I2C                 29: LeddarVu8-Serial
# 1: Analog                           16: VL53L0X or VL53L1X              30: HC-SR04
# 2: MaxbotixI2C                      17: NMEA                            31: GYUS42v2
# 3: LidarLite-I2C                    18: WASP-LRF                        32: MSP
# 5: PWM                              19: BenewakeTF02                    33: USD1_CAN
# 6: BBB-PRU                          20: Benewake-Serial                 34: Benewake_CAN
# 7: LightWareI2C                     21: LidarLightV3HP                  35: TeraRangerSerial
# 8: LightWareSerial                  22: PWM                             36: Lua_Scripting
# 9: Bebop                            23: BlueRoboticsPing                37: NoopLoop_TOFSense
# 10: MAVLink                         24: DroneCAN                        38: NoopLoop_TOFSense_CAN
# 11: USD1_Serial                     25: BenewakeTFminiPlus-I2C          39: NRA24_CAN
# 12: LeddarOne                       26: LanbaoPSK-CM8JL65-CC5           40: NoopLoop_TOFSenseF_I2C
# 13: MaxbotixSerial                  27: BenewakeTF03                    41: JRE_Serial
# 14: TeraRangerI2C                   28: VL53L1X-ShortRange              100: SITL
RNGFND2_TYPE,0

# Rangefinder type
# Type of connected rangefinder
# 0: None                             15: LidarLiteV3-I2C                 29: LeddarVu8-Serial
# 1: Analog                           16: VL53L0X or VL53L1X              30: HC-SR04
# 2: MaxbotixI2C                      17: NMEA                            31: GYUS42v2
# 3: LidarLite-I2C                    18: WASP-LRF                        32: MSP
# 5: PWM                              19: BenewakeTF02                    33: USD1_CAN
# 6: BBB-PRU                          20: Benewake-Serial                 34: Benewake_CAN
# 7: LightWareI2C                     21: LidarLightV3HP                  35: TeraRangerSerial
# 8: LightWareSerial                  22: PWM                             36: Lua_Scripting
# 9: Bebop                            23: BlueRoboticsPing                37: NoopLoop_TOFSense
# 10: MAVLink                         24: DroneCAN                        38: NoopLoop_TOFSense_CAN
# 11: USD1_Serial                     25: BenewakeTFminiPlus-I2C          39: NRA24_CAN
# 12: LeddarOne                       26: LanbaoPSK-CM8JL65-CC5           40: NoopLoop_TOFSenseF_I2C
# 13: MaxbotixSerial                  27: BenewakeTF03                    41: JRE_Serial
# 14: TeraRangerI2C                   28: VL53L1X-ShortRange              100: SITL
RNGFND3_TYPE,0

# Rangefinder type
# Type of connected rangefinder
# 0: None                             15: LidarLiteV3-I2C                 29: LeddarVu8-Serial
# 1: Analog                           16: VL53L0X or VL53L1X              30: HC-SR04
# 2: MaxbotixI2C                      17: NMEA                            31: GYUS42v2
# 3: LidarLite-I2C                    18: WASP-LRF                        32: MSP
# 5: PWM                              19: BenewakeTF02                    33: USD1_CAN
# 6: BBB-PRU                          20: Benewake-Serial                 34: Benewake_CAN
# 7: LightWareI2C                     21: LidarLightV3HP                  35: TeraRangerSerial
# 8: LightWareSerial                  22: PWM                             36: Lua_Scripting
# 9: Bebop                            23: BlueRoboticsPing                37: NoopLoop_TOFSense
# 10: MAVLink                         24: DroneCAN                        38: NoopLoop_TOFSense_CAN
# 11: USD1_Serial                     25: BenewakeTFminiPlus-I2C          39: NRA24_CAN
# 12: LeddarOne                       26: LanbaoPSK-CM8JL65-CC5           40: NoopLoop_TOFSenseF_I2C
# 13: MaxbotixSerial                  27: BenewakeTF03                    41: JRE_Serial
# 14: TeraRangerI2C                   28: VL53L1X-ShortRange              100: SITL
RNGFND4_TYPE,0

# Rangefinder type
# Type of connected rangefinder
# 0: None                             15: LidarLiteV3-I2C                 29: LeddarVu8-Serial
# 1: Analog                           16: VL53L0X or VL53L1X              30: HC-SR04
# 2: MaxbotixI2C                      17: NMEA                            31: GYUS42v2
# 3: LidarLite-I2C                    18: WASP-LRF                        32: MSP
# 5: PWM                              19: BenewakeTF02                    33: USD1_CAN
# 6: BBB-PRU                          20: Benewake-Serial                 34: Benewake_CAN
# 7: LightWareI2C                     21: LidarLightV3HP                  35: TeraRangerSerial
# 8: LightWareSerial                  22: PWM                             36: Lua_Scripting
# 9: Bebop                            23: BlueRoboticsPing                37: NoopLoop_TOFSense
# 10: MAVLink                         24: DroneCAN                        38: NoopLoop_TOFSense_CAN
# 11: USD1_Serial                     25: BenewakeTFminiPlus-I2C          39: NRA24_CAN
# 12: LeddarOne                       26: LanbaoPSK-CM8JL65-CC5           40: NoopLoop_TOFSenseF_I2C
# 13: MaxbotixSerial                  27: BenewakeTF03                    41: JRE_Serial
# 14: TeraRangerI2C                   28: VL53L1X-ShortRange              100: SITL
RNGFND5_TYPE,0

# Rangefinder type
# Type of connected rangefinder
# 0: None                             15: LidarLiteV3-I2C                 29: LeddarVu8-Serial
# 1: Analog                           16: VL53L0X or VL53L1X              30: HC-SR04
# 2: MaxbotixI2C                      17: NMEA                            31: GYUS42v2
# 3: LidarLite-I2C                    18: WASP-LRF                        32: MSP
# 5: PWM                              19: BenewakeTF02                    33: USD1_CAN
# 6: BBB-PRU                          20: Benewake-Serial                 34: Benewake_CAN
# 7: LightWareI2C                     21: LidarLightV3HP                  35: TeraRangerSerial
# 8: LightWareSerial                  22: PWM                             36: Lua_Scripting
# 9: Bebop                            23: BlueRoboticsPing                37: NoopLoop_TOFSense
# 10: MAVLink                         24: DroneCAN                        38: NoopLoop_TOFSense_CAN
# 11: USD1_Serial                     25: BenewakeTFminiPlus-I2C          39: NRA24_CAN
# 12: LeddarOne                       26: LanbaoPSK-CM8JL65-CC5           40: NoopLoop_TOFSenseF_I2C
# 13: MaxbotixSerial                  27: BenewakeTF03                    41: JRE_Serial
# 14: TeraRangerI2C                   28: VL53L1X-ShortRange              100: SITL
RNGFND6_TYPE,0

# Rangefinder type
# Type of connected rangefinder
# 0: None                             15: LidarLiteV3-I2C                 29: LeddarVu8-Serial
# 1: Analog                           16: VL53L0X or VL53L1X              30: HC-SR04
# 2: MaxbotixI2C                      17: NMEA                            31: GYUS42v2
# 3: LidarLite-I2C                    18: WASP-LRF                        32: MSP
# 5: PWM                              19: BenewakeTF02                    33: USD1_CAN
# 6: BBB-PRU                          20: Benewake-Serial                 34: Benewake_CAN
# 7: LightWareI2C                     21: LidarLightV3HP                  35: TeraRangerSerial
# 8: LightWareSerial                  22: PWM                             36: Lua_Scripting
# 9: Bebop                            23: BlueRoboticsPing                37: NoopLoop_TOFSense
# 10: MAVLink                         24: DroneCAN                        38: NoopLoop_TOFSense_CAN
# 11: USD1_Serial                     25: BenewakeTFminiPlus-I2C          39: NRA24_CAN
# 12: LeddarOne                       26: LanbaoPSK-CM8JL65-CC5           40: NoopLoop_TOFSenseF_I2C
# 13: MaxbotixSerial                  27: BenewakeTF03                    41: JRE_Serial
# 14: TeraRangerI2C                   28: VL53L1X-ShortRange              100: SITL
RNGFND7_TYPE,0

# Rangefinder type
# Type of connected rangefinder
# 0: None                             15: LidarLiteV3-I2C                 29: LeddarVu8-Serial
# 1: Analog                           16: VL53L0X or VL53L1X              30: HC-SR04
# 2: MaxbotixI2C                      17: NMEA                            31: GYUS42v2
# 3: LidarLite-I2C                    18: WASP-LRF                        32: MSP
# 5: PWM                              19: BenewakeTF02                    33: USD1_CAN
# 6: BBB-PRU                          20: Benewake-Serial                 34: Benewake_CAN
# 7: LightWareI2C                     21: LidarLightV3HP                  35: TeraRangerSerial
# 8: LightWareSerial                  22: PWM                             36: Lua_Scripting
# 9: Bebop                            23: BlueRoboticsPing                37: NoopLoop_TOFSense
# 10: MAVLink                         24: DroneCAN                        38: NoopLoop_TOFSense_CAN
# 11: USD1_Serial                     25: BenewakeTFminiPlus-I2C          39: NRA24_CAN
# 12: LeddarOne                       26: LanbaoPSK-CM8JL65-CC5           40: NoopLoop_TOFSenseF_I2C
# 13: MaxbotixSerial                  27: BenewakeTF03                    41: JRE_Serial
# 14: TeraRangerI2C                   28: VL53L1X-ShortRange              100: SITL
RNGFND8_TYPE,0

# Rangefinder type
# Type of connected rangefinder
# 0: None                             15: LidarLiteV3-I2C                 29: LeddarVu8-Serial
# 1: Analog                           16: VL53L0X or VL53L1X              30: HC-SR04
# 2: MaxbotixI2C                      17: NMEA                            31: GYUS42v2
# 3: LidarLite-I2C                    18: WASP-LRF                        32: MSP
# 5: PWM                              19: BenewakeTF02                    33: USD1_CAN
# 6: BBB-PRU                          20: Benewake-Serial                 34: Benewake_CAN
# 7: LightWareI2C                     21: LidarLightV3HP                  35: TeraRangerSerial
# 8: LightWareSerial                  22: PWM                             36: Lua_Scripting
# 9: Bebop                            23: BlueRoboticsPing                37: NoopLoop_TOFSense
# 10: MAVLink                         24: DroneCAN                        38: NoopLoop_TOFSense_CAN
# 11: USD1_Serial                     25: BenewakeTFminiPlus-I2C          39: NRA24_CAN
# 12: LeddarOne                       26: LanbaoPSK-CM8JL65-CC5           40: NoopLoop_TOFSenseF_I2C
# 13: MaxbotixSerial                  27: BenewakeTF03                    41: JRE_Serial
# 14: TeraRangerI2C                   28: VL53L1X-ShortRange              100: SITL
RNGFND9_TYPE,0

# Rangefinder type
# Type of connected rangefinder
# 0: None                             15: LidarLiteV3-I2C                 29: LeddarVu8-Serial
# 1: Analog                           16: VL53L0X or VL53L1X              30: HC-SR04
# 2: MaxbotixI2C                      17: NMEA                            31: GYUS42v2
# 3: LidarLite-I2C                    18: WASP-LRF                        32: MSP
# 5: PWM                              19: BenewakeTF02                    33: USD1_CAN
# 6: BBB-PRU                          20: Benewake-Serial                 34: Benewake_CAN
# 7: LightWareI2C                     21: LidarLightV3HP                  35: TeraRangerSerial
# 8: LightWareSerial                  22: PWM                             36: Lua_Scripting
# 9: Bebop                            23: BlueRoboticsPing                37: NoopLoop_TOFSense
# 10: MAVLink                         24: DroneCAN                        38: NoopLoop_TOFSense_CAN
# 11: USD1_Serial                     25: BenewakeTFminiPlus-I2C          39: NRA24_CAN
# 12: LeddarOne                       26: LanbaoPSK-CM8JL65-CC5           40: NoopLoop_TOFSenseF_I2C
# 13: MaxbotixSerial                  27: BenewakeTF03                    41: JRE_Serial
# 14: TeraRangerI2C                   28: VL53L1X-ShortRange              100: SITL
RNGFNDA_TYPE,0
ROLL_LIMIT_DEG,45

# RPM type
# What type of RPM sensor is connected
# 0: None
# 1: Not Used
# 2: GPIO
# 3: EFI
# 4: Harmonic Notch
# 5: ESC Telemetry Motors Bitmask
# 6: Generator
RPM1_TYPE,0

# RPM type
# What type of RPM sensor is connected
# 0: None
# 1: Not Used
# 2: GPIO
# 3: EFI
# 4: Harmonic Notch
# 5: ESC Telemetry Motors Bitmask
# 6: Generator
RPM2_TYPE,0

# RSSI Type
# Radio Receiver RSSI type. If your radio receiver supports RSSI of some kind, set it here, then set
# its associated RSSI_XXXXX parameters, if any.
# 0: Disabled
# 1: AnalogPin
# 2: RCChannelPwmValue
# 3: ReceiverProtocol
# 4: PWMInputPin
# 5: TelemetryRadioRSSI
RSSI_TYPE,0
RTL_ALTITUDE,100
RTL_AUTOLAND,0
RTL_CLIMB_MIN,0
RTL_RADIUS,0
RUDD_DT_GAIN,10
RUDDER_ONLY,0
SCALING_SPEED,15

# Scheduler debug level
# Set to non-zero to enable scheduler debug messages. When set to show "Slips" the scheduler will
# display a message whenever a scheduled task is delayed due to too much CPU load. When set to
# ShowOverruns the scheduled will display a message whenever a task takes longer than the limit
# promised in the task table.
# 0: Disabled
# 2: ShowSlips
# 3: ShowOverruns
SCHED_DEBUG,0

# Scheduling main loop rate
# This controls the rate of the main control loop in Hz. This should only be changed by developers.
# This only takes effect on restart. Values over 400 are considered highly experimental.
# RebootRequired: True
# 50: 50Hz
# 100: 100Hz
# 200: 200Hz
# 250: 250Hz
# 300: 300Hz
# 400: 400Hz
SCHED_LOOP_RATE,50

# Scheduling options
# This controls optional aspects of the scheduler.
# Bitmask: 0:Enable per-task perf info
SCHED_OPTIONS,0

# Enable Scripting
# Controls if scripting is enabled
# RebootRequired: True
# 0: None
# 1: Lua Scripts
SCR_ENABLE,0

# Serial passthru first port
# This sets one side of pass-through between two serial ports. Once both sides are set then all data
# received on either port will be passed to the other port
# -1: Disabled
# 0: Serial0
# 1: Serial1
# 2: Serial2
# 3: Serial3
# 4: Serial4
# 5: Serial5
# 6: Serial6
SERIAL_PASS1,0

# Serial passthru second port
# This sets one side of pass-through between two serial ports. Once both sides are set then all data
# received on either port will be passed to the other port
# -1: Disabled
# 0: Serial0
# 1: Serial1
# 2: Serial2
# 3: Serial3
# 4: Serial4
# 5: Serial5
# 6: Serial6
SERIAL_PASS2,-1

# Serial passthru timeout
# This sets a timeout for serial pass-through in seconds. When the pass-through is enabled by setting
# the SERIAL_PASS1 and SERIAL_PASS2 parameters then it remains in effect until no data comes from the
# first port for SERIAL_PASSTIMO seconds. This allows the port to revent to its normal usage (such as
# MAVLink connection to a GCS) when it is no longer needed. A value of 0 means no timeout.
# Range: 0 120
# Units: s (seconds)
SERIAL_PASSTIMO,15

# Serial0 baud rate
# The baud rate used on the USB console. Most stm32-based boards can support rates of up to 1500. If
# you setup a rate you cannot support and then can't connect to your board you should load a firmware
# from a different vehicle type. That will reset all your parameters to defaults.
# 1: 1200                                              115: 115200
# 2: 2400                                              230: 230400
# 4: 4800                                              256: 256000
# 9: 9600                                              460: 460800
# 19: 19200                                            500: 500000
# 38: 38400                                            921: 921600
# 57: 57600                                            1500: 1500000
# 111: 111100                                          2000: 2000000
SERIAL0_BAUD,115

# Console protocol selection
# Control what protocol to use on the console.
# RebootRequired: True
# 1: MAVlink1
# 2: MAVLink2
SERIAL0_PROTOCOL,2

# Telem1 Baud Rate
# The baud rate used on the Telem1 port. Most stm32-based boards can support rates of up to 1500. If
# you setup a rate you cannot support and then can't connect to your board you should load a firmware
# from a different vehicle type. That will reset all your parameters to defaults.
# 1: 1200                                              115: 115200
# 2: 2400                                              230: 230400
# 4: 4800                                              256: 256000
# 9: 9600                                              460: 460800
# 19: 19200                                            500: 500000
# 38: 38400                                            921: 921600
# 57: 57600                                            1500: 1500000
# 111: 111100                                          2000: 2000000
SERIAL1_BAUD,57

# Telem1 options
# Control over UART options. The InvertRX option controls invert of the receive pin. The InvertTX
# option controls invert of the transmit pin. The HalfDuplex option controls half-duplex (onewire)
# mode, where both transmit and receive is done on the transmit wire. The Swap option allows the RX
# and TX pins to be swapped on STM32F7 based boards.
# Bitmask: 0:InvertRX, 1:InvertTX, 2:HalfDuplex, 3:SwapTXRX, 4: RX_PullDown, 5: RX_PullUp, 6: TX_PullDown, 7: TX_PullUp, 8: RX_NoDMA, 9: TX_NoDMA, 10: Don't forward mavlink to/from, 11: DisableFIFO, 12: Ignore Streamrate
# RebootRequired: True
SERIAL1_OPTIONS,0

# Telem1 protocol selection
# Control what protocol to use on the Telem1 port. Note that the Frsky options require external
# converter hardware. See the wiki for details.
# RebootRequired: True
# -1: None                                             25: LTM
# 1: MAVLink1                                          26: RunCam
# 2: MAVLink2                                          27: HottTelem
# 3: Frsky D                                           28: Scripting
# 4: Frsky SPort                                       29: Crossfire VTX
# 5: GPS                                               30: Generator
# 7: Alexmos Gimbal Serial                             31: Winch
# 8: Gimbal                                            32: MSP
# 9: Rangefinder                                       33: DJI FPV
# 10: FrSky SPort Passthrough (OpenTX)                 34: AirSpeed
# 11: Lidar360                                         35: ADSB
# 13: Beacon                                           36: AHRS
# 14: Volz servo out                                   37: SmartAudio
# 15: SBus servo out                                   38: FETtecOneWire
# 16: ESC Telemetry                                    39: Torqeedo
# 17: Devo Telemetry                                   40: AIS
# 18: OpticalFlow                                      41: CoDevESC
# 19: RobotisServo                                     42: DisplayPort
# 20: NMEA Output                                      43: MAVLink High Latency
# 21: WindVane                                         44: IRC Tramp
# 22: SLCAN                                            45: DDS XRCE
# 23: RCIN                                             46: IMUDATA
# 24: EFI Serial
SERIAL1_PROTOCOL,2

# Telemetry 2 Baud Rate
# The baud rate of the Telem2 port. Most stm32-based boards can support rates of up to 1500. If you
# setup a rate you cannot support and then can't connect to your board you should load a firmware from
# a different vehicle type. That will reset all your parameters to defaults.
# 1: 1200                                              115: 115200
# 2: 2400                                              230: 230400
# 4: 4800                                              256: 256000
# 9: 9600                                              460: 460800
# 19: 19200                                            500: 500000
# 38: 38400                                            921: 921600
# 57: 57600                                            1500: 1500000
# 111: 111100                                          2000: 2000000
SERIAL2_BAUD,57

# Telem2 options
# Control over UART options. The InvertRX option controls invert of the receive pin. The InvertTX
# option controls invert of the transmit pin. The HalfDuplex option controls half-duplex (onewire)
# mode, where both transmit and receive is done on the transmit wire. The Swap option allows the RX
# and TX pins to be swapped on STM32F7 based boards.
# Bitmask: 0:InvertRX, 1:InvertTX, 2:HalfDuplex, 3:SwapTXRX, 4: RX_PullDown, 5: RX_PullUp, 6: TX_PullDown, 7: TX_PullUp, 8: RX_NoDMA, 9: TX_NoDMA, 10: Don't forward mavlink to/from, 11: DisableFIFO, 12: Ignore Streamrate
# RebootRequired: True
SERIAL2_OPTIONS,0

# Telemetry 2 protocol selection
# Control what protocol to use on the Telem2 port. Note that the Frsky options require external
# converter hardware. See the wiki for details.
# RebootRequired: True
# -1: None                                             25: LTM
# 1: MAVLink1                                          26: RunCam
# 2: MAVLink2                                          27: HottTelem
# 3: Frsky D                                           28: Scripting
# 4: Frsky SPort                                       29: Crossfire VTX
# 5: GPS                                               30: Generator
# 7: Alexmos Gimbal Serial                             31: Winch
# 8: Gimbal                                            32: MSP
# 9: Rangefinder                                       33: DJI FPV
# 10: FrSky SPort Passthrough (OpenTX)                 34: AirSpeed
# 11: Lidar360                                         35: ADSB
# 13: Beacon                                           36: AHRS
# 14: Volz servo out                                   37: SmartAudio
# 15: SBus servo out                                   38: FETtecOneWire
# 16: ESC Telemetry                                    39: Torqeedo
# 17: Devo Telemetry                                   40: AIS
# 18: OpticalFlow                                      41: CoDevESC
# 19: RobotisServo                                     42: DisplayPort
# 20: NMEA Output                                      43: MAVLink High Latency
# 21: WindVane                                         44: IRC Tramp
# 22: SLCAN                                            45: DDS XRCE
# 23: RCIN                                             46: IMUDATA
# 24: EFI Serial
SERIAL2_PROTOCOL,2

# Serial 3 (GPS) Baud Rate
# The baud rate used for the Serial 3 (GPS). Most stm32-based boards can support rates of up to 1500.
# If you setup a rate you cannot support and then can't connect to your board you should load a
# firmware from a different vehicle type. That will reset all your parameters to defaults.
# 1: 1200                                              115: 115200
# 2: 2400                                              230: 230400
# 4: 4800                                              256: 256000
# 9: 9600                                              460: 460800
# 19: 19200                                            500: 500000
# 38: 38400                                            921: 921600
# 57: 57600                                            1500: 1500000
# 111: 111100                                          2000: 2000000
SERIAL3_BAUD,230

# Serial3 options
# Control over UART options. The InvertRX option controls invert of the receive pin. The InvertTX
# option controls invert of the transmit pin. The HalfDuplex option controls half-duplex (onewire)
# mode, where both transmit and receive is done on the transmit wire. The Swap option allows the RX
# and TX pins to be swapped on STM32F7 based boards.
# Bitmask: 0:InvertRX, 1:InvertTX, 2:HalfDuplex, 3:SwapTXRX, 4: RX_PullDown, 5: RX_PullUp, 6: TX_PullDown, 7: TX_PullUp, 8: RX_NoDMA, 9: TX_NoDMA, 10: Don't forward mavlink to/from, 11: DisableFIFO, 12: Ignore Streamrate
# RebootRequired: True
SERIAL3_OPTIONS,0

# Serial 3 (GPS) protocol selection
# Control what protocol Serial 3 (GPS) should be used for. Note that the Frsky options require
# external converter hardware. See the wiki for details.
# RebootRequired: True
# -1: None                                             25: LTM
# 1: MAVLink1                                          26: RunCam
# 2: MAVLink2                                          27: HottTelem
# 3: Frsky D                                           28: Scripting
# 4: Frsky SPort                                       29: Crossfire VTX
# 5: GPS                                               30: Generator
# 7: Alexmos Gimbal Serial                             31: Winch
# 8: Gimbal                                            32: MSP
# 9: Rangefinder                                       33: DJI FPV
# 10: FrSky SPort Passthrough (OpenTX)                 34: AirSpeed
# 11: Lidar360                                         35: ADSB
# 13: Beacon                                           36: AHRS
# 14: Volz servo out                                   37: SmartAudio
# 15: SBus servo out                                   38: FETtecOneWire
# 16: ESC Telemetry                                    39: Torqeedo
# 17: Devo Telemetry                                   40: AIS
# 18: OpticalFlow                                      41: CoDevESC
# 19: RobotisServo                                     42: DisplayPort
# 20: NMEA Output                                      43: MAVLink High Latency
# 21: WindVane                                         44: IRC Tramp
# 22: SLCAN                                            45: DDS XRCE
# 23: RCIN                                             46: IMUDATA
# 24: EFI Serial
SERIAL3_PROTOCOL,5

# Serial 4 Baud Rate
# The baud rate used for Serial4. Most stm32-based boards can support rates of up to 1500. If you
# setup a rate you cannot support and then can't connect to your board you should load a firmware from
# a different vehicle type. That will reset all your parameters to defaults.
# 1: 1200                                              115: 115200
# 2: 2400                                              230: 230400
# 4: 4800                                              256: 256000
# 9: 9600                                              460: 460800
# 19: 19200                                            500: 500000
# 38: 38400                                            921: 921600
# 57: 57600                                            1500: 1500000
# 111: 111100                                          2000: 2000000
SERIAL4_BAUD,230

# Serial4 options
# Control over UART options. The InvertRX option controls invert of the receive pin. The InvertTX
# option controls invert of the transmit pin. The HalfDuplex option controls half-duplex (onewire)
# mode, where both transmit and receive is done on the transmit wire. The Swap option allows the RX
# and TX pins to be swapped on STM32F7 based boards.
# Bitmask: 0:InvertRX, 1:InvertTX, 2:HalfDuplex, 3:SwapTXRX, 4: RX_PullDown, 5: RX_PullUp, 6: TX_PullDown, 7: TX_PullUp, 8: RX_NoDMA, 9: TX_NoDMA, 10: Don't forward mavlink to/from, 11: DisableFIFO, 12: Ignore Streamrate
# RebootRequired: True
SERIAL4_OPTIONS,0

# Serial4 protocol selection
# Control what protocol Serial4 port should be used for. Note that the Frsky options require external
# converter hardware. See the wiki for details.
# RebootRequired: True
# -1: None                                             25: LTM
# 1: MAVLink1                                          26: RunCam
# 2: MAVLink2                                          27: HottTelem
# 3: Frsky D                                           28: Scripting
# 4: Frsky SPort                                       29: Crossfire VTX
# 5: GPS                                               30: Generator
# 7: Alexmos Gimbal Serial                             31: Winch
# 8: Gimbal                                            32: MSP
# 9: Rangefinder                                       33: DJI FPV
# 10: FrSky SPort Passthrough (OpenTX)                 34: AirSpeed
# 11: Lidar360                                         35: ADSB
# 13: Beacon                                           36: AHRS
# 14: Volz servo out                                   37: SmartAudio
# 15: SBus servo out                                   38: FETtecOneWire
# 16: ESC Telemetry                                    39: Torqeedo
# 17: Devo Telemetry                                   40: AIS
# 18: OpticalFlow                                      41: CoDevESC
# 19: RobotisServo                                     42: DisplayPort
# 20: NMEA Output                                      43: MAVLink High Latency
# 21: WindVane                                         44: IRC Tramp
# 22: SLCAN                                            45: DDS XRCE
# 23: RCIN                                             46: IMUDATA
# 24: EFI Serial
SERIAL4_PROTOCOL,5

# Serial 5 Baud Rate
# The baud rate used for Serial5. Most stm32-based boards can support rates of up to 1500. If you
# setup a rate you cannot support and then can't connect to your board you should load a firmware from
# a different vehicle type. That will reset all your parameters to defaults.
# 1: 1200                                              115: 115200
# 2: 2400                                              230: 230400
# 4: 4800                                              256: 256000
# 9: 9600                                              460: 460800
# 19: 19200                                            500: 500000
# 38: 38400                                            921: 921600
# 57: 57600                                            1500: 1500000
# 111: 111100                                          2000: 2000000
SERIAL5_BAUD,460

# Serial5 options
# Control over UART options. The InvertRX option controls invert of the receive pin. The InvertTX
# option controls invert of the transmit pin. The HalfDuplex option controls half-duplex (onewire)
# mode, where both transmit and receive is done on the transmit wire. The Swap option allows the RX
# and TX pins to be swapped on STM32F7 based boards.
# Bitmask: 0:InvertRX, 1:InvertTX, 2:HalfDuplex, 3:SwapTXRX, 4: RX_PullDown, 5: RX_PullUp, 6: TX_PullDown, 7: TX_PullUp, 8: RX_NoDMA, 9: TX_NoDMA, 10: Don't forward mavlink to/from, 11: DisableFIFO, 12: Ignore Streamrate
# RebootRequired: True
SERIAL5_OPTIONS,0

# Serial5 protocol selection
# Control what protocol Serial5 port should be used for. Note that the Frsky options require external
# converter hardware. See the wiki for details.
# RebootRequired: True
# -1: None                                             25: LTM
# 1: MAVLink1                                          26: RunCam
# 2: MAVLink2                                          27: HottTelem
# 3: Frsky D                                           28: Scripting
# 4: Frsky SPort                                       29: Crossfire VTX
# 5: GPS                                               30: Generator
# 7: Alexmos Gimbal Serial                             31: Winch
# 8: Gimbal                                            32: MSP
# 9: Rangefinder                                       33: DJI FPV
# 10: FrSky SPort Passthrough (OpenTX)                 34: AirSpeed
# 11: Lidar360                                         35: ADSB
# 13: Beacon                                           36: AHRS
# 14: Volz servo out                                   37: SmartAudio
# 15: SBus servo out                                   38: FETtecOneWire
# 16: ESC Telemetry                                    39: Torqeedo
# 17: Devo Telemetry                                   40: AIS
# 18: OpticalFlow                                      41: CoDevESC
# 19: RobotisServo                                     42: DisplayPort
# 20: NMEA Output                                      43: MAVLink High Latency
# 21: WindVane                                         44: IRC Tramp
# 22: SLCAN                                            45: DDS XRCE
# 23: RCIN                                             46: IMUDATA
# 24: EFI Serial
SERIAL5_PROTOCOL,36

# Serial 6 Baud Rate
# The baud rate used for Serial6. Most stm32-based boards can support rates of up to 1500. If you
# setup a rate you cannot support and then can't connect to your board you should load a firmware from
# a different vehicle type. That will reset all your parameters to defaults.
# 1: 1200                                              115: 115200
# 2: 2400                                              230: 230400
# 4: 4800                                              256: 256000
# 9: 9600                                              460: 460800
# 19: 19200                                            500: 500000
# 38: 38400                                            921: 921600
# 57: 57600                                            1500: 1500000
# 111: 111100                                          2000: 2000000
SERIAL6_BAUD,57

# Serial6 options
# Control over UART options. The InvertRX option controls invert of the receive pin. The InvertTX
# option controls invert of the transmit pin. The HalfDuplex option controls half-duplex (onewire)
# mode, where both transmit and receive is done on the transmit wire. The Swap option allows the RX
# and TX pins to be swapped on STM32F7 based boards.
# Bitmask: 0:InvertRX, 1:InvertTX, 2:HalfDuplex, 3:SwapTXRX, 4: RX_PullDown, 5: RX_PullUp, 6: TX_PullDown, 7: TX_PullUp, 8: RX_NoDMA, 9: TX_NoDMA, 10: Don't forward mavlink to/from, 11: DisableFIFO, 12: Ignore Streamrate
# RebootRequired: True
SERIAL6_OPTIONS,0

# Serial6 protocol selection
# Control what protocol Serial6 port should be used for. Note that the Frsky options require external
# converter hardware. See the wiki for details.
# RebootRequired: True
# -1: None                                             25: LTM
# 1: MAVLink1                                          26: RunCam
# 2: MAVLink2                                          27: HottTelem
# 3: Frsky D                                           28: Scripting
# 4: Frsky SPort                                       29: Crossfire VTX
# 5: GPS                                               30: Generator
# 7: Alexmos Gimbal Serial                             31: Winch
# 8: Gimbal                                            32: MSP
# 9: Rangefinder                                       33: DJI FPV
# 10: FrSky SPort Passthrough (OpenTX)                 34: AirSpeed
# 11: Lidar360                                         35: ADSB
# 13: Beacon                                           36: AHRS
# 14: Volz servo out                                   37: SmartAudio
# 15: SBus servo out                                   38: FETtecOneWire
# 16: ESC Telemetry                                    39: Torqeedo
# 17: Devo Telemetry                                   40: AIS
# 18: OpticalFlow                                      41: CoDevESC
# 19: RobotisServo                                     42: DisplayPort
# 20: NMEA Output                                      43: MAVLink High Latency
# 21: WindVane                                         44: IRC Tramp
# 22: SLCAN                                            45: DDS XRCE
# 23: RCIN                                             46: IMUDATA
# 24: EFI Serial
SERIAL6_PROTOCOL,-1

# Serial 7 Baud Rate
# The baud rate used for Serial7. Most stm32-based boards can support rates of up to 1500. If you
# setup a rate you cannot support and then can't connect to your board you should load a firmware from
# a different vehicle type. That will reset all your parameters to defaults.
# 1: 1200                                              115: 115200
# 2: 2400                                              230: 230400
# 4: 4800                                              256: 256000
# 9: 9600                                              460: 460800
# 19: 19200                                            500: 500000
# 38: 38400                                            921: 921600
# 57: 57600                                            1500: 1500000
# 111: 111100                                          2000: 2000000
SERIAL7_BAUD,57

# Serial7 options
# Control over UART options. The InvertRX option controls invert of the receive pin. The InvertTX
# option controls invert of the transmit pin. The HalfDuplex option controls half-duplex (onewire)
# mode, where both transmit and receive is done on the transmit wire. The Swap option allows the RX
# and TX pins to be swapped on STM32F7 based boards.
# Bitmask: 0:InvertRX, 1:InvertTX, 2:HalfDuplex, 3:SwapTXRX, 4: RX_PullDown, 5: RX_PullUp, 6: TX_PullDown, 7: TX_PullUp, 8: RX_NoDMA, 9: TX_NoDMA, 10: Don't forward mavlink to/from, 11: DisableFIFO, 12: Ignore Streamrate
# RebootRequired: True
SERIAL7_OPTIONS,0

# Serial7 protocol selection
# Control what protocol Serial7 port should be used for. Note that the Frsky options require external
# converter hardware. See the wiki for details.
# RebootRequired: True
# -1: None                                             25: LTM
# 1: MAVLink1                                          26: RunCam
# 2: MAVLink2                                          27: HottTelem
# 3: Frsky D                                           28: Scripting
# 4: Frsky SPort                                       29: Crossfire VTX
# 5: GPS                                               30: Generator
# 7: Alexmos Gimbal Serial                             31: Winch
# 8: Gimbal                                            32: MSP
# 9: Rangefinder                                       33: DJI FPV
# 10: FrSky SPort Passthrough (OpenTX)                 34: AirSpeed
# 11: Lidar360                                         35: ADSB
# 13: Beacon                                           36: AHRS
# 14: Volz servo out                                   37: SmartAudio
# 15: SBus servo out                                   38: FETtecOneWire
# 16: ESC Telemetry                                    39: Torqeedo
# 17: Devo Telemetry                                   40: AIS
# 18: OpticalFlow                                      41: CoDevESC
# 19: RobotisServo                                     42: DisplayPort
# 20: NMEA Output                                      43: MAVLink High Latency
# 21: WindVane                                         44: IRC Tramp
# 22: SLCAN                                            45: DDS XRCE
# 23: RCIN                                             46: IMUDATA
# 24: EFI Serial
SERIAL7_PROTOCOL,-1

# Enable outputs 17 to 31
# This allows for up to 32 outputs, enabling parameters for outputs above 16
# 0: Disabled
# 1: Enabled
SERVO_32_ENABLE,0

# Automatic servo trim
# This enables automatic servo trim in flight. Servos will be trimed in stabilized flight modes when
# the aircraft is close to level. Changes to servo trim will be saved every 10 seconds and will
# persist between flights. The automatic trim won't go more than 20% away from a centered trim.
# 0: Disable
# 1: Enable
SERVO_AUTO_TRIM,0

# Servo DShot ESC type
# DShot ESC type for all outputs. The ESC type affects the range of DShot commands available and the
# bit widths used. None means that no dshot commands will be executed. Some ESC types support Extended
# DShot Telemetry (EDT) which allows telemetry other than RPM data to be returned when using
# bi-directional dshot. If you enable EDT you must install EDT capable firmware for correct operation.
# 0: None
# 1: BLHeli32/Kiss
# 2: BLHeli_S
# 3: BLHeli32/Kiss+EDT
# 4: BLHeli_S+EDT
SERVO_DSHOT_ESC,0

# Servo DShot output rate
# DShot output rate for all outputs as a multiple of the loop rate. 0 sets the output rate to be fixed
# at 1Khz for low loop rates. This value should never be set below 500Hz.
# 0: 1Khz
# 1: loop-rate
# 2: double loop-rate
# 3: triple loop-rate
# 4: quadruple loop rate
SERVO_DSHOT_RATE,0

# Servo channel output bitmask
# Servo channel mask specifying FETtec ESC output.
# Bitmask: 0:SERVO1,1:SERVO2,2:SERVO3,3:SERVO4,4:SERVO5,5:SERVO6,6:SERVO7,7:SERVO8,8:SERVO9,9:SERVO10,10:SERVO11,11:SERVO12
# RebootRequired: True
SERVO_FTW_MASK,0

# Nr. electrical poles
# Number of motor electrical poles
# Range: 2 50
SERVO_FTW_POLES,14

# Servo channel reverse rotation bitmask
# Servo channel mask to reverse rotation of FETtec ESC outputs.
# Bitmask: 0:SERVO1,1:SERVO2,2:SERVO3,3:SERVO4,4:SERVO5,5:SERVO6,6:SERVO7,7:SERVO8,8:SERVO9,9:SERVO10,10:SERVO11,11:SERVO12
SERVO_FTW_RVMASK,0

# Servo GPIO mask
# Bitmask of outputs which will be available as GPIOs. Any output with either the function set to -1
# or with the corresponding bit set in this mask will be available for use as a GPIO pin
# Bitmask: 0:Servo 1, 1:Servo 2, 2:Servo 3, 3:Servo 4, 4:Servo 5, 5:Servo 6, 6:Servo 7, 7:Servo 8, 8:Servo 9, 9:Servo 10, 10:Servo 11, 11:Servo 12, 12:Servo 13, 13:Servo 14, 14:Servo 15, 15:Servo 16, 16:Servo 17, 17:Servo 18, 18:Servo 19, 19:Servo 20, 20:Servo 21, 21:Servo 22, 22:Servo 23, 23:Servo 24, 24:Servo 25, 25:Servo 26, 26:Servo 27, 27:Servo 28, 28:Servo 29, 29:Servo 30, 30:Servo 31, 31:Servo 32
# RebootRequired: True
SERVO_GPIO_MASK,0

# Servo default output rate
# Default output rate in Hz for all PWM outputs.
# Range: 25 400
# Units: Hz (hertz)
SERVO_RATE,50

# Servo RC Failsafe Mask
# Bitmask of scaled passthru output channels which will be set to their trim value during rc failsafe
# instead of holding their last position before failsafe.
# Bitmask: 0:RCIN1Scaled, 1:RCIN2Scaled, 2:RCIN3Scaled, 3:RCIN4Scaled, 4:RCIN5Scaled, 5:RCIN6Scaled, 6:RCIN7Scaled, 7:RCIN8Scaled, 8:RCIN9Scaled, 9:RCIN10Scaled, 10:RCIN11Scaled, 11:SRCIN12Scaled, 12:RCIN13Scaled, 13:RCIN14Scaled, 14:RCIN15Scaled, 15:RCIN16Scaled
SERVO_RC_FS_MSK,0

# Robotis servo position max
# Position maximum at servo max value. This should be within the position control range of the servos,
# normally 0 to 4095
# Range: 0 4095
SERVO_ROB_POSMAX,4095

# Robotis servo position min
# Position minimum at servo min value. This should be within the position control range of the servos,
# normally 0 to 4095
# Range: 0 4095
SERVO_ROB_POSMIN,0

# SBUS default output rate
# This sets the SBUS output frame rate in Hz.
# Range: 25 250
# Units: Hz (hertz)
SERVO_SBUS_RATE,50

# Channel Bitmask
# Enable of volz servo protocol to specific channels
# Bitmask: 0:Channel1,1:Channel2,2:Channel3,3:Channel4,4:Channel5,5:Channel6,6:Channel7,7:Channel8,8:Channel9,9:Channel10,10:Channel11,11:Channel12,12:Channel13,13:Channel14,14:Channel15,15:Channel16,16:Channel17,17:Channel18,18:Channel19,19:Channel20,20:Channel21,21:Channel22,22:Channel23,23:Channel24,24:Channel25,25:Channel26,26:Channel27,28:Channel29,29:Channel30,30:Channel31,31:Channel32
SERVO_VOLZ_MASK,0

# Servo output function
# Function assigned to this servo. Setting this to Disabled(0) will setup this output for control by
# auto missions or MAVLink servo set commands. any other value will enable the corresponding function
# RebootRequired: True
# -1: GPIO                            54: RCIN4                           103: Script10
# 0: Disabled                         55: RCIN5                           104: Script11
# 1: RCPassThru                       56: RCIN6                           105: Script12
# 2: Flap                             57: RCIN7                           106: Script13
# 3: FlapAuto                         58: RCIN8                           107: Script14
# 4: Aileron                          59: RCIN9                           108: Script15
# 6: Mount1Yaw                        60: RCIN10                          109: Script16
# 7: Mount1Pitch                      61: RCIN11                          110: Airbrakes
# 8: Mount1Roll                       62: RCIN12                          120: NeoPixel1
# 9: Mount1Retract                    63: RCIN13                          121: NeoPixel2
# 10: CameraTrigger                   64: RCIN14                          122: NeoPixel3
# 12: Mount2Yaw                       65: RCIN15                          123: NeoPixel4
# 13: Mount2Pitch                     66: RCIN16                          124: RateRoll
# 14: Mount2Roll                      67: Ignition                        125: RatePitch
# 15: Mount2Retract                   69: Starter                         126: RateThrust
# 16: DifferentialSpoilerLeft1        70: Throttle                        127: RateYaw
# 17: DifferentialSpoilerRight1       73: ThrottleLeft                    129: ProfiLED1
# 19: Elevator                        74: ThrottleRight                   130: ProfiLED2
# 21: Rudder                          75: TiltMotorFrontLeft              131: ProfiLED3
# 22: SprayerPump                     76: TiltMotorFrontRight             132: ProfiLEDClock
# 23: SprayerSpinner                  77: ElevonLeft                      134: SERVOn_MIN
# 24: FlaperonLeft                    78: ElevonRight                     135: SERVOn_TRIM
# 25: FlaperonRight                   79: VTailLeft                       136: SERVOn_MAX
# 26: GroundSteering                  80: VTailRight                      138: Alarm
# 27: Parachute                       82: Motor9                          139: Alarm Inverted
# 28: Gripper                         83: Motor10                         140: RCIN1Scaled
# 29: LandingGear                     84: Motor11                         141: RCIN2Scaled
# 30: EngineRunEnable                 85: Motor12                         142: RCIN3Scaled
# 33: Motor1                          86: DifferentialSpoilerLeft2        143: RCIN4Scaled
# 34: Motor2                          87: DifferentialSpoilerRight2       144: RCIN5Scaled
# 35: Motor3                          90: CameraISO                       145: RCIN6Scaled
# 36: Motor4                          91: CameraAperture                  146: RCIN7Scaled
# 37: Motor5                          92: CameraFocus                     147: RCIN8Scaled
# 38: Motor6                          93: CameraShutterSpeed              148: RCIN9Scaled
# 39: Motor7/TailTiltServo            94: Script1                         149: RCIN10Scaled
# 40: Motor8                          95: Script2                         150: RCIN11Scaled
# 41: TiltMotorsFront                 96: Script3                         151: RCIN12Scaled
# 45: TiltMotorsRear                  97: Script4                         152: RCIN13Scaled
# 46: TiltMotorRearLeft               98: Script5                         153: RCIN14Scaled
# 47: TiltMotorRearRight              99: Script6                         154: RCIN15Scaled
# 51: RCIN1                           100: Script7                        155: RCIN16Scaled
# 52: RCIN2                           101: Script8
# 53: RCIN3                           102: Script9
SERVO1_FUNCTION,4

# Maximum PWM
# maximum PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000 is
# upper limit.
# Units: PWM (PWM in microseconds)
# Range: 800 2200
# Increment: 1
SERVO1_MAX,1900

# Minimum PWM
# minimum PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000 is
# upper limit.
# Units: PWM (PWM in microseconds)
# Range: 800 2200
# Increment: 1
SERVO1_MIN,1100

# Servo reverse
# Reverse servo operation. Set to 0 for normal operation. Set to 1 to reverse this output channel.
# 0: Normal
# 1: Reversed
SERVO1_REVERSED,0

# Trim PWM
# Trim PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000 is
# upper limit.
# Units: PWM (PWM in microseconds)
# Range: 800 2200
# Increment: 1
SERVO1_TRIM,1500

# Servo output function
# Function assigned to this servo. Setting this to Disabled(0) will setup this output for control by
# auto missions or MAVLink servo set commands. any other value will enable the corresponding function
# RebootRequired: True
# -1: GPIO                            54: RCIN4                           103: Script10
# 0: Disabled                         55: RCIN5                           104: Script11
# 1: RCPassThru                       56: RCIN6                           105: Script12
# 2: Flap                             57: RCIN7                           106: Script13
# 3: FlapAuto                         58: RCIN8                           107: Script14
# 4: Aileron                          59: RCIN9                           108: Script15
# 6: Mount1Yaw                        60: RCIN10                          109: Script16
# 7: Mount1Pitch                      61: RCIN11                          110: Airbrakes
# 8: Mount1Roll                       62: RCIN12                          120: NeoPixel1
# 9: Mount1Retract                    63: RCIN13                          121: NeoPixel2
# 10: CameraTrigger                   64: RCIN14                          122: NeoPixel3
# 12: Mount2Yaw                       65: RCIN15                          123: NeoPixel4
# 13: Mount2Pitch                     66: RCIN16                          124: RateRoll
# 14: Mount2Roll                      67: Ignition                        125: RatePitch
# 15: Mount2Retract                   69: Starter                         126: RateThrust
# 16: DifferentialSpoilerLeft1        70: Throttle                        127: RateYaw
# 17: DifferentialSpoilerRight1       73: ThrottleLeft                    129: ProfiLED1
# 19: Elevator                        74: ThrottleRight                   130: ProfiLED2
# 21: Rudder                          75: TiltMotorFrontLeft              131: ProfiLED3
# 22: SprayerPump                     76: TiltMotorFrontRight             132: ProfiLEDClock
# 23: SprayerSpinner                  77: ElevonLeft                      134: SERVOn_MIN
# 24: FlaperonLeft                    78: ElevonRight                     135: SERVOn_TRIM
# 25: FlaperonRight                   79: VTailLeft                       136: SERVOn_MAX
# 26: GroundSteering                  80: VTailRight                      138: Alarm
# 27: Parachute                       82: Motor9                          139: Alarm Inverted
# 28: Gripper                         83: Motor10                         140: RCIN1Scaled
# 29: LandingGear                     84: Motor11                         141: RCIN2Scaled
# 30: EngineRunEnable                 85: Motor12                         142: RCIN3Scaled
# 33: Motor1                          86: DifferentialSpoilerLeft2        143: RCIN4Scaled
# 34: Motor2                          87: DifferentialSpoilerRight2       144: RCIN5Scaled
# 35: Motor3                          90: CameraISO                       145: RCIN6Scaled
# 36: Motor4                          91: CameraAperture                  146: RCIN7Scaled
# 37: Motor5                          92: CameraFocus                     147: RCIN8Scaled
# 38: Motor6                          93: CameraShutterSpeed              148: RCIN9Scaled
# 39: Motor7/TailTiltServo            94: Script1                         149: RCIN10Scaled
# 40: Motor8                          95: Script2                         150: RCIN11Scaled
# 41: TiltMotorsFront                 96: Script3                         151: RCIN12Scaled
# 45: TiltMotorsRear                  97: Script4                         152: RCIN13Scaled
# 46: TiltMotorRearLeft               98: Script5                         153: RCIN14Scaled
# 47: TiltMotorRearRight              99: Script6                         154: RCIN15Scaled
# 51: RCIN1                           100: Script7                        155: RCIN16Scaled
# 52: RCIN2                           101: Script8
# 53: RCIN3                           102: Script9
SERVO10_FUNCTION,0

# Maximum PWM
# maximum PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000 is
# upper limit.
# Units: PWM (PWM in microseconds)
# Range: 800 2200
# Increment: 1
SERVO10_MAX,1900

# Minimum PWM
# minimum PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000 is
# upper limit.
# Units: PWM (PWM in microseconds)
# Range: 800 2200
# Increment: 1
SERVO10_MIN,1100

# Servo reverse
# Reverse servo operation. Set to 0 for normal operation. Set to 1 to reverse this output channel.
# 0: Normal
# 1: Reversed
SERVO10_REVERSED,0

# Trim PWM
# Trim PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000 is
# upper limit.
# Units: PWM (PWM in microseconds)
# Range: 800 2200
# Increment: 1
SERVO10_TRIM,1500

# Servo output function
# Function assigned to this servo. Setting this to Disabled(0) will setup this output for control by
# auto missions or MAVLink servo set commands. any other value will enable the corresponding function
# RebootRequired: True
# -1: GPIO                            54: RCIN4                           103: Script10
# 0: Disabled                         55: RCIN5                           104: Script11
# 1: RCPassThru                       56: RCIN6                           105: Script12
# 2: Flap                             57: RCIN7                           106: Script13
# 3: FlapAuto                         58: RCIN8                           107: Script14
# 4: Aileron                          59: RCIN9                           108: Script15
# 6: Mount1Yaw                        60: RCIN10                          109: Script16
# 7: Mount1Pitch                      61: RCIN11                          110: Airbrakes
# 8: Mount1Roll                       62: RCIN12                          120: NeoPixel1
# 9: Mount1Retract                    63: RCIN13                          121: NeoPixel2
# 10: CameraTrigger                   64: RCIN14                          122: NeoPixel3
# 12: Mount2Yaw                       65: RCIN15                          123: NeoPixel4
# 13: Mount2Pitch                     66: RCIN16                          124: RateRoll
# 14: Mount2Roll                      67: Ignition                        125: RatePitch
# 15: Mount2Retract                   69: Starter                         126: RateThrust
# 16: DifferentialSpoilerLeft1        70: Throttle                        127: RateYaw
# 17: DifferentialSpoilerRight1       73: ThrottleLeft                    129: ProfiLED1
# 19: Elevator                        74: ThrottleRight                   130: ProfiLED2
# 21: Rudder                          75: TiltMotorFrontLeft              131: ProfiLED3
# 22: SprayerPump                     76: TiltMotorFrontRight             132: ProfiLEDClock
# 23: SprayerSpinner                  77: ElevonLeft                      134: SERVOn_MIN
# 24: FlaperonLeft                    78: ElevonRight                     135: SERVOn_TRIM
# 25: FlaperonRight                   79: VTailLeft                       136: SERVOn_MAX
# 26: GroundSteering                  80: VTailRight                      138: Alarm
# 27: Parachute                       82: Motor9                          139: Alarm Inverted
# 28: Gripper                         83: Motor10                         140: RCIN1Scaled
# 29: LandingGear                     84: Motor11                         141: RCIN2Scaled
# 30: EngineRunEnable                 85: Motor12                         142: RCIN3Scaled
# 33: Motor1                          86: DifferentialSpoilerLeft2        143: RCIN4Scaled
# 34: Motor2                          87: DifferentialSpoilerRight2       144: RCIN5Scaled
# 35: Motor3                          90: CameraISO                       145: RCIN6Scaled
# 36: Motor4                          91: CameraAperture                  146: RCIN7Scaled
# 37: Motor5                          92: CameraFocus                     147: RCIN8Scaled
# 38: Motor6                          93: CameraShutterSpeed              148: RCIN9Scaled
# 39: Motor7/TailTiltServo            94: Script1                         149: RCIN10Scaled
# 40: Motor8                          95: Script2                         150: RCIN11Scaled
# 41: TiltMotorsFront                 96: Script3                         151: RCIN12Scaled
# 45: TiltMotorsRear                  97: Script4                         152: RCIN13Scaled
# 46: TiltMotorRearLeft               98: Script5                         153: RCIN14Scaled
# 47: TiltMotorRearRight              99: Script6                         154: RCIN15Scaled
# 51: RCIN1                           100: Script7                        155: RCIN16Scaled
# 52: RCIN2                           101: Script8
# 53: RCIN3                           102: Script9
SERVO11_FUNCTION,0

# Maximum PWM
# maximum PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000 is
# upper limit.
# Units: PWM (PWM in microseconds)
# Range: 800 2200
# Increment: 1
SERVO11_MAX,1900

# Minimum PWM
# minimum PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000 is
# upper limit.
# Units: PWM (PWM in microseconds)
# Range: 800 2200
# Increment: 1
SERVO11_MIN,1100

# Servo reverse
# Reverse servo operation. Set to 0 for normal operation. Set to 1 to reverse this output channel.
# 0: Normal
# 1: Reversed
SERVO11_REVERSED,0

# Trim PWM
# Trim PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000 is
# upper limit.
# Units: PWM (PWM in microseconds)
# Range: 800 2200
# Increment: 1
SERVO11_TRIM,1500

# Servo output function
# Function assigned to this servo. Setting this to Disabled(0) will setup this output for control by
# auto missions or MAVLink servo set commands. any other value will enable the corresponding function
# RebootRequired: True
# -1: GPIO                            54: RCIN4                           103: Script10
# 0: Disabled                         55: RCIN5                           104: Script11
# 1: RCPassThru                       56: RCIN6                           105: Script12
# 2: Flap                             57: RCIN7                           106: Script13
# 3: FlapAuto                         58: RCIN8                           107: Script14
# 4: Aileron                          59: RCIN9                           108: Script15
# 6: Mount1Yaw                        60: RCIN10                          109: Script16
# 7: Mount1Pitch                      61: RCIN11                          110: Airbrakes
# 8: Mount1Roll                       62: RCIN12                          120: NeoPixel1
# 9: Mount1Retract                    63: RCIN13                          121: NeoPixel2
# 10: CameraTrigger                   64: RCIN14                          122: NeoPixel3
# 12: Mount2Yaw                       65: RCIN15                          123: NeoPixel4
# 13: Mount2Pitch                     66: RCIN16                          124: RateRoll
# 14: Mount2Roll                      67: Ignition                        125: RatePitch
# 15: Mount2Retract                   69: Starter                         126: RateThrust
# 16: DifferentialSpoilerLeft1        70: Throttle                        127: RateYaw
# 17: DifferentialSpoilerRight1       73: ThrottleLeft                    129: ProfiLED1
# 19: Elevator                        74: ThrottleRight                   130: ProfiLED2
# 21: Rudder                          75: TiltMotorFrontLeft              131: ProfiLED3
# 22: SprayerPump                     76: TiltMotorFrontRight             132: ProfiLEDClock
# 23: SprayerSpinner                  77: ElevonLeft                      134: SERVOn_MIN
# 24: FlaperonLeft                    78: ElevonRight                     135: SERVOn_TRIM
# 25: FlaperonRight                   79: VTailLeft                       136: SERVOn_MAX
# 26: GroundSteering                  80: VTailRight                      138: Alarm
# 27: Parachute                       82: Motor9                          139: Alarm Inverted
# 28: Gripper                         83: Motor10                         140: RCIN1Scaled
# 29: LandingGear                     84: Motor11                         141: RCIN2Scaled
# 30: EngineRunEnable                 85: Motor12                         142: RCIN3Scaled
# 33: Motor1                          86: DifferentialSpoilerLeft2        143: RCIN4Scaled
# 34: Motor2                          87: DifferentialSpoilerRight2       144: RCIN5Scaled
# 35: Motor3                          90: CameraISO                       145: RCIN6Scaled
# 36: Motor4                          91: CameraAperture                  146: RCIN7Scaled
# 37: Motor5                          92: CameraFocus                     147: RCIN8Scaled
# 38: Motor6                          93: CameraShutterSpeed              148: RCIN9Scaled
# 39: Motor7/TailTiltServo            94: Script1                         149: RCIN10Scaled
# 40: Motor8                          95: Script2                         150: RCIN11Scaled
# 41: TiltMotorsFront                 96: Script3                         151: RCIN12Scaled
# 45: TiltMotorsRear                  97: Script4                         152: RCIN13Scaled
# 46: TiltMotorRearLeft               98: Script5                         153: RCIN14Scaled
# 47: TiltMotorRearRight              99: Script6                         154: RCIN15Scaled
# 51: RCIN1                           100: Script7                        155: RCIN16Scaled
# 52: RCIN2                           101: Script8
# 53: RCIN3                           102: Script9
SERVO12_FUNCTION,0

# Maximum PWM
# maximum PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000 is
# upper limit.
# Units: PWM (PWM in microseconds)
# Range: 800 2200
# Increment: 1
SERVO12_MAX,1900

# Minimum PWM
# minimum PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000 is
# upper limit.
# Units: PWM (PWM in microseconds)
# Range: 800 2200
# Increment: 1
SERVO12_MIN,1100

# Servo reverse
# Reverse servo operation. Set to 0 for normal operation. Set to 1 to reverse this output channel.
# 0: Normal
# 1: Reversed
SERVO12_REVERSED,0

# Trim PWM
# Trim PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000 is
# upper limit.
# Units: PWM (PWM in microseconds)
# Range: 800 2200
# Increment: 1
SERVO12_TRIM,1500

# Servo output function
# Function assigned to this servo. Setting this to Disabled(0) will setup this output for control by
# auto missions or MAVLink servo set commands. any other value will enable the corresponding function
# RebootRequired: True
# -1: GPIO                            54: RCIN4                           103: Script10
# 0: Disabled                         55: RCIN5                           104: Script11
# 1: RCPassThru                       56: RCIN6                           105: Script12
# 2: Flap                             57: RCIN7                           106: Script13
# 3: FlapAuto                         58: RCIN8                           107: Script14
# 4: Aileron                          59: RCIN9                           108: Script15
# 6: Mount1Yaw                        60: RCIN10                          109: Script16
# 7: Mount1Pitch                      61: RCIN11                          110: Airbrakes
# 8: Mount1Roll                       62: RCIN12                          120: NeoPixel1
# 9: Mount1Retract                    63: RCIN13                          121: NeoPixel2
# 10: CameraTrigger                   64: RCIN14                          122: NeoPixel3
# 12: Mount2Yaw                       65: RCIN15                          123: NeoPixel4
# 13: Mount2Pitch                     66: RCIN16                          124: RateRoll
# 14: Mount2Roll                      67: Ignition                        125: RatePitch
# 15: Mount2Retract                   69: Starter                         126: RateThrust
# 16: DifferentialSpoilerLeft1        70: Throttle                        127: RateYaw
# 17: DifferentialSpoilerRight1       73: ThrottleLeft                    129: ProfiLED1
# 19: Elevator                        74: ThrottleRight                   130: ProfiLED2
# 21: Rudder                          75: TiltMotorFrontLeft              131: ProfiLED3
# 22: SprayerPump                     76: TiltMotorFrontRight             132: ProfiLEDClock
# 23: SprayerSpinner                  77: ElevonLeft                      134: SERVOn_MIN
# 24: FlaperonLeft                    78: ElevonRight                     135: SERVOn_TRIM
# 25: FlaperonRight                   79: VTailLeft                       136: SERVOn_MAX
# 26: GroundSteering                  80: VTailRight                      138: Alarm
# 27: Parachute                       82: Motor9                          139: Alarm Inverted
# 28: Gripper                         83: Motor10                         140: RCIN1Scaled
# 29: LandingGear                     84: Motor11                         141: RCIN2Scaled
# 30: EngineRunEnable                 85: Motor12                         142: RCIN3Scaled
# 33: Motor1                          86: DifferentialSpoilerLeft2        143: RCIN4Scaled
# 34: Motor2                          87: DifferentialSpoilerRight2       144: RCIN5Scaled
# 35: Motor3                          90: CameraISO                       145: RCIN6Scaled
# 36: Motor4                          91: CameraAperture                  146: RCIN7Scaled
# 37: Motor5                          92: CameraFocus                     147: RCIN8Scaled
# 38: Motor6                          93: CameraShutterSpeed              148: RCIN9Scaled
# 39: Motor7/TailTiltServo            94: Script1                         149: RCIN10Scaled
# 40: Motor8                          95: Script2                         150: RCIN11Scaled
# 41: TiltMotorsFront                 96: Script3                         151: RCIN12Scaled
# 45: TiltMotorsRear                  97: Script4                         152: RCIN13Scaled
# 46: TiltMotorRearLeft               98: Script5                         153: RCIN14Scaled
# 47: TiltMotorRearRight              99: Script6                         154: RCIN15Scaled
# 51: RCIN1                           100: Script7                        155: RCIN16Scaled
# 52: RCIN2                           101: Script8
# 53: RCIN3                           102: Script9
SERVO13_FUNCTION,0

# Maximum PWM
# maximum PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000 is
# upper limit.
# Units: PWM (PWM in microseconds)
# Range: 800 2200
# Increment: 1
SERVO13_MAX,1900

# Minimum PWM
# minimum PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000 is
# upper limit.
# Units: PWM (PWM in microseconds)
# Range: 800 2200
# Increment: 1
SERVO13_MIN,1100

# Servo reverse
# Reverse servo operation. Set to 0 for normal operation. Set to 1 to reverse this output channel.
# 0: Normal
# 1: Reversed
SERVO13_REVERSED,0

# Trim PWM
# Trim PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000 is
# upper limit.
# Units: PWM (PWM in microseconds)
# Range: 800 2200
# Increment: 1
SERVO13_TRIM,1500

# Servo output function
# Function assigned to this servo. Setting this to Disabled(0) will setup this output for control by
# auto missions or MAVLink servo set commands. any other value will enable the corresponding function
# RebootRequired: True
# -1: GPIO                            54: RCIN4                           103: Script10
# 0: Disabled                         55: RCIN5                           104: Script11
# 1: RCPassThru                       56: RCIN6                           105: Script12
# 2: Flap                             57: RCIN7                           106: Script13
# 3: FlapAuto                         58: RCIN8                           107: Script14
# 4: Aileron                          59: RCIN9                           108: Script15
# 6: Mount1Yaw                        60: RCIN10                          109: Script16
# 7: Mount1Pitch                      61: RCIN11                          110: Airbrakes
# 8: Mount1Roll                       62: RCIN12                          120: NeoPixel1
# 9: Mount1Retract                    63: RCIN13                          121: NeoPixel2
# 10: CameraTrigger                   64: RCIN14                          122: NeoPixel3
# 12: Mount2Yaw                       65: RCIN15                          123: NeoPixel4
# 13: Mount2Pitch                     66: RCIN16                          124: RateRoll
# 14: Mount2Roll                      67: Ignition                        125: RatePitch
# 15: Mount2Retract                   69: Starter                         126: RateThrust
# 16: DifferentialSpoilerLeft1        70: Throttle                        127: RateYaw
# 17: DifferentialSpoilerRight1       73: ThrottleLeft                    129: ProfiLED1
# 19: Elevator                        74: ThrottleRight                   130: ProfiLED2
# 21: Rudder                          75: TiltMotorFrontLeft              131: ProfiLED3
# 22: SprayerPump                     76: TiltMotorFrontRight             132: ProfiLEDClock
# 23: SprayerSpinner                  77: ElevonLeft                      134: SERVOn_MIN
# 24: FlaperonLeft                    78: ElevonRight                     135: SERVOn_TRIM
# 25: FlaperonRight                   79: VTailLeft                       136: SERVOn_MAX
# 26: GroundSteering                  80: VTailRight                      138: Alarm
# 27: Parachute                       82: Motor9                          139: Alarm Inverted
# 28: Gripper                         83: Motor10                         140: RCIN1Scaled
# 29: LandingGear                     84: Motor11                         141: RCIN2Scaled
# 30: EngineRunEnable                 85: Motor12                         142: RCIN3Scaled
# 33: Motor1                          86: DifferentialSpoilerLeft2        143: RCIN4Scaled
# 34: Motor2                          87: DifferentialSpoilerRight2       144: RCIN5Scaled
# 35: Motor3                          90: CameraISO                       145: RCIN6Scaled
# 36: Motor4                          91: CameraAperture                  146: RCIN7Scaled
# 37: Motor5                          92: CameraFocus                     147: RCIN8Scaled
# 38: Motor6                          93: CameraShutterSpeed              148: RCIN9Scaled
# 39: Motor7/TailTiltServo            94: Script1                         149: RCIN10Scaled
# 40: Motor8                          95: Script2                         150: RCIN11Scaled
# 41: TiltMotorsFront                 96: Script3                         151: RCIN12Scaled
# 45: TiltMotorsRear                  97: Script4                         152: RCIN13Scaled
# 46: TiltMotorRearLeft               98: Script5                         153: RCIN14Scaled
# 47: TiltMotorRearRight              99: Script6                         154: RCIN15Scaled
# 51: RCIN1                           100: Script7                        155: RCIN16Scaled
# 52: RCIN2                           101: Script8
# 53: RCIN3                           102: Script9
SERVO14_FUNCTION,0

# Maximum PWM
# maximum PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000 is
# upper limit.
# Units: PWM (PWM in microseconds)
# Range: 800 2200
# Increment: 1
SERVO14_MAX,1900

# Minimum PWM
# minimum PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000 is
# upper limit.
# Units: PWM (PWM in microseconds)
# Range: 800 2200
# Increment: 1
SERVO14_MIN,1100

# Servo reverse
# Reverse servo operation. Set to 0 for normal operation. Set to 1 to reverse this output channel.
# 0: Normal
# 1: Reversed
SERVO14_REVERSED,0

# Trim PWM
# Trim PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000 is
# upper limit.
# Units: PWM (PWM in microseconds)
# Range: 800 2200
# Increment: 1
SERVO14_TRIM,1500

# Servo output function
# Function assigned to this servo. Setting this to Disabled(0) will setup this output for control by
# auto missions or MAVLink servo set commands. any other value will enable the corresponding function
# RebootRequired: True
# -1: GPIO                            54: RCIN4                           103: Script10
# 0: Disabled                         55: RCIN5                           104: Script11
# 1: RCPassThru                       56: RCIN6                           105: Script12
# 2: Flap                             57: RCIN7                           106: Script13
# 3: FlapAuto                         58: RCIN8                           107: Script14
# 4: Aileron                          59: RCIN9                           108: Script15
# 6: Mount1Yaw                        60: RCIN10                          109: Script16
# 7: Mount1Pitch                      61: RCIN11                          110: Airbrakes
# 8: Mount1Roll                       62: RCIN12                          120: NeoPixel1
# 9: Mount1Retract                    63: RCIN13                          121: NeoPixel2
# 10: CameraTrigger                   64: RCIN14                          122: NeoPixel3
# 12: Mount2Yaw                       65: RCIN15                          123: NeoPixel4
# 13: Mount2Pitch                     66: RCIN16                          124: RateRoll
# 14: Mount2Roll                      67: Ignition                        125: RatePitch
# 15: Mount2Retract                   69: Starter                         126: RateThrust
# 16: DifferentialSpoilerLeft1        70: Throttle                        127: RateYaw
# 17: DifferentialSpoilerRight1       73: ThrottleLeft                    129: ProfiLED1
# 19: Elevator                        74: ThrottleRight                   130: ProfiLED2
# 21: Rudder                          75: TiltMotorFrontLeft              131: ProfiLED3
# 22: SprayerPump                     76: TiltMotorFrontRight             132: ProfiLEDClock
# 23: SprayerSpinner                  77: ElevonLeft                      134: SERVOn_MIN
# 24: FlaperonLeft                    78: ElevonRight                     135: SERVOn_TRIM
# 25: FlaperonRight                   79: VTailLeft                       136: SERVOn_MAX
# 26: GroundSteering                  80: VTailRight                      138: Alarm
# 27: Parachute                       82: Motor9                          139: Alarm Inverted
# 28: Gripper                         83: Motor10                         140: RCIN1Scaled
# 29: LandingGear                     84: Motor11                         141: RCIN2Scaled
# 30: EngineRunEnable                 85: Motor12                         142: RCIN3Scaled
# 33: Motor1                          86: DifferentialSpoilerLeft2        143: RCIN4Scaled
# 34: Motor2                          87: DifferentialSpoilerRight2       144: RCIN5Scaled
# 35: Motor3                          90: CameraISO                       145: RCIN6Scaled
# 36: Motor4                          91: CameraAperture                  146: RCIN7Scaled
# 37: Motor5                          92: CameraFocus                     147: RCIN8Scaled
# 38: Motor6                          93: CameraShutterSpeed              148: RCIN9Scaled
# 39: Motor7/TailTiltServo            94: Script1                         149: RCIN10Scaled
# 40: Motor8                          95: Script2                         150: RCIN11Scaled
# 41: TiltMotorsFront                 96: Script3                         151: RCIN12Scaled
# 45: TiltMotorsRear                  97: Script4                         152: RCIN13Scaled
# 46: TiltMotorRearLeft               98: Script5                         153: RCIN14Scaled
# 47: TiltMotorRearRight              99: Script6                         154: RCIN15Scaled
# 51: RCIN1                           100: Script7                        155: RCIN16Scaled
# 52: RCIN2                           101: Script8
# 53: RCIN3                           102: Script9
SERVO15_FUNCTION,0

# Maximum PWM
# maximum PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000 is
# upper limit.
# Units: PWM (PWM in microseconds)
# Range: 800 2200
# Increment: 1
SERVO15_MAX,1900

# Minimum PWM
# minimum PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000 is
# upper limit.
# Units: PWM (PWM in microseconds)
# Range: 800 2200
# Increment: 1
SERVO15_MIN,1100

# Servo reverse
# Reverse servo operation. Set to 0 for normal operation. Set to 1 to reverse this output channel.
# 0: Normal
# 1: Reversed
SERVO15_REVERSED,0

# Trim PWM
# Trim PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000 is
# upper limit.
# Units: PWM (PWM in microseconds)
# Range: 800 2200
# Increment: 1
SERVO15_TRIM,1500

# Servo output function
# Function assigned to this servo. Setting this to Disabled(0) will setup this output for control by
# auto missions or MAVLink servo set commands. any other value will enable the corresponding function
# RebootRequired: True
# -1: GPIO                            54: RCIN4                           103: Script10
# 0: Disabled                         55: RCIN5                           104: Script11
# 1: RCPassThru                       56: RCIN6                           105: Script12
# 2: Flap                             57: RCIN7                           106: Script13
# 3: FlapAuto                         58: RCIN8                           107: Script14
# 4: Aileron                          59: RCIN9                           108: Script15
# 6: Mount1Yaw                        60: RCIN10                          109: Script16
# 7: Mount1Pitch                      61: RCIN11                          110: Airbrakes
# 8: Mount1Roll                       62: RCIN12                          120: NeoPixel1
# 9: Mount1Retract                    63: RCIN13                          121: NeoPixel2
# 10: CameraTrigger                   64: RCIN14                          122: NeoPixel3
# 12: Mount2Yaw                       65: RCIN15                          123: NeoPixel4
# 13: Mount2Pitch                     66: RCIN16                          124: RateRoll
# 14: Mount2Roll                      67: Ignition                        125: RatePitch
# 15: Mount2Retract                   69: Starter                         126: RateThrust
# 16: DifferentialSpoilerLeft1        70: Throttle                        127: RateYaw
# 17: DifferentialSpoilerRight1       73: ThrottleLeft                    129: ProfiLED1
# 19: Elevator                        74: ThrottleRight                   130: ProfiLED2
# 21: Rudder                          75: TiltMotorFrontLeft              131: ProfiLED3
# 22: SprayerPump                     76: TiltMotorFrontRight             132: ProfiLEDClock
# 23: SprayerSpinner                  77: ElevonLeft                      134: SERVOn_MIN
# 24: FlaperonLeft                    78: ElevonRight                     135: SERVOn_TRIM
# 25: FlaperonRight                   79: VTailLeft                       136: SERVOn_MAX
# 26: GroundSteering                  80: VTailRight                      138: Alarm
# 27: Parachute                       82: Motor9                          139: Alarm Inverted
# 28: Gripper                         83: Motor10                         140: RCIN1Scaled
# 29: LandingGear                     84: Motor11                         141: RCIN2Scaled
# 30: EngineRunEnable                 85: Motor12                         142: RCIN3Scaled
# 33: Motor1                          86: DifferentialSpoilerLeft2        143: RCIN4Scaled
# 34: Motor2                          87: DifferentialSpoilerRight2       144: RCIN5Scaled
# 35: Motor3                          90: CameraISO                       145: RCIN6Scaled
# 36: Motor4                          91: CameraAperture                  146: RCIN7Scaled
# 37: Motor5                          92: CameraFocus                     147: RCIN8Scaled
# 38: Motor6                          93: CameraShutterSpeed              148: RCIN9Scaled
# 39: Motor7/TailTiltServo            94: Script1                         149: RCIN10Scaled
# 40: Motor8                          95: Script2                         150: RCIN11Scaled
# 41: TiltMotorsFront                 96: Script3                         151: RCIN12Scaled
# 45: TiltMotorsRear                  97: Script4                         152: RCIN13Scaled
# 46: TiltMotorRearLeft               98: Script5                         153: RCIN14Scaled
# 47: TiltMotorRearRight              99: Script6                         154: RCIN15Scaled
# 51: RCIN1                           100: Script7                        155: RCIN16Scaled
# 52: RCIN2                           101: Script8
# 53: RCIN3                           102: Script9
SERVO16_FUNCTION,0

# Maximum PWM
# maximum PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000 is
# upper limit.
# Units: PWM (PWM in microseconds)
# Range: 800 2200
# Increment: 1
SERVO16_MAX,1900

# Minimum PWM
# minimum PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000 is
# upper limit.
# Units: PWM (PWM in microseconds)
# Range: 800 2200
# Increment: 1
SERVO16_MIN,1100

# Servo reverse
# Reverse servo operation. Set to 0 for normal operation. Set to 1 to reverse this output channel.
# 0: Normal
# 1: Reversed
SERVO16_REVERSED,0

# Trim PWM
# Trim PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000 is
# upper limit.
# Units: PWM (PWM in microseconds)
# Range: 800 2200
# Increment: 1
SERVO16_TRIM,1500

# Servo output function
# Function assigned to this servo. Setting this to Disabled(0) will setup this output for control by
# auto missions or MAVLink servo set commands. any other value will enable the corresponding function
# RebootRequired: True
# -1: GPIO                            54: RCIN4                           103: Script10
# 0: Disabled                         55: RCIN5                           104: Script11
# 1: RCPassThru                       56: RCIN6                           105: Script12
# 2: Flap                             57: RCIN7                           106: Script13
# 3: FlapAuto                         58: RCIN8                           107: Script14
# 4: Aileron                          59: RCIN9                           108: Script15
# 6: Mount1Yaw                        60: RCIN10                          109: Script16
# 7: Mount1Pitch                      61: RCIN11                          110: Airbrakes
# 8: Mount1Roll                       62: RCIN12                          120: NeoPixel1
# 9: Mount1Retract                    63: RCIN13                          121: NeoPixel2
# 10: CameraTrigger                   64: RCIN14                          122: NeoPixel3
# 12: Mount2Yaw                       65: RCIN15                          123: NeoPixel4
# 13: Mount2Pitch                     66: RCIN16                          124: RateRoll
# 14: Mount2Roll                      67: Ignition                        125: RatePitch
# 15: Mount2Retract                   69: Starter                         126: RateThrust
# 16: DifferentialSpoilerLeft1        70: Throttle                        127: RateYaw
# 17: DifferentialSpoilerRight1       73: ThrottleLeft                    129: ProfiLED1
# 19: Elevator                        74: ThrottleRight                   130: ProfiLED2
# 21: Rudder                          75: TiltMotorFrontLeft              131: ProfiLED3
# 22: SprayerPump                     76: TiltMotorFrontRight             132: ProfiLEDClock
# 23: SprayerSpinner                  77: ElevonLeft                      134: SERVOn_MIN
# 24: FlaperonLeft                    78: ElevonRight                     135: SERVOn_TRIM
# 25: FlaperonRight                   79: VTailLeft                       136: SERVOn_MAX
# 26: GroundSteering                  80: VTailRight                      138: Alarm
# 27: Parachute                       82: Motor9                          139: Alarm Inverted
# 28: Gripper                         83: Motor10                         140: RCIN1Scaled
# 29: LandingGear                     84: Motor11                         141: RCIN2Scaled
# 30: EngineRunEnable                 85: Motor12                         142: RCIN3Scaled
# 33: Motor1                          86: DifferentialSpoilerLeft2        143: RCIN4Scaled
# 34: Motor2                          87: DifferentialSpoilerRight2       144: RCIN5Scaled
# 35: Motor3                          90: CameraISO                       145: RCIN6Scaled
# 36: Motor4                          91: CameraAperture                  146: RCIN7Scaled
# 37: Motor5                          92: CameraFocus                     147: RCIN8Scaled
# 38: Motor6                          93: CameraShutterSpeed              148: RCIN9Scaled
# 39: Motor7/TailTiltServo            94: Script1                         149: RCIN10Scaled
# 40: Motor8                          95: Script2                         150: RCIN11Scaled
# 41: TiltMotorsFront                 96: Script3                         151: RCIN12Scaled
# 45: TiltMotorsRear                  97: Script4                         152: RCIN13Scaled
# 46: TiltMotorRearLeft               98: Script5                         153: RCIN14Scaled
# 47: TiltMotorRearRight              99: Script6                         154: RCIN15Scaled
# 51: RCIN1                           100: Script7                        155: RCIN16Scaled
# 52: RCIN2                           101: Script8
# 53: RCIN3                           102: Script9
SERVO2_FUNCTION,19

# Maximum PWM
# maximum PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000 is
# upper limit.
# Units: PWM (PWM in microseconds)
# Range: 800 2200
# Increment: 1
SERVO2_MAX,1900

# Minimum PWM
# minimum PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000 is
# upper limit.
# Units: PWM (PWM in microseconds)
# Range: 800 2200
# Increment: 1
SERVO2_MIN,1100

# Servo reverse
# Reverse servo operation. Set to 0 for normal operation. Set to 1 to reverse this output channel.
# 0: Normal
# 1: Reversed
SERVO2_REVERSED,0

# Trim PWM
# Trim PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000 is
# upper limit.
# Units: PWM (PWM in microseconds)
# Range: 800 2200
# Increment: 1
SERVO2_TRIM,1500

# Servo output function
# Function assigned to this servo. Setting this to Disabled(0) will setup this output for control by
# auto missions or MAVLink servo set commands. any other value will enable the corresponding function
# RebootRequired: True
# -1: GPIO                            54: RCIN4                           103: Script10
# 0: Disabled                         55: RCIN5                           104: Script11
# 1: RCPassThru                       56: RCIN6                           105: Script12
# 2: Flap                             57: RCIN7                           106: Script13
# 3: FlapAuto                         58: RCIN8                           107: Script14
# 4: Aileron                          59: RCIN9                           108: Script15
# 6: Mount1Yaw                        60: RCIN10                          109: Script16
# 7: Mount1Pitch                      61: RCIN11                          110: Airbrakes
# 8: Mount1Roll                       62: RCIN12                          120: NeoPixel1
# 9: Mount1Retract                    63: RCIN13                          121: NeoPixel2
# 10: CameraTrigger                   64: RCIN14                          122: NeoPixel3
# 12: Mount2Yaw                       65: RCIN15                          123: NeoPixel4
# 13: Mount2Pitch                     66: RCIN16                          124: RateRoll
# 14: Mount2Roll                      67: Ignition                        125: RatePitch
# 15: Mount2Retract                   69: Starter                         126: RateThrust
# 16: DifferentialSpoilerLeft1        70: Throttle                        127: RateYaw
# 17: DifferentialSpoilerRight1       73: ThrottleLeft                    129: ProfiLED1
# 19: Elevator                        74: ThrottleRight                   130: ProfiLED2
# 21: Rudder                          75: TiltMotorFrontLeft              131: ProfiLED3
# 22: SprayerPump                     76: TiltMotorFrontRight             132: ProfiLEDClock
# 23: SprayerSpinner                  77: ElevonLeft                      134: SERVOn_MIN
# 24: FlaperonLeft                    78: ElevonRight                     135: SERVOn_TRIM
# 25: FlaperonRight                   79: VTailLeft                       136: SERVOn_MAX
# 26: GroundSteering                  80: VTailRight                      138: Alarm
# 27: Parachute                       82: Motor9                          139: Alarm Inverted
# 28: Gripper                         83: Motor10                         140: RCIN1Scaled
# 29: LandingGear                     84: Motor11                         141: RCIN2Scaled
# 30: EngineRunEnable                 85: Motor12                         142: RCIN3Scaled
# 33: Motor1                          86: DifferentialSpoilerLeft2        143: RCIN4Scaled
# 34: Motor2                          87: DifferentialSpoilerRight2       144: RCIN5Scaled
# 35: Motor3                          90: CameraISO                       145: RCIN6Scaled
# 36: Motor4                          91: CameraAperture                  146: RCIN7Scaled
# 37: Motor5                          92: CameraFocus                     147: RCIN8Scaled
# 38: Motor6                          93: CameraShutterSpeed              148: RCIN9Scaled
# 39: Motor7/TailTiltServo            94: Script1                         149: RCIN10Scaled
# 40: Motor8                          95: Script2                         150: RCIN11Scaled
# 41: TiltMotorsFront                 96: Script3                         151: RCIN12Scaled
# 45: TiltMotorsRear                  97: Script4                         152: RCIN13Scaled
# 46: TiltMotorRearLeft               98: Script5                         153: RCIN14Scaled
# 47: TiltMotorRearRight              99: Script6                         154: RCIN15Scaled
# 51: RCIN1                           100: Script7                        155: RCIN16Scaled
# 52: RCIN2                           101: Script8
# 53: RCIN3                           102: Script9
SERVO3_FUNCTION,70

# Maximum PWM
# maximum PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000 is
# upper limit.
# Units: PWM (PWM in microseconds)
# Range: 800 2200
# Increment: 1
SERVO3_MAX,1900

# Minimum PWM
# minimum PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000 is
# upper limit.
# Units: PWM (PWM in microseconds)
# Range: 800 2200
# Increment: 1
SERVO3_MIN,1100

# Servo reverse
# Reverse servo operation. Set to 0 for normal operation. Set to 1 to reverse this output channel.
# 0: Normal
# 1: Reversed
SERVO3_REVERSED,0

# Trim PWM
# Trim PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000 is
# upper limit.
# Units: PWM (PWM in microseconds)
# Range: 800 2200
# Increment: 1
SERVO3_TRIM,1100

# Servo output function
# Function assigned to this servo. Setting this to Disabled(0) will setup this output for control by
# auto missions or MAVLink servo set commands. any other value will enable the corresponding function
# RebootRequired: True
# -1: GPIO                            54: RCIN4                           103: Script10
# 0: Disabled                         55: RCIN5                           104: Script11
# 1: RCPassThru                       56: RCIN6                           105: Script12
# 2: Flap                             57: RCIN7                           106: Script13
# 3: FlapAuto                         58: RCIN8                           107: Script14
# 4: Aileron                          59: RCIN9                           108: Script15
# 6: Mount1Yaw                        60: RCIN10                          109: Script16
# 7: Mount1Pitch                      61: RCIN11                          110: Airbrakes
# 8: Mount1Roll                       62: RCIN12                          120: NeoPixel1
# 9: Mount1Retract                    63: RCIN13                          121: NeoPixel2
# 10: CameraTrigger                   64: RCIN14                          122: NeoPixel3
# 12: Mount2Yaw                       65: RCIN15                          123: NeoPixel4
# 13: Mount2Pitch                     66: RCIN16                          124: RateRoll
# 14: Mount2Roll                      67: Ignition                        125: RatePitch
# 15: Mount2Retract                   69: Starter                         126: RateThrust
# 16: DifferentialSpoilerLeft1        70: Throttle                        127: RateYaw
# 17: DifferentialSpoilerRight1       73: ThrottleLeft                    129: ProfiLED1
# 19: Elevator                        74: ThrottleRight                   130: ProfiLED2
# 21: Rudder                          75: TiltMotorFrontLeft              131: ProfiLED3
# 22: SprayerPump                     76: TiltMotorFrontRight             132: ProfiLEDClock
# 23: SprayerSpinner                  77: ElevonLeft                      134: SERVOn_MIN
# 24: FlaperonLeft                    78: ElevonRight                     135: SERVOn_TRIM
# 25: FlaperonRight                   79: VTailLeft                       136: SERVOn_MAX
# 26: GroundSteering                  80: VTailRight                      138: Alarm
# 27: Parachute                       82: Motor9                          139: Alarm Inverted
# 28: Gripper                         83: Motor10                         140: RCIN1Scaled
# 29: LandingGear                     84: Motor11                         141: RCIN2Scaled
# 30: EngineRunEnable                 85: Motor12                         142: RCIN3Scaled
# 33: Motor1                          86: DifferentialSpoilerLeft2        143: RCIN4Scaled
# 34: Motor2                          87: DifferentialSpoilerRight2       144: RCIN5Scaled
# 35: Motor3                          90: CameraISO                       145: RCIN6Scaled
# 36: Motor4                          91: CameraAperture                  146: RCIN7Scaled
# 37: Motor5                          92: CameraFocus                     147: RCIN8Scaled
# 38: Motor6                          93: CameraShutterSpeed              148: RCIN9Scaled
# 39: Motor7/TailTiltServo            94: Script1                         149: RCIN10Scaled
# 40: Motor8                          95: Script2                         150: RCIN11Scaled
# 41: TiltMotorsFront                 96: Script3                         151: RCIN12Scaled
# 45: TiltMotorsRear                  97: Script4                         152: RCIN13Scaled
# 46: TiltMotorRearLeft               98: Script5                         153: RCIN14Scaled
# 47: TiltMotorRearRight              99: Script6                         154: RCIN15Scaled
# 51: RCIN1                           100: Script7                        155: RCIN16Scaled
# 52: RCIN2                           101: Script8
# 53: RCIN3                           102: Script9
SERVO4_FUNCTION,21

# Maximum PWM
# maximum PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000 is
# upper limit.
# Units: PWM (PWM in microseconds)
# Range: 800 2200
# Increment: 1
SERVO4_MAX,1900

# Minimum PWM
# minimum PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000 is
# upper limit.
# Units: PWM (PWM in microseconds)
# Range: 800 2200
# Increment: 1
SERVO4_MIN,1100

# Servo reverse
# Reverse servo operation. Set to 0 for normal operation. Set to 1 to reverse this output channel.
# 0: Normal
# 1: Reversed
SERVO4_REVERSED,0

# Trim PWM
# Trim PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000 is
# upper limit.
# Units: PWM (PWM in microseconds)
# Range: 800 2200
# Increment: 1
SERVO4_TRIM,1500

# Servo output function
# Function assigned to this servo. Setting this to Disabled(0) will setup this output for control by
# auto missions or MAVLink servo set commands. any other value will enable the corresponding function
# RebootRequired: True
# -1: GPIO                            54: RCIN4                           103: Script10
# 0: Disabled                         55: RCIN5                           104: Script11
# 1: RCPassThru                       56: RCIN6                           105: Script12
# 2: Flap                             57: RCIN7                           106: Script13
# 3: FlapAuto                         58: RCIN8                           107: Script14
# 4: Aileron                          59: RCIN9                           108: Script15
# 6: Mount1Yaw                        60: RCIN10                          109: Script16
# 7: Mount1Pitch                      61: RCIN11                          110: Airbrakes
# 8: Mount1Roll                       62: RCIN12                          120: NeoPixel1
# 9: Mount1Retract                    63: RCIN13                          121: NeoPixel2
# 10: CameraTrigger                   64: RCIN14                          122: NeoPixel3
# 12: Mount2Yaw                       65: RCIN15                          123: NeoPixel4
# 13: Mount2Pitch                     66: RCIN16                          124: RateRoll
# 14: Mount2Roll                      67: Ignition                        125: RatePitch
# 15: Mount2Retract                   69: Starter                         126: RateThrust
# 16: DifferentialSpoilerLeft1        70: Throttle                        127: RateYaw
# 17: DifferentialSpoilerRight1       73: ThrottleLeft                    129: ProfiLED1
# 19: Elevator                        74: ThrottleRight                   130: ProfiLED2
# 21: Rudder                          75: TiltMotorFrontLeft              131: ProfiLED3
# 22: SprayerPump                     76: TiltMotorFrontRight             132: ProfiLEDClock
# 23: SprayerSpinner                  77: ElevonLeft                      134: SERVOn_MIN
# 24: FlaperonLeft                    78: ElevonRight                     135: SERVOn_TRIM
# 25: FlaperonRight                   79: VTailLeft                       136: SERVOn_MAX
# 26: GroundSteering                  80: VTailRight                      138: Alarm
# 27: Parachute                       82: Motor9                          139: Alarm Inverted
# 28: Gripper                         83: Motor10                         140: RCIN1Scaled
# 29: LandingGear                     84: Motor11                         141: RCIN2Scaled
# 30: EngineRunEnable                 85: Motor12                         142: RCIN3Scaled
# 33: Motor1                          86: DifferentialSpoilerLeft2        143: RCIN4Scaled
# 34: Motor2                          87: DifferentialSpoilerRight2       144: RCIN5Scaled
# 35: Motor3                          90: CameraISO                       145: RCIN6Scaled
# 36: Motor4                          91: CameraAperture                  146: RCIN7Scaled
# 37: Motor5                          92: CameraFocus                     147: RCIN8Scaled
# 38: Motor6                          93: CameraShutterSpeed              148: RCIN9Scaled
# 39: Motor7/TailTiltServo            94: Script1                         149: RCIN10Scaled
# 40: Motor8                          95: Script2                         150: RCIN11Scaled
# 41: TiltMotorsFront                 96: Script3                         151: RCIN12Scaled
# 45: TiltMotorsRear                  97: Script4                         152: RCIN13Scaled
# 46: TiltMotorRearLeft               98: Script5                         153: RCIN14Scaled
# 47: TiltMotorRearRight              99: Script6                         154: RCIN15Scaled
# 51: RCIN1                           100: Script7                        155: RCIN16Scaled
# 52: RCIN2                           101: Script8
# 53: RCIN3                           102: Script9
SERVO5_FUNCTION,0

# Maximum PWM
# maximum PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000 is
# upper limit.
# Units: PWM (PWM in microseconds)
# Range: 800 2200
# Increment: 1
SERVO5_MAX,1900

# Minimum PWM
# minimum PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000 is
# upper limit.
# Units: PWM (PWM in microseconds)
# Range: 800 2200
# Increment: 1
SERVO5_MIN,1100

# Servo reverse
# Reverse servo operation. Set to 0 for normal operation. Set to 1 to reverse this output channel.
# 0: Normal
# 1: Reversed
SERVO5_REVERSED,0

# Trim PWM
# Trim PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000 is
# upper limit.
# Units: PWM (PWM in microseconds)
# Range: 800 2200
# Increment: 1
SERVO5_TRIM,1500

# Servo output function
# Function assigned to this servo. Setting this to Disabled(0) will setup this output for control by
# auto missions or MAVLink servo set commands. any other value will enable the corresponding function
# RebootRequired: True
# -1: GPIO                            54: RCIN4                           103: Script10
# 0: Disabled                         55: RCIN5                           104: Script11
# 1: RCPassThru                       56: RCIN6                           105: Script12
# 2: Flap                             57: RCIN7                           106: Script13
# 3: FlapAuto                         58: RCIN8                           107: Script14
# 4: Aileron                          59: RCIN9                           108: Script15
# 6: Mount1Yaw                        60: RCIN10                          109: Script16
# 7: Mount1Pitch                      61: RCIN11                          110: Airbrakes
# 8: Mount1Roll                       62: RCIN12                          120: NeoPixel1
# 9: Mount1Retract                    63: RCIN13                          121: NeoPixel2
# 10: CameraTrigger                   64: RCIN14                          122: NeoPixel3
# 12: Mount2Yaw                       65: RCIN15                          123: NeoPixel4
# 13: Mount2Pitch                     66: RCIN16                          124: RateRoll
# 14: Mount2Roll                      67: Ignition                        125: RatePitch
# 15: Mount2Retract                   69: Starter                         126: RateThrust
# 16: DifferentialSpoilerLeft1        70: Throttle                        127: RateYaw
# 17: DifferentialSpoilerRight1       73: ThrottleLeft                    129: ProfiLED1
# 19: Elevator                        74: ThrottleRight                   130: ProfiLED2
# 21: Rudder                          75: TiltMotorFrontLeft              131: ProfiLED3
# 22: SprayerPump                     76: TiltMotorFrontRight             132: ProfiLEDClock
# 23: SprayerSpinner                  77: ElevonLeft                      134: SERVOn_MIN
# 24: FlaperonLeft                    78: ElevonRight                     135: SERVOn_TRIM
# 25: FlaperonRight                   79: VTailLeft                       136: SERVOn_MAX
# 26: GroundSteering                  80: VTailRight                      138: Alarm
# 27: Parachute                       82: Motor9                          139: Alarm Inverted
# 28: Gripper                         83: Motor10                         140: RCIN1Scaled
# 29: LandingGear                     84: Motor11                         141: RCIN2Scaled
# 30: EngineRunEnable                 85: Motor12                         142: RCIN3Scaled
# 33: Motor1                          86: DifferentialSpoilerLeft2        143: RCIN4Scaled
# 34: Motor2                          87: DifferentialSpoilerRight2       144: RCIN5Scaled
# 35: Motor3                          90: CameraISO                       145: RCIN6Scaled
# 36: Motor4                          91: CameraAperture                  146: RCIN7Scaled
# 37: Motor5                          92: CameraFocus                     147: RCIN8Scaled
# 38: Motor6                          93: CameraShutterSpeed              148: RCIN9Scaled
# 39: Motor7/TailTiltServo            94: Script1                         149: RCIN10Scaled
# 40: Motor8                          95: Script2                         150: RCIN11Scaled
# 41: TiltMotorsFront                 96: Script3                         151: RCIN12Scaled
# 45: TiltMotorsRear                  97: Script4                         152: RCIN13Scaled
# 46: TiltMotorRearLeft               98: Script5                         153: RCIN14Scaled
# 47: TiltMotorRearRight              99: Script6                         154: RCIN15Scaled
# 51: RCIN1                           100: Script7                        155: RCIN16Scaled
# 52: RCIN2                           101: Script8
# 53: RCIN3                           102: Script9
SERVO6_FUNCTION,0

# Maximum PWM
# maximum PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000 is
# upper limit.
# Units: PWM (PWM in microseconds)
# Range: 800 2200
# Increment: 1
SERVO6_MAX,1900

# Minimum PWM
# minimum PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000 is
# upper limit.
# Units: PWM (PWM in microseconds)
# Range: 800 2200
# Increment: 1
SERVO6_MIN,1100

# Servo reverse
# Reverse servo operation. Set to 0 for normal operation. Set to 1 to reverse this output channel.
# 0: Normal
# 1: Reversed
SERVO6_REVERSED,0

# Trim PWM
# Trim PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000 is
# upper limit.
# Units: PWM (PWM in microseconds)
# Range: 800 2200
# Increment: 1
SERVO6_TRIM,1500

# Servo output function
# Function assigned to this servo. Setting this to Disabled(0) will setup this output for control by
# auto missions or MAVLink servo set commands. any other value will enable the corresponding function
# RebootRequired: True
# -1: GPIO                            54: RCIN4                           103: Script10
# 0: Disabled                         55: RCIN5                           104: Script11
# 1: RCPassThru                       56: RCIN6                           105: Script12
# 2: Flap                             57: RCIN7                           106: Script13
# 3: FlapAuto                         58: RCIN8                           107: Script14
# 4: Aileron                          59: RCIN9                           108: Script15
# 6: Mount1Yaw                        60: RCIN10                          109: Script16
# 7: Mount1Pitch                      61: RCIN11                          110: Airbrakes
# 8: Mount1Roll                       62: RCIN12                          120: NeoPixel1
# 9: Mount1Retract                    63: RCIN13                          121: NeoPixel2
# 10: CameraTrigger                   64: RCIN14                          122: NeoPixel3
# 12: Mount2Yaw                       65: RCIN15                          123: NeoPixel4
# 13: Mount2Pitch                     66: RCIN16                          124: RateRoll
# 14: Mount2Roll                      67: Ignition                        125: RatePitch
# 15: Mount2Retract                   69: Starter                         126: RateThrust
# 16: DifferentialSpoilerLeft1        70: Throttle                        127: RateYaw
# 17: DifferentialSpoilerRight1       73: ThrottleLeft                    129: ProfiLED1
# 19: Elevator                        74: ThrottleRight                   130: ProfiLED2
# 21: Rudder                          75: TiltMotorFrontLeft              131: ProfiLED3
# 22: SprayerPump                     76: TiltMotorFrontRight             132: ProfiLEDClock
# 23: SprayerSpinner                  77: ElevonLeft                      134: SERVOn_MIN
# 24: FlaperonLeft                    78: ElevonRight                     135: SERVOn_TRIM
# 25: FlaperonRight                   79: VTailLeft                       136: SERVOn_MAX
# 26: GroundSteering                  80: VTailRight                      138: Alarm
# 27: Parachute                       82: Motor9                          139: Alarm Inverted
# 28: Gripper                         83: Motor10                         140: RCIN1Scaled
# 29: LandingGear                     84: Motor11                         141: RCIN2Scaled
# 30: EngineRunEnable                 85: Motor12                         142: RCIN3Scaled
# 33: Motor1                          86: DifferentialSpoilerLeft2        143: RCIN4Scaled
# 34: Motor2                          87: DifferentialSpoilerRight2       144: RCIN5Scaled
# 35: Motor3                          90: CameraISO                       145: RCIN6Scaled
# 36: Motor4                          91: CameraAperture                  146: RCIN7Scaled
# 37: Motor5                          92: CameraFocus                     147: RCIN8Scaled
# 38: Motor6                          93: CameraShutterSpeed              148: RCIN9Scaled
# 39: Motor7/TailTiltServo            94: Script1                         149: RCIN10Scaled
# 40: Motor8                          95: Script2                         150: RCIN11Scaled
# 41: TiltMotorsFront                 96: Script3                         151: RCIN12Scaled
# 45: TiltMotorsRear                  97: Script4                         152: RCIN13Scaled
# 46: TiltMotorRearLeft               98: Script5                         153: RCIN14Scaled
# 47: TiltMotorRearRight              99: Script6                         154: RCIN15Scaled
# 51: RCIN1                           100: Script7                        155: RCIN16Scaled
# 52: RCIN2                           101: Script8
# 53: RCIN3                           102: Script9
SERVO7_FUNCTION,0

# Maximum PWM
# maximum PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000 is
# upper limit.
# Units: PWM (PWM in microseconds)
# Range: 800 2200
# Increment: 1
SERVO7_MAX,1900

# Minimum PWM
# minimum PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000 is
# upper limit.
# Units: PWM (PWM in microseconds)
# Range: 800 2200
# Increment: 1
SERVO7_MIN,1100

# Servo reverse
# Reverse servo operation. Set to 0 for normal operation. Set to 1 to reverse this output channel.
# 0: Normal
# 1: Reversed
SERVO7_REVERSED,0

# Trim PWM
# Trim PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000 is
# upper limit.
# Units: PWM (PWM in microseconds)
# Range: 800 2200
# Increment: 1
SERVO7_TRIM,1500

# Servo output function
# Function assigned to this servo. Setting this to Disabled(0) will setup this output for control by
# auto missions or MAVLink servo set commands. any other value will enable the corresponding function
# RebootRequired: True
# -1: GPIO                            54: RCIN4                           103: Script10
# 0: Disabled                         55: RCIN5                           104: Script11
# 1: RCPassThru                       56: RCIN6                           105: Script12
# 2: Flap                             57: RCIN7                           106: Script13
# 3: FlapAuto                         58: RCIN8                           107: Script14
# 4: Aileron                          59: RCIN9                           108: Script15
# 6: Mount1Yaw                        60: RCIN10                          109: Script16
# 7: Mount1Pitch                      61: RCIN11                          110: Airbrakes
# 8: Mount1Roll                       62: RCIN12                          120: NeoPixel1
# 9: Mount1Retract                    63: RCIN13                          121: NeoPixel2
# 10: CameraTrigger                   64: RCIN14                          122: NeoPixel3
# 12: Mount2Yaw                       65: RCIN15                          123: NeoPixel4
# 13: Mount2Pitch                     66: RCIN16                          124: RateRoll
# 14: Mount2Roll                      67: Ignition                        125: RatePitch
# 15: Mount2Retract                   69: Starter                         126: RateThrust
# 16: DifferentialSpoilerLeft1        70: Throttle                        127: RateYaw
# 17: DifferentialSpoilerRight1       73: ThrottleLeft                    129: ProfiLED1
# 19: Elevator                        74: ThrottleRight                   130: ProfiLED2
# 21: Rudder                          75: TiltMotorFrontLeft              131: ProfiLED3
# 22: SprayerPump                     76: TiltMotorFrontRight             132: ProfiLEDClock
# 23: SprayerSpinner                  77: ElevonLeft                      134: SERVOn_MIN
# 24: FlaperonLeft                    78: ElevonRight                     135: SERVOn_TRIM
# 25: FlaperonRight                   79: VTailLeft                       136: SERVOn_MAX
# 26: GroundSteering                  80: VTailRight                      138: Alarm
# 27: Parachute                       82: Motor9                          139: Alarm Inverted
# 28: Gripper                         83: Motor10                         140: RCIN1Scaled
# 29: LandingGear                     84: Motor11                         141: RCIN2Scaled
# 30: EngineRunEnable                 85: Motor12                         142: RCIN3Scaled
# 33: Motor1                          86: DifferentialSpoilerLeft2        143: RCIN4Scaled
# 34: Motor2                          87: DifferentialSpoilerRight2       144: RCIN5Scaled
# 35: Motor3                          90: CameraISO                       145: RCIN6Scaled
# 36: Motor4                          91: CameraAperture                  146: RCIN7Scaled
# 37: Motor5                          92: CameraFocus                     147: RCIN8Scaled
# 38: Motor6                          93: CameraShutterSpeed              148: RCIN9Scaled
# 39: Motor7/TailTiltServo            94: Script1                         149: RCIN10Scaled
# 40: Motor8                          95: Script2                         150: RCIN11Scaled
# 41: TiltMotorsFront                 96: Script3                         151: RCIN12Scaled
# 45: TiltMotorsRear                  97: Script4                         152: RCIN13Scaled
# 46: TiltMotorRearLeft               98: Script5                         153: RCIN14Scaled
# 47: TiltMotorRearRight              99: Script6                         154: RCIN15Scaled
# 51: RCIN1                           100: Script7                        155: RCIN16Scaled
# 52: RCIN2                           101: Script8
# 53: RCIN3                           102: Script9
SERVO8_FUNCTION,0

# Maximum PWM
# maximum PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000 is
# upper limit.
# Units: PWM (PWM in microseconds)
# Range: 800 2200
# Increment: 1
SERVO8_MAX,1900

# Minimum PWM
# minimum PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000 is
# upper limit.
# Units: PWM (PWM in microseconds)
# Range: 800 2200
# Increment: 1
SERVO8_MIN,1100

# Servo reverse
# Reverse servo operation. Set to 0 for normal operation. Set to 1 to reverse this output channel.
# 0: Normal
# 1: Reversed
SERVO8_REVERSED,0

# Trim PWM
# Trim PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000 is
# upper limit.
# Units: PWM (PWM in microseconds)
# Range: 800 2200
# Increment: 1
SERVO8_TRIM,1500

# Servo output function
# Function assigned to this servo. Setting this to Disabled(0) will setup this output for control by
# auto missions or MAVLink servo set commands. any other value will enable the corresponding function
# RebootRequired: True
# -1: GPIO                            54: RCIN4                           103: Script10
# 0: Disabled                         55: RCIN5                           104: Script11
# 1: RCPassThru                       56: RCIN6                           105: Script12
# 2: Flap                             57: RCIN7                           106: Script13
# 3: FlapAuto                         58: RCIN8                           107: Script14
# 4: Aileron                          59: RCIN9                           108: Script15
# 6: Mount1Yaw                        60: RCIN10                          109: Script16
# 7: Mount1Pitch                      61: RCIN11                          110: Airbrakes
# 8: Mount1Roll                       62: RCIN12                          120: NeoPixel1
# 9: Mount1Retract                    63: RCIN13                          121: NeoPixel2
# 10: CameraTrigger                   64: RCIN14                          122: NeoPixel3
# 12: Mount2Yaw                       65: RCIN15                          123: NeoPixel4
# 13: Mount2Pitch                     66: RCIN16                          124: RateRoll
# 14: Mount2Roll                      67: Ignition                        125: RatePitch
# 15: Mount2Retract                   69: Starter                         126: RateThrust
# 16: DifferentialSpoilerLeft1        70: Throttle                        127: RateYaw
# 17: DifferentialSpoilerRight1       73: ThrottleLeft                    129: ProfiLED1
# 19: Elevator                        74: ThrottleRight                   130: ProfiLED2
# 21: Rudder                          75: TiltMotorFrontLeft              131: ProfiLED3
# 22: SprayerPump                     76: TiltMotorFrontRight             132: ProfiLEDClock
# 23: SprayerSpinner                  77: ElevonLeft                      134: SERVOn_MIN
# 24: FlaperonLeft                    78: ElevonRight                     135: SERVOn_TRIM
# 25: FlaperonRight                   79: VTailLeft                       136: SERVOn_MAX
# 26: GroundSteering                  80: VTailRight                      138: Alarm
# 27: Parachute                       82: Motor9                          139: Alarm Inverted
# 28: Gripper                         83: Motor10                         140: RCIN1Scaled
# 29: LandingGear                     84: Motor11                         141: RCIN2Scaled
# 30: EngineRunEnable                 85: Motor12                         142: RCIN3Scaled
# 33: Motor1                          86: DifferentialSpoilerLeft2        143: RCIN4Scaled
# 34: Motor2                          87: DifferentialSpoilerRight2       144: RCIN5Scaled
# 35: Motor3                          90: CameraISO                       145: RCIN6Scaled
# 36: Motor4                          91: CameraAperture                  146: RCIN7Scaled
# 37: Motor5                          92: CameraFocus                     147: RCIN8Scaled
# 38: Motor6                          93: CameraShutterSpeed              148: RCIN9Scaled
# 39: Motor7/TailTiltServo            94: Script1                         149: RCIN10Scaled
# 40: Motor8                          95: Script2                         150: RCIN11Scaled
# 41: TiltMotorsFront                 96: Script3                         151: RCIN12Scaled
# 45: TiltMotorsRear                  97: Script4                         152: RCIN13Scaled
# 46: TiltMotorRearLeft               98: Script5                         153: RCIN14Scaled
# 47: TiltMotorRearRight              99: Script6                         154: RCIN15Scaled
# 51: RCIN1                           100: Script7                        155: RCIN16Scaled
# 52: RCIN2                           101: Script8
# 53: RCIN3                           102: Script9
SERVO9_FUNCTION,0

# Maximum PWM
# maximum PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000 is
# upper limit.
# Units: PWM (PWM in microseconds)
# Range: 800 2200
# Increment: 1
SERVO9_MAX,1900

# Minimum PWM
# minimum PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000 is
# upper limit.
# Units: PWM (PWM in microseconds)
# Range: 800 2200
# Increment: 1
SERVO9_MIN,1100

# Servo reverse
# Reverse servo operation. Set to 0 for normal operation. Set to 1 to reverse this output channel.
# 0: Normal
# 1: Reversed
SERVO9_REVERSED,0

# Trim PWM
# Trim PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000 is
# upper limit.
# Units: PWM (PWM in microseconds)
# Range: 800 2200
# Increment: 1
SERVO9_TRIM,1500

# Accelerometer Failure Mask
# Determines if the acclerometer reading updates are stopped when for an IMU simulated failure by
# ACCELx_FAIL params
# 0: Disabled
# 1: Readings stopped
SIM_ACC_FAIL_MSK,0
SIM_ACC_FILE_RW,0
SIM_ACC_TRIM_X,0
SIM_ACC_TRIM_Y,0
SIM_ACC_TRIM_Z,0

# Accel 1 bias
# bias of simulated accelerometer sensor (X-axis)
SIM_ACC1_BIAS_X,0

# Accel 1 bias
# bias of simulated accelerometer sensor (Y-axis)
SIM_ACC1_BIAS_Y,0

# Accel 1 bias
# bias of simulated accelerometer sensor (Z-axis)
SIM_ACC1_BIAS_Z,0
SIM_ACC1_RND,0

# Accel 1 scaling factor
# scaling factors applied to simulated accelerometer (X-axis)
SIM_ACC1_SCAL_X,0

# Accel 1 scaling factor
# scaling factors applied to simulated accelerometer (Y-axis)
SIM_ACC1_SCAL_Y,0

# Accel 1 scaling factor
# scaling factors applied to simulated accelerometer (Z-axis)
SIM_ACC1_SCAL_Z,0

# Accel 2 bias
# bias of simulated accelerometer sensor (X-axis)
SIM_ACC2_BIAS_X,0

# Accel 2 bias
# bias of simulated accelerometer sensor (Y-axis)
SIM_ACC2_BIAS_Y,0

# Accel 2 bias
# bias of simulated accelerometer sensor (Z-axis)
SIM_ACC2_BIAS_Z,0
SIM_ACC2_RND,0

# Accel 2 scaling factor
# scaling factors applied to simulated accelerometer (X-axis)
SIM_ACC2_SCAL_X,0

# Accel 2 scaling factor
# scaling factors applied to simulated accelerometer (Y-axis)
SIM_ACC2_SCAL_Y,0

# Accel 2 scaling factor
# scaling factors applied to simulated accelerometer (Z-axis)
SIM_ACC2_SCAL_Z,0

# Accel 3 bias
# bias of simulated accelerometer sensor (X-axis)
SIM_ACC3_BIAS_X,0

# Accel 3 bias
# bias of simulated accelerometer sensor (Y-axis)
SIM_ACC3_BIAS_Y,0

# Accel 3 bias
# bias of simulated accelerometer sensor (Z-axis)
SIM_ACC3_BIAS_Z,0
SIM_ACC3_RND,0

# Accel 3 scaling factor
# scaling factors applied to simulated accelerometer (X-axis)
SIM_ACC3_SCAL_X,0

# Accel 3 scaling factor
# scaling factors applied to simulated accelerometer (Y-axis)
SIM_ACC3_SCAL_Y,0

# Accel 3 scaling factor
# scaling factors applied to simulated accelerometer (Z-axis)
SIM_ACC3_SCAL_Z,0

# ACCEL1 Failure
# Simulated failure of ACCEL1
# 0: Disabled
# 1: ACCEL1 Failure
SIM_ACCEL1_FAIL,0

# ACCEL2 Failure
# Simulated failure of ACCEL2
# 0: Disabled
# 1: ACCEL2 Failure
SIM_ACCEL2_FAIL,0

# ACCEL3 Failure
# Simulated failure of ACCEL3
# 0: Disabled
# 1: ACCEL3 Failure
SIM_ACCEL3_FAIL,0
SIM_ADSB_ALT,1000
SIM_ADSB_COUNT,-1
SIM_ADSB_RADIUS,10000
SIM_ADSB_TX,0

# Simulated ADSB Type mask
# specifies which simulated ADSB types are active
# Bitmask: 0:MAVLink,3:SageTechMXS
SIM_ADSB_TYPES,1

# Airspeed sensor failure
# Simulates Airspeed sensor 1 failure
# 0: Disabled
# 1: Enabled
SIM_ARSPD_FAIL,0

# Airspeed sensor failure pressure
# Simulated airspeed sensor failure pressure
# Units: Pa (pascal)
SIM_ARSPD_FAILP,0
SIM_ARSPD_OFS,2013

# Airspeed pitot tube failure pressure
# Simulated airspeed sensor pitot tube failure pressure
# Units: Pa (pascal)
SIM_ARSPD_PITOT,0

# Airspeed ratios
# Simulated airspeed sensor ratio
SIM_ARSPD_RATIO,1.99
SIM_ARSPD_RND,2

# Airspeed signflip
# Simulated airspeed sensor with reversed pitot/static connections
# 0: Disabled
# 1: Enabled
SIM_ARSPD_SIGN,0

# Airspeed sensor failure
# Simulates Airspeed sensor 1 failure
# 0: Disabled
# 1: Enabled
SIM_ARSPD2_FAIL,0

# Airspeed sensor failure pressure
# Simulated airspeed sensor failure pressure
# Units: Pa (pascal)
SIM_ARSPD2_FAILP,0
SIM_ARSPD2_OFS,2013

# Airspeed pitot tube failure pressure
# Simulated airspeed sensor pitot tube failure pressure
# Units: Pa (pascal)
SIM_ARSPD2_PITOT,0

# Airspeed ratios
# Simulated airspeed sensor ratio
SIM_ARSPD2_RATIO,1.99
SIM_ARSPD2_RND,2

# Airspeed signflip
# Simulated airspeed sensor with reversed pitot/static connections
# 0: Disabled
# 1: Enabled
SIM_ARSPD2_SIGN,0
SIM_BAR2_DELAY,0
SIM_BAR2_DISABLE,0
SIM_BAR2_DRIFT,0
SIM_BAR2_FREEZE,0

# Baro2 Glitch
# Glitch for 2nd baro
# Units: m (meters)
SIM_BAR2_GLITCH,0

# Baro2 Noise
# Amount of (evenly-distributed) noise injected into the 2nd baro
# Units: m (meters)
SIM_BAR2_RND,0.2
SIM_BAR2_WCF_BAK,0
SIM_BAR2_WCF_DN,0
SIM_BAR2_WCF_FWD,0
SIM_BAR2_WCF_LFT,0
SIM_BAR2_WCF_RGT,0
SIM_BAR2_WCF_UP,0
SIM_BAR3_DELAY,0
SIM_BAR3_DISABLE,0
SIM_BAR3_DRIFT,0
SIM_BAR3_FREEZE,0

# Baro3 Glitch
# Glitch for 2nd baro
# Units: m (meters)
SIM_BAR3_GLITCH,0

# Baro3 Noise
# Amount of (evenly-distributed) noise injected into the 3rd baro
# Units: m (meters)
SIM_BAR3_RND,0.2
SIM_BAR3_WCF_BAK,0
SIM_BAR3_WCF_DN,0
SIM_BAR3_WCF_FWD,0
SIM_BAR3_WCF_LFT,0
SIM_BAR3_WCF_RGT,0
SIM_BAR3_WCF_UP,0
SIM_BARO_COUNT,2
SIM_BARO_DELAY,0
SIM_BARO_DISABLE,0
SIM_BARO_DRIFT,0
SIM_BARO_FREEZE,0

# Baro Glitch
# Glitch for 1st baro
# Units: m (meters)
SIM_BARO_GLITCH,0

# Baro Noise
# Amount of (evenly-distributed) noise injected into the 1st baro
# Units: m (meters)
SIM_BARO_RND,0.2
SIM_BARO_WCF_BAK,0
SIM_BARO_WCF_DN,0
SIM_BARO_WCF_FWD,0
SIM_BARO_WCF_LFT,0
SIM_BARO_WCF_RGT,0
SIM_BARO_WCF_UP,0
SIM_BATT_CAP_AH,0

# Simulated battery voltage
# Simulated battery (constant) voltage
# Units: V (volt)
SIM_BATT_VOLTAGE,12.6
SIM_BAUDLIMIT_EN,0

# Mask of CAN servos/ESCs
# The set of actuators controlled externally by CAN SITL AP_Periph
# Bitmask: 0: Servo 1, 1: Servo 2, 2: Servo 3, 3: Servo 4, 4: Servo 5, 5: Servo 6, 6: Servo 7, 7: Servo 8, 8: Servo 9, 9: Servo 10, 10: Servo 11, 11: Servo 12, 12: Servo 13, 13: Servo 14, 14: Servo 15, 15: Servo 16, 16: Servo 17, 17: Servo 18, 18: Servo 19, 19: Servo 20, 20: Servo 21, 21: Servo 22, 22: Servo 23, 23: Servo 24, 24: Servo 25, 25: Servo 26, 26: Servo 27, 27: Servo 28, 28: Servo 29, 29: Servo 30, 30: Servo 31, 31: Servo 32
SIM_CAN_SRV_MSK,0

# transport type for first CAN interface
# transport type for first CAN interface
# 0: MulticastUDP
# 1: SocketCAN
SIM_CAN_TYPE1,0

# transport type for second CAN interface
# transport type for second CAN interface
# 0: MulticastUDP
# 1: SocketCAN
SIM_CAN_TYPE2,0
SIM_DRIFT_SPEED,0.05
SIM_DRIFT_TIME,5
SIM_EFI_TYPE,0
SIM_ENGINE_FAIL,0
SIM_ENGINE_MUL,1
SIM_ESC_ARM_RPM,0

# Simulated ESC Telemetry
# enable perfect simulated ESC telemetry
SIM_ESC_TELEM,1

# Generate floating point exceptions
# If set, if a numerical error occurs SITL will die with a floating point exception.
SIM_FLOAT_EXCEPT,1

# Opflow Delay
# Opflow data delay
# Units: ms (milliseconds)
SIM_FLOW_DELAY,0

# Opflow Enable
# Enable simulated Optical Flow sensor
# 0: Disable
# 1: Enabled
SIM_FLOW_ENABLE,0

# Opflow Pos
# XYZ position of the optical flow sensor focal point relative to the body frame origin (X-axis)
# Units: m (meters)
SIM_FLOW_POS_X,0

# Opflow Pos
# XYZ position of the optical flow sensor focal point relative to the body frame origin (Y-axis)
# Units: m (meters)
SIM_FLOW_POS_Y,0

# Opflow Pos
# XYZ position of the optical flow sensor focal point relative to the body frame origin (Z-axis)
# Units: m (meters)
SIM_FLOW_POS_Z,0

# Opflow Rate
# Opflow Data Rate
# Units: Hz (hertz)
SIM_FLOW_RATE,10

# Opflow noise
# Optical Flow sensor measurement noise in rad/sec
SIM_FLOW_RND,0.05
SIM_FTOWESC_ENA,0
SIM_FTOWESC_POW,4095
SIM_GND_BEHAV,-1

# GPS 1 Accuracy
# GPS 1 Accuracy
SIM_GPS_ACC,0.3

# GPS 1 Altitude Offset
# GPS 1 Altitude Error
# Units: m (meters)
SIM_GPS_ALT_OFS,0

# GPS Byteloss
# Percent of bytes lost from GPS 1
# Units: % (percent)
SIM_GPS_BYTELOSS,0

# GPS 1 disable
# Disables GPS 1
# 0: Enable
# 1: GPS Disabled
SIM_GPS_DISABLE,0

# GPS 1 Altitude Drift
# GPS 1 altitude drift error
# Units: m (meters)
SIM_GPS_DRIFTALT,0

# GPS 1 Glitch
# Glitch offsets of simulated GPS 1 sensor (X-axis)
SIM_GPS_GLITCH_X,0

# GPS 1 Glitch
# Glitch offsets of simulated GPS 1 sensor (Y-axis)
SIM_GPS_GLITCH_Y,0

# GPS 1 Glitch
# Glitch offsets of simulated GPS 1 sensor (Z-axis)
SIM_GPS_GLITCH_Z,0

# GPS 1 Heading
# Enable GPS1 output of NMEA heading HDT sentence or UBLOX_RELPOSNED
# 0: Disabled
# 1: Enabled
SIM_GPS_HDG,0

# GPS 1 Hz
# GPS 1 Update rate
# Units: Hz (hertz)
SIM_GPS_HZ,5

# GPS jamming enable
# Enable simulated GPS jamming
# 0: Disabled
# 1: Enabled
SIM_GPS_JAM,0

# GPS 1 Lag
# GPS 1 lag
# Units: ms (milliseconds)
SIM_GPS_LAG_MS,100

# GPS 1 Lock Time
# Delay in seconds before GPS1 acquires lock
# Units: s (seconds)
SIM_GPS_LOCKTIME,0

# GPS Log Number
# Log number for GPS:update_file()
SIM_GPS_LOG_NUM,0

# GPS 1 Noise
# Amplitude of the GPS1 altitude error
# Units: m (meters)
SIM_GPS_NOISE,0

# GPS 1 Num Satellites
# Number of satellites GPS 1 has in view
SIM_GPS_NUMSATS,10

# GPS 1 Position
# GPS 1 antenna phase center position relative to the body frame origin (X-axis)
# Units: m (meters)
SIM_GPS_POS_X,0

# GPS 1 Position
# GPS 1 antenna phase center position relative to the body frame origin (Y-axis)
# Units: m (meters)
SIM_GPS_POS_Y,0

# GPS 1 Position
# GPS 1 antenna phase center position relative to the body frame origin (Z-axis)
# Units: m (meters)
SIM_GPS_POS_Z,0

# GPS 1 type
# Sets the type of simulation used for GPS 1
# 0: None
# 1: UBlox
# 5: NMEA
# 6: SBP
# 7: File
# 8: Nova
# 9: SBP2
# 11: Trimble
# 19: MSP
SIM_GPS_TYPE,1

# GPS 1 Velocity Error
# GPS 1 Velocity Error Offsets in NED (X-axis)
SIM_GPS_VERR_X,0

# GPS 1 Velocity Error
# GPS 1 Velocity Error Offsets in NED (Y-axis)
SIM_GPS_VERR_Y,0

# GPS 1 Velocity Error
# GPS 1 Velocity Error Offsets in NED (Z-axis)
SIM_GPS_VERR_Z,0

# GPS 2 Accuracy
# GPS 2 Accuracy
SIM_GPS2_ACC,0.3

# GPS 2 Altitude Offset
# GPS 2 Altitude Error
# Units: m (meters)
SIM_GPS2_ALT_OFS,0

# GPS 2 Byteloss
# Percent of bytes lost from GPS 2
# Units: % (percent)
SIM_GPS2_BYTELOS,0

# GPS 2 disable
# Disables GPS 2
# 0: Enable
# 1: GPS Disabled
SIM_GPS2_DISABLE,1

# GPS 2 Altitude Drift
# GPS 2 altitude drift error
# Units: m (meters)
SIM_GPS2_DRFTALT,0

# GPS 2 Glitch
# Glitch offsets of simulated GPS 2 sensor (X-axis)
SIM_GPS2_GLTCH_X,0

# GPS 2 Glitch
# Glitch offsets of simulated GPS 2 sensor (Y-axis)
SIM_GPS2_GLTCH_Y,0

# GPS 2 Glitch
# Glitch offsets of simulated GPS 2 sensor (Z-axis)
SIM_GPS2_GLTCH_Z,0

# GPS 2 Heading
# Enable GPS2 output of NMEA heading HDT sentence or UBLOX_RELPOSNED
# 0: Disabled
# 1: Enabled
SIM_GPS2_HDG,0

# GPS 2 Hz
# GPS 2 Update rate
# Units: Hz (hertz)
SIM_GPS2_HZ,5

# GPS jamming enable
# Enable simulated GPS jamming
# 0: Disabled
# 1: Enabled
SIM_GPS2_JAM,0

# GPS 2 Lag
# GPS 2 lag in ms
# Units: ms (milliseconds)
SIM_GPS2_LAG_MS,100

# GPS 2 Lock Time
# Delay in seconds before GPS2 acquires lock
# Units: s (seconds)
SIM_GPS2_LCKTIME,0

# GPS 2 Noise
# Amplitude of the GPS2 altitude error
# Units: m (meters)
SIM_GPS2_NOISE,0

# GPS 2 Num Satellites
# Number of satellites GPS 2 has in view
SIM_GPS2_NUMSATS,10

# GPS 2 Position
# GPS 2 antenna phase center position relative to the body frame origin (X-axis)
# Units: m (meters)
SIM_GPS2_POS_X,0

# GPS 2 Position
# GPS 2 antenna phase center position relative to the body frame origin (Y-axis)
# Units: m (meters)
SIM_GPS2_POS_Y,0

# GPS 2 Position
# GPS 2 antenna phase center position relative to the body frame origin (Z-axis)
# Units: m (meters)
SIM_GPS2_POS_Z,0

# GPS 2 type
# Sets the type of simulation used for GPS 2
# 0: None
# 1: UBlox
# 5: NMEA
# 6: SBP
# 7: File
# 8: Nova
# 9: SBP2
# 11: Trimble
# 19: MSP
SIM_GPS2_TYPE,1

# GPS 2 Velocity Error
# GPS 2 Velocity Error Offsets in NED (X-axis)
SIM_GPS2_VERR_X,0

# GPS 2 Velocity Error
# GPS 2 Velocity Error Offsets in NED (Y-axis)
SIM_GPS2_VERR_Y,0

# GPS 2 Velocity Error
# GPS 2 Velocity Error Offsets in NED (Z-axis)
SIM_GPS2_VERR_Z,0

# Gripper servo Sim enable/disable
# Allows you to enable (1) or disable (0) the gripper servo simulation
# 0: Disabled
# 1: Enabled
SIM_GRPE_ENABLE,0

# Gripper emp pin
# The pin number that the gripper emp is connected to. (start at 1)
# Range: 0 15
SIM_GRPE_PIN,-1

# Gripper servo Sim enable/disable
# Allows you to enable (1) or disable (0) the gripper servo simulation
# 0: Disabled
# 1: Enabled
SIM_GRPS_ENABLE,0

# Gripper Grab PWM
# PWM value in microseconds sent to Gripper to initiate grabbing the cargo
# Range: 1000 2000
# Units: PWM (PWM in microseconds)
SIM_GRPS_GRAB,2000

# Gripper servo pin
# The pin number that the gripper servo is connected to. (start at 1)
# Range: 0 15
SIM_GRPS_PIN,-1

# Gripper Release PWM
# PWM value in microseconds sent to Gripper to release the cargo
# Range: 1000 2000
# Units: PWM (PWM in microseconds)
SIM_GRPS_RELEASE,1000

# Gripper close direction
# Reverse the closing direction.
# 0: Normal
# 1: Reverse
SIM_GRPS_REVERSE,0
SIM_GYR_FAIL_MSK,0
SIM_GYR_FILE_RW,0

# First Gyro bias on X axis
# First Gyro bias on X axis
# Units: rad/s (radians per second)
SIM_GYR1_BIAS_X,0

# First Gyro bias on Y axis
# First Gyro bias on Y axis
# Units: rad/s (radians per second)
SIM_GYR1_BIAS_Y,0

# First Gyro bias on Z axis
# First Gyro bias on Z axis
# Units: rad/s (radians per second)
SIM_GYR1_BIAS_Z,0
SIM_GYR1_RND,0

# Gyro 1 scaling factor
# scaling factors applied to simulated gyroscope (X-axis)
SIM_GYR1_SCALE_X,0

# Gyro 1 scaling factor
# scaling factors applied to simulated gyroscope (Y-axis)
SIM_GYR1_SCALE_Y,0

# Gyro 1 scaling factor
# scaling factors applied to simulated gyroscope (Z-axis)
SIM_GYR1_SCALE_Z,0

# Second Gyro bias on X axis
# Second Gyro bias on X axis
# Units: rad/s (radians per second)
SIM_GYR2_BIAS_X,0

# Second Gyro bias on Y axis
# Second Gyro bias on Y axis
# Units: rad/s (radians per second)
SIM_GYR2_BIAS_Y,0

# Second Gyro bias on Z axis
# Second Gyro bias on Z axis
# Units: rad/s (radians per second)
SIM_GYR2_BIAS_Z,0
SIM_GYR2_RND,0

# Gyro 2 scaling factor
# scaling factors applied to simulated gyroscope (X-axis)
SIM_GYR2_SCALE_X,0

# Gyro 2 scaling factor
# scaling factors applied to simulated gyroscope (Y-axis)
SIM_GYR2_SCALE_Y,0

# Gyro 2 scaling factor
# scaling factors applied to simulated gyroscope (Z-axis)
SIM_GYR2_SCALE_Z,0

# Third Gyro bias on X axis
# Third Gyro bias on X axis
# Units: rad/s (radians per second)
SIM_GYR3_BIAS_X,0

# Third Gyro bias on Y axis
# Third Gyro bias on Y axis
# Units: rad/s (radians per second)
SIM_GYR3_BIAS_Y,0

# Third Gyro bias on Z axis
# Third Gyro bias on Z axis
# Units: rad/s (radians per second)
SIM_GYR3_BIAS_Z,0
SIM_GYR3_RND,0

# Gyro 3 scaling factor
# scaling factors applied to simulated gyroscope (X-axis)
SIM_GYR3_SCALE_X,0

# Gyro 3 scaling factor
# scaling factors applied to simulated gyroscope (Y-axis)
SIM_GYR3_SCALE_Y,0

# Gyro 3 scaling factor
# scaling factors applied to simulated gyroscope (Z-axis)
SIM_GYR3_SCALE_Z,0
SIM_IE24_ENABLE,0
SIM_IE24_ERROR,0
SIM_IE24_STATE,-1

# IMU count
# Number of simulated IMUs to create
SIM_IMU_COUNT,2

# IMU Offsets
# XYZ position of the IMU accelerometer relative to the body frame origin (X-axis)
# Units: m (meters)
SIM_IMU_POS_X,0

# IMU Offsets
# XYZ position of the IMU accelerometer relative to the body frame origin (Y-axis)
# Units: m (meters)
SIM_IMU_POS_Y,0

# IMU Offsets
# XYZ position of the IMU accelerometer relative to the body frame origin (Z-axis)
# Units: m (meters)
SIM_IMU_POS_Z,0
SIM_IMUT_END,45
SIM_IMUT_FIXED,0
SIM_IMUT_START,25
SIM_IMUT_TCONST,300
SIM_IMUT1_ENABLE,0
SIM_IMUT2_ENABLE,0
SIM_IMUT3_ENABLE,0

# Initial Altitude Offset
# GPS initial alt offset from origin
SIM_INIT_ALT_OFS,0

# Initial Latitude Offset
# GPS initial lat offset from origin
SIM_INIT_LAT_OFS,0

# Initial Longitude Offset
# GPS initial lon offset from origin
SIM_INIT_LON_OFS,0
SIM_INS_THR_MIN,0.1

# JSON master instance
# the instance number to  take servos from
SIM_JSON_MASTER,0
SIM_LED_LAYOUT,0
SIM_LOOP_DELAY,0
SIM_MAG_ALY_HGT,1
SIM_MAG_ALY_X,0
SIM_MAG_ALY_Y,0
SIM_MAG_ALY_Z,0
SIM_MAG_DELAY,0
SIM_MAG_MOT_X,0
SIM_MAG_MOT_Y,0
SIM_MAG_MOT_Z,0
SIM_MAG_RND,0

# Save MAG devids on startup
# This forces saving of compass devids on startup so that simulated compasses start as calibrated
# 0: Disabled
# 1: Enabled
SIM_MAG_SAVE_IDS,1

# MAG1 Device ID
# Device ID of simulated compass 1
SIM_MAG1_DEVID,97539
SIM_MAG1_DIA_X,0
SIM_MAG1_DIA_Y,0
SIM_MAG1_DIA_Z,0

# MAG1 Failure
# Simulated failure of MAG1
# 0: Disabled
# 1: MAG1 Failure
SIM_MAG1_FAIL,0
SIM_MAG1_ODI_X,0
SIM_MAG1_ODI_Y,0
SIM_MAG1_ODI_Z,0
SIM_MAG1_OFS_X,5
SIM_MAG1_OFS_Y,13
SIM_MAG1_OFS_Z,-18
SIM_MAG1_ORIENT,0
SIM_MAG1_SCALING,1
SIM_MAG2_DEVID,131874
SIM_MAG2_DIA_X,0
SIM_MAG2_DIA_Y,0
SIM_MAG2_DIA_Z,0

# MAG2 Failure
# Simulated failure of MAG2
# 0: Disabled
# 1: MAG2 Failure
SIM_MAG2_FAIL,0
SIM_MAG2_ODI_X,0
SIM_MAG2_ODI_Y,0
SIM_MAG2_ODI_Z,0
SIM_MAG2_OFS_X,5
SIM_MAG2_OFS_Y,13
SIM_MAG2_OFS_Z,-18
SIM_MAG2_ORIENT,0
SIM_MAG2_SCALING,1
SIM_MAG3_DEVID,263178
SIM_MAG3_DIA_X,0
SIM_MAG3_DIA_Y,0
SIM_MAG3_DIA_Z,0

# MAG3 Failure
# Simulated failure of MAG3
# 0: Disabled
# 1: MAG3 Failure
SIM_MAG3_FAIL,0
SIM_MAG3_ODI_X,0
SIM_MAG3_ODI_Y,0
SIM_MAG3_ODI_Z,0
SIM_MAG3_OFS_X,5
SIM_MAG3_OFS_Y,13
SIM_MAG3_OFS_Z,-18
SIM_MAG3_ORIENT,0
SIM_MAG3_SCALING,1
SIM_MAG4_DEVID,97283
SIM_MAG5_DEVID,97795
SIM_MAG6_DEVID,98051
SIM_MAG7_DEVID,0
SIM_MAG8_DEVID,0
SIM_ODOM_ENABLE,0

# SIM-on_hardware Output Enable Mask
# channels which are passed through to actual hardware when running sim on actual hardware
SIM_OH_MASK,0

# SIM-on_hardware Relay Enable Mask
# Allow relay output operation when running SIM-on-hardware
SIM_OH_RELAY_MSK,-1

# Original Position (Altitude)
# Specifies vehicle's startup altitude (AMSL)
SIM_OPOS_ALT,584

# Original Position (Heading)
# Specifies vehicle's startup heading (0-360)
SIM_OPOS_HDG,353

# Original Position (Latitude)
# Specifies vehicle's startup latitude
SIM_OPOS_LAT,-35.36326

# Original Position (Longitude)
# Specifies vehicle's startup longitude
SIM_OPOS_LNG,149.1652
SIM_PARA_ENABLE,0
SIM_PARA_PIN,-1
SIM_PIN_MASK,0
SIM_PLD_ALT_LMT,15
SIM_PLD_DIST_LMT,10

# Preland device Sim enable/disable
# Allows you to enable (1) or disable (0) the Preland simulation
# 0: Disabled
# 1: Enabled
SIM_PLD_ENABLE,0

# Precland device center's height SITL origin
# Precland device center's height above SITL origin. Assumes a 2x2m square as station base
# Units: m (meters)
# Increment: 1
# Range: 0 10000
SIM_PLD_HEIGHT,0

# Precland device center's latitude
# Precland device center's latitude
# Units: deg (degrees)
# Increment: 0.000001
# Range: -90 90
SIM_PLD_LAT,50

# Precland device center's longitude
# Precland device center's longitude
# Units: deg (degrees)
# Increment: 0.000001
# Range: -180 180
SIM_PLD_LON,38

# SIM_Precland extra options
# SIM_Precland extra options
# Bitmask: 0: Enable target distance
SIM_PLD_OPTIONS,0

# Precland device orientation
# Precland device orientation vector
# 0: Front
# 4: Back
# 24: Up
SIM_PLD_ORIENT,24

# Precland device update rate
# Precland device rate. e.g led patter refresh rate, RF message rate, etc.
# Units: Hz (hertz)
# Range: 0 200
SIM_PLD_RATE,100

# SIM_Precland follow ship
# This makes the position of the landing beacon follow the simulated ship from SIM_SHIP. The ship
# movement is controlled with the SIM_SHIP parameters
# 0: Disabled
# 1: Enabled
SIM_PLD_SHIP,0

# Precland device radiance type
# Precland device radiance type: it can be a cylinder, a cone, or a sphere.
# 0: cylinder
# 1: cone
# 2: sphere
SIM_PLD_TYPE,0

# Precland device systems rotation from north
# Precland device systems rotation from north
# Units: deg (degrees)
# Increment: 1
# Range: -180 +180
SIM_PLD_YAW,0
SIM_RATE_HZ,1200
SIM_RC_CHANCOUNT,16

# Simulated RC signal failure
# Allows you to emulate rc failures in sim
# 0: Disabled
# 1: No RC pusles
# 2: All Channels neutral except Throttle is 950us
SIM_RC_FAIL,0
SIM_RICH_CTRL,-1
SIM_RICH_ENABLE,0
SIM_SERVO_SPEED,0.14
SIM_SHIP_DSIZE,10
SIM_SHIP_ENABLE,0
SIM_SHIP_OFS_X,0
SIM_SHIP_OFS_Y,0
SIM_SHIP_OFS_Z,0
SIM_SHIP_PSIZE,1000
SIM_SHIP_SPEED,3
SIM_SHIP_SYSID,17
SIM_SHOVE_TIME,0
SIM_SHOVE_X,0
SIM_SHOVE_Y,0
SIM_SHOVE_Z,0
SIM_SONAR_GLITCH,0
SIM_SONAR_POS_X,0
SIM_SONAR_POS_Y,0
SIM_SONAR_POS_Z,0
SIM_SONAR_RND,0
SIM_SONAR_ROT,25
SIM_SONAR_SCALE,12.1212

# Sim Speedup
# Runs the simulation at multiples of normal speed. Do not use if realtime physics, like RealFlight,
# is being used
# Range: 1 10
SIM_SPEEDUP,-1

# Sprayer Sim enable/disable
# Allows you to enable (1) or disable (0) the Sprayer simulation
# 0: Disabled
# 1: Enabled
SIM_SPR_ENABLE,0

# Sprayer pump pin
# The pin number that the Sprayer pump is connected to. (start at 1)
# Range: 0 15
SIM_SPR_PUMP,-1

# Sprayer spinner servo pin
# The pin number that the Sprayer spinner servo is connected to. (start at 1)
# Range: 0 15
SIM_SPR_SPIN,-1
SIM_TA_ENABLE,1
SIM_TEMP_BFACTOR,0
SIM_TEMP_BRD_OFF,20
SIM_TEMP_START,25
SIM_TEMP_TCONST,30
SIM_TERRAIN,1
SIM_THML_SCENARI,0
SIM_TIDE_DIR,0
SIM_TIDE_SPEED,0
SIM_TIME_JITTER,0
SIM_TWIST_TIME,0
SIM_TWIST_X,0
SIM_TWIST_Y,0
SIM_TWIST_Z,0

# UART byte loss percentage
# Sets percentage of outgoing byte loss on UARTs
# Units: % (percent)
SIM_UART_LOSS,0
SIM_VIB_FREQ_X,0
SIM_VIB_FREQ_Y,0
SIM_VIB_FREQ_Z,0
SIM_VIB_MOT_HMNC,1
SIM_VIB_MOT_MASK,0
SIM_VIB_MOT_MAX,0
SIM_VIB_MOT_MULT,1

# SITL vicon failure
# SITL vicon failure
# 0: Vicon Healthy
# 1: Vicon Failed
SIM_VICON_FAIL,0

# SITL vicon position glitch North
# SITL vicon position glitch North
# Units: m (meters)
SIM_VICON_GLIT_X,0

# SITL vicon position glitch East
# SITL vicon position glitch East
# Units: m (meters)
SIM_VICON_GLIT_Y,0

# SITL vicon position glitch Down
# SITL vicon position glitch Down
# Units: m (meters)
SIM_VICON_GLIT_Z,0

# SITL vicon position on vehicle in Forward direction
# SITL vicon position on vehicle in Forward direction
# Units: m (meters)
# Range: 0 10
SIM_VICON_POS_X,0

# SITL vicon position on vehicle in Right direction
# SITL vicon position on vehicle in Right direction
# Units: m (meters)
# Range: 0 10
SIM_VICON_POS_Y,0

# SITL vicon position on vehicle in Down direction
# SITL vicon position on vehicle in Down direction
# Units: m (meters)
# Range: 0 10
SIM_VICON_POS_Z,0

# SITL vicon type mask
# SITL vicon messages sent
# Bitmask: 0:VISION_POSITION_ESTIMATE, 1:VISION_SPEED_ESTIMATE, 2:VICON_POSITION_ESTIMATE, 3:VISION_POSITION_DELTA, 4:ODOMETRY
SIM_VICON_TMASK,3

# SITL vicon velocity glitch North
# SITL vicon velocity glitch North
# Units: m/s (meters per second)
SIM_VICON_VGLI_X,0

# SITL vicon velocity glitch East
# SITL vicon velocity glitch East
# Units: m/s (meters per second)
SIM_VICON_VGLI_Y,0

# SITL vicon velocity glitch Down
# SITL vicon velocity glitch Down
# Units: m/s (meters per second)
SIM_VICON_VGLI_Z,0

# SITL vicon yaw angle in earth frame
# SITL vicon yaw angle in earth frame
# Units: deg (degrees)
# Range: 0 360
SIM_VICON_YAW,0

# SITL vicon yaw error
# SITL vicon yaw added to reported yaw sent to vehicle
# Units: deg (degrees)
# Range: -180 180
SIM_VICON_YAWERR,0
SIM_WAVE_AMP,0.5
SIM_WAVE_DIR,0
SIM_WAVE_ENABLE,0
SIM_WAVE_LENGTH,10
SIM_WAVE_SPEED,0.5

# Simulated Wind direction
# Allows you to set wind direction (true deg) in sim
# Units: deg (degrees)
SIM_WIND_DIR,180
SIM_WIND_DIR_Z,0

# Simulated Wind speed
# Allows you to emulate wind in sim
# Units: m/s (meters per second)
SIM_WIND_SPD,0
SIM_WIND_T,0

# Full Wind Altitude
# Altitude at which wind reaches full strength, decaying from full strength as altitude lowers to
# ground level
# Units: m (meters)
SIM_WIND_T_ALT,60

# Linear Wind Curve Coeff
# For linear wind profile,wind is reduced by (Altitude-WIND_T_ALT) x this value
SIM_WIND_T_COEF,0.01

# Simulated Wind variation
# Allows you to emulate random wind variations in sim
# Units: m/s (meters per second)
SIM_WIND_TURB,0

# Weight on Wheels Pin
# SITL set this simulated pin to true if vehicle is on ground
SIM_WOW_PIN,-1

# Is the soaring mode enabled or not
# Toggles the soaring mode on and off
# 0: Disable
# 1: Enable
SOAR_ENABLE,0

# ADSB stream rate
# MAVLink ADSB stream rate
# Units: Hz (hertz)
# Range: 0 50
# Increment: 1
# RebootRequired: True
SR0_ADSB,5

# Extended status stream rate
# MAVLink Stream rate of SYS_STATUS, POWER_STATUS, MCU_STATUS, MEMINFO, CURRENT_WAYPOINT, GPS_RAW_INT,
# GPS_RTK (if available), GPS2_RAW_INT (if available), GPS2_RTK (if available), NAV_CONTROLLER_OUTPUT,
# FENCE_STATUS, and GLOBAL_TARGET_POS_INT
# Units: Hz (hertz)
# Range: 0 50
# Increment: 1
# RebootRequired: True
SR0_EXT_STAT,2

# Extra data type 1 stream rate
# MAVLink Stream rate of ATTITUDE, SIMSTATE (SIM only), AHRS2, RPM, AOA_SSA,
# LANDING,ESC_TELEMETRY,EFI_STATUS, and PID_TUNING
# Units: Hz (hertz)
# Range: 0 50
# Increment: 1
# RebootRequired: True
SR0_EXTRA1,4

# Extra data type 2 stream rate
# MAVLink Stream rate of VFR_HUD
# Range: 0 50
# Increment: 1
# RebootRequired: True
SR0_EXTRA2,4

# Extra data type 3 stream rate
# MAVLink Stream rate of AHRS, SYSTEM_TIME, WIND, RANGEFINDER, DISTANCE_SENSOR, TERRAIN_REQUEST,
# BATTERY2, GIMBAL_DEVICE_ATTITUDE_STATUS, OPTICAL_FLOW, MAG_CAL_REPORT, MAG_CAL_PROGRESS,
# EKF_STATUS_REPORT, VIBRATION, and BATTERY_STATUS
# Units: Hz (hertz)
# Range: 0 50
# Increment: 1
# RebootRequired: True
SR0_EXTRA3,2

# Parameter stream rate
# MAVLink Stream rate of PARAM_VALUE
# Units: Hz (hertz)
# Range: 0 50
# Increment: 1
# RebootRequired: True
SR0_PARAMS,10

# Position stream rate
# MAVLink Stream rate of GLOBAL_POSITION_INT and LOCAL_POSITION_NED
# Units: Hz (hertz)
# Range: 0 50
# Increment: 1
# RebootRequired: True
SR0_POSITION,2

# Raw Control stream rate
# MAVLink Raw Control stream rate of SERVO_OUT
# Units: Hz (hertz)
# Range: 0 50
# Increment: 1
# RebootRequired: True
SR0_RAW_CTRL,1

# Raw sensor stream rate
# MAVLink Stream rate of RAW_IMU, SCALED_IMU2, SCALED_IMU3, SCALED_PRESSURE, SCALED_PRESSURE2, and
# SCALED_PRESSURE3
# Units: Hz (hertz)
# Range: 0 50
# Increment: 1
# RebootRequired: True
SR0_RAW_SENS,2

# RC Channel stream rate
# MAVLink Stream rate of SERVO_OUTPUT_RAW and RC_CHANNELS
# Units: Hz (hertz)
# Range: 0 50
# Increment: 1
# RebootRequired: True
SR0_RC_CHAN,2

# ADSB stream rate
# MAVLink ADSB stream rate
# Units: Hz (hertz)
# Range: 0 50
# Increment: 1
# RebootRequired: True
SR1_ADSB,5

# Extended status stream rate
# MAVLink Stream rate of SYS_STATUS, POWER_STATUS, MCU_STATUS, MEMINFO, CURRENT_WAYPOINT, GPS_RAW_INT,
# GPS_RTK (if available), GPS2_RAW_INT (if available), GPS2_RTK (if available), NAV_CONTROLLER_OUTPUT,
# FENCE_STATUS, and GLOBAL_TARGET_POS_INT
# Units: Hz (hertz)
# Range: 0 50
# Increment: 1
# RebootRequired: True
SR1_EXT_STAT,1

# Extra data type 1 stream rate
# MAVLink Stream rate of ATTITUDE, SIMSTATE (SIM only), AHRS2, RPM, AOA_SSA,
# LANDING,ESC_TELEMETRY,EFI_STATUS, and PID_TUNING
# Units: Hz (hertz)
# Range: 0 50
# Increment: 1
# RebootRequired: True
SR1_EXTRA1,1

# Extra data type 2 stream rate
# MAVLink Stream rate of VFR_HUD
# Range: 0 50
# Increment: 1
# RebootRequired: True
SR1_EXTRA2,1

# Extra data type 3 stream rate
# MAVLink Stream rate of AHRS, SYSTEM_TIME, WIND, RANGEFINDER, DISTANCE_SENSOR, TERRAIN_REQUEST,
# BATTERY2, GIMBAL_DEVICE_ATTITUDE_STATUS, OPTICAL_FLOW, MAG_CAL_REPORT, MAG_CAL_PROGRESS,
# EKF_STATUS_REPORT, VIBRATION, and BATTERY_STATUS
# Units: Hz (hertz)
# Range: 0 50
# Increment: 1
# RebootRequired: True
SR1_EXTRA3,1

# Parameter stream rate
# MAVLink Stream rate of PARAM_VALUE
# Units: Hz (hertz)
# Range: 0 50
# Increment: 1
# RebootRequired: True
SR1_PARAMS,10

# Position stream rate
# MAVLink Stream rate of GLOBAL_POSITION_INT and LOCAL_POSITION_NED
# Units: Hz (hertz)
# Range: 0 50
# Increment: 1
# RebootRequired: True
SR1_POSITION,1

# Raw Control stream rate
# MAVLink Raw Control stream rate of SERVO_OUT
# Units: Hz (hertz)
# Range: 0 50
# Increment: 1
# RebootRequired: True
SR1_RAW_CTRL,1

# Raw sensor stream rate
# MAVLink Stream rate of RAW_IMU, SCALED_IMU2, SCALED_IMU3, SCALED_PRESSURE, SCALED_PRESSURE2, and
# SCALED_PRESSURE3
# Units: Hz (hertz)
# Range: 0 50
# Increment: 1
# RebootRequired: True
SR1_RAW_SENS,1

# RC Channel stream rate
# MAVLink Stream rate of SERVO_OUTPUT_RAW and RC_CHANNELS
# Units: Hz (hertz)
# Range: 0 50
# Increment: 1
# RebootRequired: True
SR1_RC_CHAN,1

# ADSB stream rate
# MAVLink ADSB stream rate
# Units: Hz (hertz)
# Range: 0 50
# Increment: 1
# RebootRequired: True
SR2_ADSB,5

# Extended status stream rate
# MAVLink Stream rate of SYS_STATUS, POWER_STATUS, MCU_STATUS, MEMINFO, CURRENT_WAYPOINT, GPS_RAW_INT,
# GPS_RTK (if available), GPS2_RAW_INT (if available), GPS2_RTK (if available), NAV_CONTROLLER_OUTPUT,
# FENCE_STATUS, and GLOBAL_TARGET_POS_INT
# Units: Hz (hertz)
# Range: 0 50
# Increment: 1
# RebootRequired: True
SR2_EXT_STAT,1

# Extra data type 1 stream rate
# MAVLink Stream rate of ATTITUDE, SIMSTATE (SIM only), AHRS2, RPM, AOA_SSA,
# LANDING,ESC_TELEMETRY,EFI_STATUS, and PID_TUNING
# Units: Hz (hertz)
# Range: 0 50
# Increment: 1
# RebootRequired: True
SR2_EXTRA1,1

# Extra data type 2 stream rate
# MAVLink Stream rate of VFR_HUD
# Range: 0 50
# Increment: 1
# RebootRequired: True
SR2_EXTRA2,1

# Extra data type 3 stream rate
# MAVLink Stream rate of AHRS, SYSTEM_TIME, WIND, RANGEFINDER, DISTANCE_SENSOR, TERRAIN_REQUEST,
# BATTERY2, GIMBAL_DEVICE_ATTITUDE_STATUS, OPTICAL_FLOW, MAG_CAL_REPORT, MAG_CAL_PROGRESS,
# EKF_STATUS_REPORT, VIBRATION, and BATTERY_STATUS
# Units: Hz (hertz)
# Range: 0 50
# Increment: 1
# RebootRequired: True
SR2_EXTRA3,1

# Parameter stream rate
# MAVLink Stream rate of PARAM_VALUE
# Units: Hz (hertz)
# Range: 0 50
# Increment: 1
# RebootRequired: True
SR2_PARAMS,10

# Position stream rate
# MAVLink Stream rate of GLOBAL_POSITION_INT and LOCAL_POSITION_NED
# Units: Hz (hertz)
# Range: 0 50
# Increment: 1
# RebootRequired: True
SR2_POSITION,1

# Raw Control stream rate
# MAVLink Raw Control stream rate of SERVO_OUT
# Units: Hz (hertz)
# Range: 0 50
# Increment: 1
# RebootRequired: True
SR2_RAW_CTRL,1

# Raw sensor stream rate
# MAVLink Stream rate of RAW_IMU, SCALED_IMU2, SCALED_IMU3, SCALED_PRESSURE, SCALED_PRESSURE2, and
# SCALED_PRESSURE3
# Units: Hz (hertz)
# Range: 0 50
# Increment: 1
# RebootRequired: True
SR2_RAW_SENS,1

# RC Channel stream rate
# MAVLink Stream rate of SERVO_OUTPUT_RAW and RC_CHANNELS
# Units: Hz (hertz)
# Range: 0 50
# Increment: 1
# RebootRequired: True
SR2_RC_CHAN,1

# ADSB stream rate
# MAVLink ADSB stream rate
# Units: Hz (hertz)
# Range: 0 50
# Increment: 1
# RebootRequired: True
SR3_ADSB,5

# Extended status stream rate
# MAVLink Stream rate of SYS_STATUS, POWER_STATUS, MCU_STATUS, MEMINFO, CURRENT_WAYPOINT, GPS_RAW_INT,
# GPS_RTK (if available), GPS2_RAW_INT (if available), GPS2_RTK (if available), NAV_CONTROLLER_OUTPUT,
# FENCE_STATUS, and GLOBAL_TARGET_POS_INT
# Units: Hz (hertz)
# Range: 0 50
# Increment: 1
# RebootRequired: True
SR3_EXT_STAT,1

# Extra data type 1 stream rate
# MAVLink Stream rate of ATTITUDE, SIMSTATE (SIM only), AHRS2, RPM, AOA_SSA,
# LANDING,ESC_TELEMETRY,EFI_STATUS, and PID_TUNING
# Units: Hz (hertz)
# Range: 0 50
# Increment: 1
# RebootRequired: True
SR3_EXTRA1,1

# Extra data type 2 stream rate
# MAVLink Stream rate of VFR_HUD
# Range: 0 50
# Increment: 1
# RebootRequired: True
SR3_EXTRA2,1

# Extra data type 3 stream rate
# MAVLink Stream rate of AHRS, SYSTEM_TIME, WIND, RANGEFINDER, DISTANCE_SENSOR, TERRAIN_REQUEST,
# BATTERY2, GIMBAL_DEVICE_ATTITUDE_STATUS, OPTICAL_FLOW, MAG_CAL_REPORT, MAG_CAL_PROGRESS,
# EKF_STATUS_REPORT, VIBRATION, and BATTERY_STATUS
# Units: Hz (hertz)
# Range: 0 50
# Increment: 1
# RebootRequired: True
SR3_EXTRA3,1

# Parameter stream rate
# MAVLink Stream rate of PARAM_VALUE
# Units: Hz (hertz)
# Range: 0 50
# Increment: 1
# RebootRequired: True
SR3_PARAMS,10

# Position stream rate
# MAVLink Stream rate of GLOBAL_POSITION_INT and LOCAL_POSITION_NED
# Units: Hz (hertz)
# Range: 0 50
# Increment: 1
# RebootRequired: True
SR3_POSITION,1

# Raw Control stream rate
# MAVLink Raw Control stream rate of SERVO_OUT
# Units: Hz (hertz)
# Range: 0 50
# Increment: 1
# RebootRequired: True
SR3_RAW_CTRL,1

# Raw sensor stream rate
# MAVLink Stream rate of RAW_IMU, SCALED_IMU2, SCALED_IMU3, SCALED_PRESSURE, SCALED_PRESSURE2, and
# SCALED_PRESSURE3
# Units: Hz (hertz)
# Range: 0 50
# Increment: 1
# RebootRequired: True
SR3_RAW_SENS,1

# RC Channel stream rate
# MAVLink Stream rate of SERVO_OUTPUT_RAW and RC_CHANNELS
# Units: Hz (hertz)
# Range: 0 50
# Increment: 1
# RebootRequired: True
SR3_RC_CHAN,1

# ADSB stream rate
# MAVLink ADSB stream rate
# Units: Hz (hertz)
# Range: 0 50
# Increment: 1
# RebootRequired: True
SR4_ADSB,5

# Extended status stream rate
# MAVLink Stream rate of SYS_STATUS, POWER_STATUS, MCU_STATUS, MEMINFO, CURRENT_WAYPOINT, GPS_RAW_INT,
# GPS_RTK (if available), GPS2_RAW_INT (if available), GPS2_RTK (if available), NAV_CONTROLLER_OUTPUT,
# FENCE_STATUS, and GLOBAL_TARGET_POS_INT
# Units: Hz (hertz)
# Range: 0 50
# Increment: 1
# RebootRequired: True
SR4_EXT_STAT,1

# Extra data type 1 stream rate
# MAVLink Stream rate of ATTITUDE, SIMSTATE (SIM only), AHRS2, RPM, AOA_SSA,
# LANDING,ESC_TELEMETRY,EFI_STATUS, and PID_TUNING
# Units: Hz (hertz)
# Range: 0 50
# Increment: 1
# RebootRequired: True
SR4_EXTRA1,1

# Extra data type 2 stream rate
# MAVLink Stream rate of VFR_HUD
# Range: 0 50
# Increment: 1
# RebootRequired: True
SR4_EXTRA2,1

# Extra data type 3 stream rate
# MAVLink Stream rate of AHRS, SYSTEM_TIME, WIND, RANGEFINDER, DISTANCE_SENSOR, TERRAIN_REQUEST,
# BATTERY2, GIMBAL_DEVICE_ATTITUDE_STATUS, OPTICAL_FLOW, MAG_CAL_REPORT, MAG_CAL_PROGRESS,
# EKF_STATUS_REPORT, VIBRATION, and BATTERY_STATUS
# Units: Hz (hertz)
# Range: 0 50
# Increment: 1
# RebootRequired: True
SR4_EXTRA3,1

# Parameter stream rate
# MAVLink Stream rate of PARAM_VALUE
# Units: Hz (hertz)
# Range: 0 50
# Increment: 1
# RebootRequired: True
SR4_PARAMS,10

# Position stream rate
# MAVLink Stream rate of GLOBAL_POSITION_INT and LOCAL_POSITION_NED
# Units: Hz (hertz)
# Range: 0 50
# Increment: 1
# RebootRequired: True
SR4_POSITION,1

# Raw Control stream rate
# MAVLink Raw Control stream rate of SERVO_OUT
# Units: Hz (hertz)
# Range: 0 50
# Increment: 1
# RebootRequired: True
SR4_RAW_CTRL,1

# Raw sensor stream rate
# MAVLink Stream rate of RAW_IMU, SCALED_IMU2, SCALED_IMU3, SCALED_PRESSURE, SCALED_PRESSURE2, and
# SCALED_PRESSURE3
# Units: Hz (hertz)
# Range: 0 50
# Increment: 1
# RebootRequired: True
SR4_RAW_SENS,1

# RC Channel stream rate
# MAVLink Stream rate of SERVO_OUTPUT_RAW and RC_CHANNELS
# Units: Hz (hertz)
# Range: 0 50
# Increment: 1
# RebootRequired: True
SR4_RC_CHAN,1

# ADSB stream rate
# MAVLink ADSB stream rate
# Units: Hz (hertz)
# Range: 0 50
# Increment: 1
# RebootRequired: True
SR5_ADSB,5

# Extended status stream rate
# MAVLink Stream rate of SYS_STATUS, POWER_STATUS, MCU_STATUS, MEMINFO, CURRENT_WAYPOINT, GPS_RAW_INT,
# GPS_RTK (if available), GPS2_RAW_INT (if available), GPS2_RTK (if available), NAV_CONTROLLER_OUTPUT,
# FENCE_STATUS, and GLOBAL_TARGET_POS_INT
# Units: Hz (hertz)
# Range: 0 50
# Increment: 1
# RebootRequired: True
SR5_EXT_STAT,1

# Extra data type 1 stream rate
# MAVLink Stream rate of ATTITUDE, SIMSTATE (SIM only), AHRS2, RPM, AOA_SSA,
# LANDING,ESC_TELEMETRY,EFI_STATUS, and PID_TUNING
# Units: Hz (hertz)
# Range: 0 50
# Increment: 1
# RebootRequired: True
SR5_EXTRA1,1

# Extra data type 2 stream rate
# MAVLink Stream rate of VFR_HUD
# Range: 0 50
# Increment: 1
# RebootRequired: True
SR5_EXTRA2,1

# Extra data type 3 stream rate
# MAVLink Stream rate of AHRS, SYSTEM_TIME, WIND, RANGEFINDER, DISTANCE_SENSOR, TERRAIN_REQUEST,
# BATTERY2, GIMBAL_DEVICE_ATTITUDE_STATUS, OPTICAL_FLOW, MAG_CAL_REPORT, MAG_CAL_PROGRESS,
# EKF_STATUS_REPORT, VIBRATION, and BATTERY_STATUS
# Units: Hz (hertz)
# Range: 0 50
# Increment: 1
# RebootRequired: True
SR5_EXTRA3,1

# Parameter stream rate
# MAVLink Stream rate of PARAM_VALUE
# Units: Hz (hertz)
# Range: 0 50
# Increment: 1
# RebootRequired: True
SR5_PARAMS,10

# Position stream rate
# MAVLink Stream rate of GLOBAL_POSITION_INT and LOCAL_POSITION_NED
# Units: Hz (hertz)
# Range: 0 50
# Increment: 1
# RebootRequired: True
SR5_POSITION,1

# Raw Control stream rate
# MAVLink Raw Control stream rate of SERVO_OUT
# Units: Hz (hertz)
# Range: 0 50
# Increment: 1
# RebootRequired: True
SR5_RAW_CTRL,1

# Raw sensor stream rate
# MAVLink Stream rate of RAW_IMU, SCALED_IMU2, SCALED_IMU3, SCALED_PRESSURE, SCALED_PRESSURE2, and
# SCALED_PRESSURE3
# Units: Hz (hertz)
# Range: 0 50
# Increment: 1
# RebootRequired: True
SR5_RAW_SENS,1

# RC Channel stream rate
# MAVLink Stream rate of SERVO_OUTPUT_RAW and RC_CHANNELS
# Units: Hz (hertz)
# Range: 0 50
# Increment: 1
# RebootRequired: True
SR5_RC_CHAN,1

# ADSB stream rate
# MAVLink ADSB stream rate
# Units: Hz (hertz)
# Range: 0 50
# Increment: 1
# RebootRequired: True
SR6_ADSB,5

# Extended status stream rate
# MAVLink Stream rate of SYS_STATUS, POWER_STATUS, MCU_STATUS, MEMINFO, CURRENT_WAYPOINT, GPS_RAW_INT,
# GPS_RTK (if available), GPS2_RAW_INT (if available), GPS2_RTK (if available), NAV_CONTROLLER_OUTPUT,
# FENCE_STATUS, and GLOBAL_TARGET_POS_INT
# Units: Hz (hertz)
# Range: 0 50
# Increment: 1
# RebootRequired: True
SR6_EXT_STAT,1

# Extra data type 1 stream rate
# MAVLink Stream rate of ATTITUDE, SIMSTATE (SIM only), AHRS2, RPM, AOA_SSA,
# LANDING,ESC_TELEMETRY,EFI_STATUS, and PID_TUNING
# Units: Hz (hertz)
# Range: 0 50
# Increment: 1
# RebootRequired: True
SR6_EXTRA1,1

# Extra data type 2 stream rate
# MAVLink Stream rate of VFR_HUD
# Range: 0 50
# Increment: 1
# RebootRequired: True
SR6_EXTRA2,1

# Extra data type 3 stream rate
# MAVLink Stream rate of AHRS, SYSTEM_TIME, WIND, RANGEFINDER, DISTANCE_SENSOR, TERRAIN_REQUEST,
# BATTERY2, GIMBAL_DEVICE_ATTITUDE_STATUS, OPTICAL_FLOW, MAG_CAL_REPORT, MAG_CAL_PROGRESS,
# EKF_STATUS_REPORT, VIBRATION, and BATTERY_STATUS
# Units: Hz (hertz)
# Range: 0 50
# Increment: 1
# RebootRequired: True
SR6_EXTRA3,1

# Parameter stream rate
# MAVLink Stream rate of PARAM_VALUE
# Units: Hz (hertz)
# Range: 0 50
# Increment: 1
# RebootRequired: True
SR6_PARAMS,10

# Position stream rate
# MAVLink Stream rate of GLOBAL_POSITION_INT and LOCAL_POSITION_NED
# Units: Hz (hertz)
# Range: 0 50
# Increment: 1
# RebootRequired: True
SR6_POSITION,1

# Raw Control stream rate
# MAVLink Raw Control stream rate of SERVO_OUT
# Units: Hz (hertz)
# Range: 0 50
# Increment: 1
# RebootRequired: True
SR6_RAW_CTRL,1

# Raw sensor stream rate
# MAVLink Stream rate of RAW_IMU, SCALED_IMU2, SCALED_IMU3, SCALED_PRESSURE, SCALED_PRESSURE2, and
# SCALED_PRESSURE3
# Units: Hz (hertz)
# Range: 0 50
# Increment: 1
# RebootRequired: True
SR6_RAW_SENS,1

# RC Channel stream rate
# MAVLink Stream rate of SERVO_OUTPUT_RAW and RC_CHANNELS
# Units: Hz (hertz)
# Range: 0 50
# Increment: 1
# RebootRequired: True
SR6_RC_CHAN,1
STAB_PITCH_DOWN,2
STALL_PREVENTION,1

# Boot Count
# Number of times board has been booted
# ReadOnly: True
STAT_BOOTCNT,6

# Total FlightTime
# Total FlightTime (seconds)
# Units: s (seconds)
# ReadOnly: True
STAT_FLTTIME,0

# Statistics Reset Time
# Seconds since January 1st 2016 (Unix epoch+1451606400) since statistics reset (set to 0 to reset
# statistics, other set values will be ignored)
# Units: s (seconds)
# ReadOnly: True
STAT_RESET,1

# Total RunTime
# Total time autopilot has run
# Units: s (seconds)
# ReadOnly: True
STAT_RUNTIME,1414

# Damping Gain
# This adjusts the damping of the steering control loop. This gain helps to reduce steering jitter
# with vibration. It should be increased in 0.01 increments as too high a value can lead to a high
# frequency steering oscillation that could overstress the vehicle.
# Range: 0 0.1
# Increment: 0.01
STEER2SRV_D,0.005

# Derating factor
# Degrees of steering wheel to derate at each additional m/s of speed above "Derating speed". Should
# be set so that at higher speeds the plane does not roll to the wing in turns.
# Range: 0.0 50.0
# Increment: 0.1
# Units: deg/m/s (degrees per meter per second)
STEER2SRV_DRTFCT,10

# Minimum angle of wheel
# The angle that limits smallest angle of steering wheel at maximum speed. Even if it should derate
# below, it will stop derating at this angle.
# Range: 0 4500
# Increment: 10
# Units: cdeg (centidegrees)
STEER2SRV_DRTMIN,4500

# Derating speed
# Speed after that the maximum degree of steering will start to derate. Set this speed to a maximum
# speed that a plane can do controlled turn at maximum angle of steering wheel without rolling to
# wing. If 0 then no derating is used.
# Range: 0.0 30.0
# Increment: 0.1
# Units: m/s (meters per second)
STEER2SRV_DRTSPD,0

# Steering feed forward
# The feed forward gain for steering this is the ratio of the achieved turn rate to applied steering.
# A value of 1 means that the vehicle would yaw at a rate of 45 degrees per second with full steering
# deflection at 1m/s ground speed.
# Range: 0.0 10.0
# Increment: 0.1
STEER2SRV_FF,0

# Integrator Gain
# This is the gain from the integral of steering angle. Increasing this gain causes the controller to
# trim out steady offsets due to an out of trim vehicle.
# Range: 0 1.0
# Increment: 0.05
STEER2SRV_I,0.2

# Integrator limit
# This limits the number of degrees of steering in centi-degrees over which the integrator will
# operate. At the default setting of 1500 centi-degrees, the integrator will be limited to +- 15
# degrees of servo travel. The maximum servo deflection is +- 45 centi-degrees, so the default value
# represents a 1/3rd of the total control throw which is adequate unless the vehicle is severely out
# of trim.
# Range: 0 4500
# Increment: 10
# Units: cdeg (centidegrees)
STEER2SRV_IMAX,1500

# Minimum speed
# This is the minimum assumed ground speed in meters/second for steering. Having a minimum speed
# prevents oscillations when the vehicle first starts moving. The vehicle can still drive slower than
# this limit, but the steering calculations will be done based on this minimum speed.
# Range: 0 5
# Increment: 0.1
# Units: m/s (meters per second)
STEER2SRV_MINSPD,1

# Steering turning gain
# The proportional gain for steering. This should be approximately equal to the diameter of the
# turning circle of the vehicle at low speed and maximum steering angle
# Range: 0.1 10.0
# Increment: 0.1
STEER2SRV_P,1.8

# Steering Time Constant
# This controls the time constant in seconds from demanded to achieved steering angle. A value of 0.75
# is a good default and will work with nearly all rovers. Ground steering in aircraft needs a bit
# smaller time constant, and a value of 0.5 is recommended for best ground handling in fixed wing
# aircraft. A value of 0.75 means that the controller will try to correct any deviation between the
# desired and actual steering angle in 0.75 seconds. Advanced users may want to reduce this time to
# obtain a faster response but there is no point setting a time less than the vehicle can achieve.
# Range: 0.4 1.0
# Units: s (seconds)
# Increment: 0.1
STEER2SRV_TCONST,0.75
STICK_MIXING,1
SYSID_ENFORCE,0
SYSID_MYGCS,255
SYSID_THISMAV,1

# Sink rate max for landing approach stage
# The sink rate max for the landing approach stage of landing. This will need to be large for steep
# landing approaches especially when using reverse thrust. If 0, then use TECS_SINK_MAX.
# Range: 0.0 20.0
# Units: m/s (meters per second)
# Increment: 0.1
TECS_APPR_SMAX,0

# Maximum Climb Rate (metres/sec)
# Maximum demanded climb rate. Do not set higher than the climb speed at THR_MAX at AIRSPEED_CRUISE
# when the battery is at low voltage. Reduce value if airspeed cannot be maintained on ascent.
# Increase value if throttle does not increase significantly to ascend.
# Increment: 0.1
# Range: 0.1 20.0
TECS_CLMB_MAX,5

# Flare holdoff height
# When height above ground is below this, the sink rate will be held at TECS_LAND_SINK. Use this to
# perform a hold-off manoeuvre when combined with small values for TECS_LAND_SINK.
# Range: 0 15
# Units: m (meters)
TECS_FLARE_HGT,1

# Height Demand Time Constant
# This sets the time constant of the low pass filter that is applied to the height demand input when
# bit 1 of TECS_OPTIONS is not selected.
# Range: 1.0 5.0
# Units: s (seconds)
# Increment: 0.2
TECS_HDEM_TCONST,3

# Height complementary filter frequency (radians/sec)
# This is the cross-over frequency of the complementary filter used to fuse vertical acceleration and
# baro alt to obtain an estimate of height rate and height.
# Range: 1.0 5.0
# Increment: 0.05
TECS_HGT_OMEGA,3

# Controller integrator
# Integrator gain to trim out long-term speed and height errors.
# Range: 0.0 0.5
# Increment: 0.02
TECS_INTEG_GAIN,0.3

# Airspeed during landing approach (m/s)
# When performing an autonomus landing, this value is used as the goal airspeed during approach.  Max
# airspeed allowed is Trim Airspeed or AIRSPEED_MAX as defined by LAND_OPTIONS bitmask.  Note that
# this parameter is not useful if your platform does not have an airspeed sensor (use TECS_LAND_THR
# instead).  If negative then this value is halfway between AIRSPEED_MIN and TRIM_CRUISE_CM speed for
# fixed wing autolandings.
# Range: -1 127
# Increment: 1
TECS_LAND_ARSPD,-1

# Controller sink rate to pitch gain during flare
# This is the sink rate gain for the pitch demand loop when in final landing stage of flight. It
# should be larger than TECS_PTCH_DAMP to allow for better sink rate control during flare.
# Range: 0.1 1.0
# Increment: 0.1
TECS_LAND_DAMP,0.5

# Controller integrator during landing
# This is the integrator gain on the control loop during landing. When set to 0 then TECS_INTEG_GAIN
# is used. Increase to increase the rate at which speed and height offsets are trimmed out. Typically
# values lower than TECS_INTEG_GAIN work best
# Range: 0.0 0.5
# Increment: 0.02
TECS_LAND_IGAIN,0

# Pitch damping gain when landing
# This is the damping gain for the pitch demand loop during landing. Increase to add damping  to
# correct for oscillations in speed and height. If set to 0 then TECS_PTCH_DAMP will be used instead.
# Range: 0.1 1.0
# Increment: 0.1
TECS_LAND_PDAMP,0

# Maximum pitch during final stage of landing
# This limits the pitch used during the final stage of automatic landing. During the final landing
# stage most planes need to keep their pitch small to avoid stalling. A maximum of 10 degrees is
# usually good. A value of zero means to use the normal pitch limits.
# Range: -5 40
# Increment: 1
TECS_LAND_PMAX,10

# Sink rate for final landing stage
# The sink rate in meters/second for the final stage of landing.
# Range: 0.0 2.0
# Increment: 0.1
TECS_LAND_SINK,0.25

# Weighting applied to speed control during landing.
# Same as SPDWEIGHT parameter, with the exception that this parameter is applied during landing flight
# stages.  A value closer to 2 will result in the plane ignoring height error during landing and our
# experience has been that the plane will therefore keep the nose up -- sometimes good for a glider
# landing (with the side effect that you will likely glide a ways past the landing point).  A value
# closer to 0 results in the plane ignoring speed error -- use caution when lowering the value below 1
# -- ignoring speed could result in a stall. Values between 0 and 2 are valid values for a fixed
# landing weight. When using -1 the weight will be scaled during the landing. At the start of the
# landing approach it starts with TECS_SPDWEIGHT and scales down to 0 by the time you reach the land
# point. Example: Halfway down the landing approach you'll effectively have a weight of
# TECS_SPDWEIGHT/2.
# Range: -1.0 2.0
# Increment: 0.1
TECS_LAND_SPDWGT,-1

# Land sink rate change
# When zero, the flare sink rate (TECS_LAND_SINK) is a fixed sink demand. With this enabled the flare
# sinkrate will increase/decrease the flare sink demand as you get further beyond the LAND waypoint.
# Has no effect before the waypoint. This value is added to TECS_LAND_SINK proportional to distance
# traveled after wp. With an increasing sink rate you can still land in a given distance if you're
# traveling too fast and cruise passed the land point. A positive value will force the plane to land
# sooner proportional to distance passed land point. A negative number will tell the plane to slowly
# climb allowing for a pitched-up stall landing. Recommend 0.2 as initial value.
# Range: -2.0 2.0
# Units: m/s/m (meters per second per meter)
# Increment: 0.1
TECS_LAND_SRC,0

# Land controller time constant (sec)
# This is the time constant of the TECS control algorithm when in final landing stage of flight. It
# should be smaller than TECS_TIME_CONST to allow for faster flare
# Range: 1.0 5.0
# Increment: 0.2
TECS_LAND_TCONST,2

# Controller throttle damping when landing
# Damping gain for the throttle demand loop during an auto-landing. Same as TECS_THR_DAMP but only in
# effect during an auto-land. Increase to add throttle activity to dampen oscillations in speed and
# height. When set to 0 landing throttle damping is controlled by TECS_THR_DAMP.
# Range: 0.1 1.0
# Increment: 0.1
TECS_LAND_TDAMP,0

# Cruise throttle during landing approach (percentage)
# Use this parameter instead of LAND_ARSPD if your platform does not have an airspeed sensor.  It is
# the cruise throttle during landing approach.  If this value is negative then it is disabled and
# TECS_LAND_ARSPD is used instead.
# Range: -1 100
# Increment: 0.1
TECS_LAND_THR,-1

# Extra TECS options
# This allows the enabling of special features in the speed/height controller.
# Bitmask: 0:GliderOnly,1:AllowDescentSpeedup
TECS_OPTIONS,0

# Maximum pitch in auto flight
# Overrides PTCH_LIM_MAX_DEG in automatic throttle modes to reduce climb rates. Uses PTCH_LIM_MAX_DEG
# if set to 0. For proper TECS tuning, set to the angle that the aircraft can climb at AIRSPEED_CRUISE
# and THR_MAX.
# Range: 0 45
# Increment: 1
TECS_PITCH_MAX,15

# Minimum pitch in auto flight
# Overrides PTCH_LIM_MIN_DEG in automatic throttle modes to reduce descent rates. Uses
# PTCH_LIM_MIN_DEG if set to 0. For proper TECS tuning, set to the angle that the aircraft can descend
# at without overspeeding.
# Range: -45 0
# Increment: 1
TECS_PITCH_MIN,0

# Controller pitch damping
# Damping gain for pitch control from TECS control.  Increasing may correct for oscillations in speed
# and height, but too much may cause additional oscillation and degraded control.
# Range: 0.1 1.0
# Increment: 0.1
TECS_PTCH_DAMP,0.3

# Gain for pitch feed-forward.
# This parameter sets the gain between demanded airspeed and pitch. It has units of radians per metre
# per second and should generally be negative. A good starting value is -0.04 for gliders and -0.08
# for draggy airframes. The default (0.0) disables this feed-forward.
# Range: -5.0 0.0
TECS_PTCH_FF_K,0

# Baseline airspeed for pitch feed-forward.
# This parameter sets the airspeed at which no feed-forward is applied between demanded airspeed and
# pitch. It should correspond to the airspeed in metres per second at which the plane glides at
# neutral pitch including STAB_PITCH_DOWN.
# Range: 5.0 50.0
TECS_PTCH_FF_V0,12

# Bank angle compensation gain
# Gain from bank angle to throttle to compensate for loss of airspeed from drag in turns. Set to
# approximately 10x the sink rate in m/s caused by a 45-degree turn. High efficiency models may need
# less while less efficient aircraft may need more. Should be tuned in an automatic mission with
# waypoints and turns greater than 90 degrees. Tune with PTCH2SRV_RLL and KFF_RDDRMIX to achieve
# constant airspeed, constant altitude turns.
# Range: 5.0 30.0
# Increment: 1.0
TECS_RLL2THR,10

# Maximum Descent Rate (metres/sec)
# Maximum demanded descent rate. Do not set higher than the vertical speed the aircraft can maintain
# at THR_MIN, TECS_PITCH_MIN, and AIRSPEED_MAX.
# Increment: 0.1
# Range: 0.0 20.0
TECS_SINK_MAX,5

# Minimum Sink Rate (metres/sec)
# Minimum sink rate when at THR_MIN and AIRSPEED_CRUISE.
# Increment: 0.1
# Range: 0.1 10.0
TECS_SINK_MIN,2

# Speed complementary filter frequency (radians/sec)
# This is the cross-over frequency of the complementary filter used to fuse longitudinal acceleration
# and airspeed to obtain a lower noise and lag estimate of airspeed.
# Range: 0.5 2.0
# Increment: 0.05
TECS_SPD_OMEGA,2

# Weighting applied to speed control
# Mixing of pitch and throttle correction for height and airspeed errors. Pitch controls altitude and
# throttle controls airspeed if set to 0. Pitch controls airspeed and throttle controls altitude if
# set to 2 (good for gliders). Blended if set to 1.
# Range: 0.0 2.0
# Increment: 0.1
TECS_SPDWEIGHT,1

# Enable the use of synthetic airspeed
# This enables the use of synthetic airspeed in TECS for aircraft that don't have a real airspeed
# sensor. This is useful for development testing where the user is aware of the considerable
# limitations of the synthetic airspeed system, such as very poor estimates when a wind estimate is
# not accurate. Do not enable this option unless you fully understand the limitations of a synthetic
# airspeed estimate. This option has no effect if a healthy airspeed sensor is being used for airspeed
# measurements.
# 0: Disable
# 1: Enable
TECS_SYNAIRSPEED,0

# Controller throttle damping
# Damping gain for throttle demand loop. Increase to add throttle activity to dampen oscillations in
# speed and height.
# Range: 0.1 1.0
# Increment: 0.1
TECS_THR_DAMP,0.5

# Controller time constant (sec)
# Time constant of the TECS control algorithm. Small values make faster altitude corrections but can
# cause overshoot and aggressive behavior.
# Range: 3.0 10.0
# Increment: 0.2
TECS_TIME_CONST,5

# Controller integrator during takeoff
# This is the integrator gain on the control loop during takeoff. When set to 0 then TECS_INTEG_GAIN
# is used. Increase to increase the rate at which speed and height offsets are trimmed out. Typically
# values higher than TECS_INTEG_GAIN work best
# Range: 0.0 0.5
# Increment: 0.02
TECS_TKOFF_IGAIN,0

# Vertical Acceleration Limit (metres/sec^2)
# Maximum vertical acceleration used to correct speed or height errors.
# Range: 1.0 10.0
# Increment: 0.5
TECS_VERT_ACC,7
TELEM_DELAY,0

# Logging
# Enables temperature sensor logging
# 0: Disabled
# 1: Enabled
TEMP_LOG,0

# Temperature Sensor Type
# Enables temperature sensors
# RebootRequired: True
# 0: Disabled
# 1: TSYS01
# 2: MCP9600
# 3: MAX31865
# 4: TSYS03
# 5: Analog
# 6: DroneCAN
TEMP1_TYPE,0

# Temperature Sensor Type
# Enables temperature sensors
# RebootRequired: True
# 0: Disabled
# 1: TSYS01
# 2: MCP9600
# 3: MAX31865
# 4: TSYS03
# 5: Analog
# 6: DroneCAN
TEMP2_TYPE,0

# Temperature Sensor Type
# Enables temperature sensors
# RebootRequired: True
# 0: Disabled
# 1: TSYS01
# 2: MCP9600
# 3: MAX31865
# 4: TSYS03
# 5: Analog
# 6: DroneCAN
TEMP3_TYPE,0

# Terrain data enable
# enable terrain data. This enables the vehicle storing a database of terrain data on the SD card. The
# terrain data is requested from the ground station as needed, and stored for later use on the SD
# card. To be useful the ground station must support TERRAIN_REQUEST messages and have access to a
# terrain database, such as the SRTM database.
# 0: Disable
# 1: Enable
TERRAIN_ENABLE,1
TERRAIN_FOLLOW,0
TERRAIN_LOOKAHD,2000

# Acceptance margin
# Margin in centi-meters to accept terrain data from the GCS. This can be used to allow older terrain
# data generated with less accurate latitude/longitude scaling to be used
# Units: m (meters)
# Range: 0.05 50000
TERRAIN_MARGIN,0.05

# Terrain reference offset maximum
# The maximum adjustment of terrain altitude based on the assumption that the vehicle is on the ground
# when it is armed. When the vehicle is armed the location of the vehicle is recorded, and when
# terrain data is available for that location a height adjustment for terrain data is calculated that
# aligns the terrain height at that location with the altitude recorded at arming. This height
# adjustment is applied to all terrain data. This parameter clamps the amount of adjustment. A value
# of zero disables the use of terrain height adjustment.
# Units: m (meters)
# Range: 0 50
TERRAIN_OFS_MAX,30

# Terrain options
# Options to change behaviour of terrain system
# Bitmask: 0:Disable Download
TERRAIN_OPTIONS,0

# Terrain grid spacing
# Distance between terrain grid points in meters. This controls the horizontal resolution of the
# terrain data that is stored on te SD card and requested from the ground station. If your GCS is
# using the ArduPilot SRTM database like Mission Planner or MAVProxy, then a resolution of 100 meters
# is appropriate. Grid spacings lower than 100 meters waste SD card space if the GCS cannot provide
# that resolution. The grid spacing also controls how much data is kept in memory during flight. A
# larger grid spacing will allow for a larger amount of data in memory. A grid spacing of 100 meters
# results in the vehicle keeping 12 grid squares in memory with each grid square having a size of 2.7
# kilometers by 3.2 kilometers. Any additional grid squares are stored on the SD once they are fetched
# from the GCS and will be loaded as needed.
# Units: m (meters)
# Increment: 1
TERRAIN_SPACING,100
THR_FAILSAFE,1
THR_FS_VALUE,950
THR_MAX,100
THR_MIN,0
THR_PASS_STAB,0
THR_SLEWRATE,100
THR_SUPP_MAN,0
THROTTLE_NUDGE,1
TKOFF_ACCEL_CNT,1

# Takeoff mode altitude
# This is the target altitude for TAKEOFF mode
# Range: 0 200
# Increment: 1
# Units: m (meters)
TKOFF_ALT,50

# Takeoff mode distance
# This is the distance from the takeoff location where the plane will loiter. The loiter point will be
# in the direction of takeoff (the direction the plane is facing when the plane begins takeoff)
# Range: 0 500
# Increment: 1
# Units: m (meters)
TKOFF_DIST,200
TKOFF_FLAP_PCNT,0

# Takeoff run pitch demand
# Degrees of pitch angle demanded during the takeoff run before speed reaches TKOFF_ROTATE_SPD. For
# taildraggers set to 3-point ground pitch angle and use TKOFF_TDRAG_ELEV to prevent nose tipover. For
# nose-wheel steer aircraft set to the ground pitch angle and if a reduction in nose-wheel load is
# required as speed rises, use a positive offset in TKOFF_GND_PITCH of up to 5 degrees above the angle
# on ground, starting at the mesured pitch angle and incrementing in 1 degree steps whilst checking
# for premature rotation and takeoff with each increment. To increase nose-wheel load, use a negative
# TKOFF_TDRAG_ELEV and refer to notes on TKOFF_TDRAG_ELEV before making adjustments.
# Units: deg (degrees)
# Range: -5.0 10.0
# Increment: 0.1
TKOFF_GND_PITCH,5

# Takeoff mode altitude level altitude
# This is the altitude below which the wings are held level for TAKEOFF and AUTO modes. Below this
# altitude, roll demand is restricted to LEVEL_ROLL_LIMIT. Normal-flight roll restriction resumes
# above TKOFF_LVL_ALT*3 or TKOFF_ALT, whichever is lower. Roll limits are scaled while between
# TKOFF_LVL_ALT and those altitudes for a smooth transition.
# Range: 0 50
# Increment: 1
# Units: m (meters)
TKOFF_LVL_ALT,5

# Takeoff mode altitude initial pitch
# This is the target pitch for the initial climb to TKOFF_LVL_ALT
# Range: 0 30
# Increment: 1
# Units: deg (degrees)
TKOFF_LVL_PITCH,15
TKOFF_PLIM_SEC,2
TKOFF_ROTATE_SPD,0
TKOFF_TDRAG_ELEV,0
TKOFF_TDRAG_SPD1,0
TKOFF_THR_DELAY,2
TKOFF_THR_MAX,0
TKOFF_THR_MAX_T,4
TKOFF_THR_MINACC,0
TKOFF_THR_MINSPD,0
TKOFF_THR_SLEW,0
TKOFF_TIMEOUT,0
TRIM_THROTTLE,45

# Transmitter tuning channel
# This sets the channel for transmitter tuning. This should be connected to a knob or slider on your
# transmitter. It needs to be setup to use the PWM range given by TUNE_CHAN_MIN to TUNE_CHAN_MAX
# 0: Disable                                           11: Chan11
# 5: Chan5                                             12: Chan12
# 6: Chan6                                             13: Chan13
# 7: Chan7                                             14: Chan14
# 8: Chan8                                             15: Chan15
# 9: Chan9                                             16: Chan16
# 10: Chan10
TUNE_CHAN,0

# Transmitter tuning channel maximum pwm
# This sets the PWM upper limit for the tuning channel
# Range: 900 2100
TUNE_CHAN_MAX,2000

# Transmitter tuning channel minimum pwm
# This sets the PWM lower limit for the tuning channel
# Range: 900 2100
TUNE_CHAN_MIN,1000

# Controller error threshold
# This sets the controller error threshold above which an alarm will sound and a message will be sent
# to the GCS to warn of controller instability while tuning. The error is the rms value of the P+D
# corrections in the loop. High values in hover indicate possible instability due to too high PID
# gains or excessively high D to P gain ratios.-1 will disable this message.
# Range: 0 1
TUNE_ERR_THRESH,0.15

# Revert on mode change
# This controls whether tuning values will revert on a flight mode change.
# 0: Disable
# 1: Enable
TUNE_MODE_REVERT,1

# Transmitter tuning parameter or set of parameters
# This sets which parameter or set of parameters will be tuned. Values greater than 100 indicate a set
# of parameters rather than a single parameter. Parameters less than 50 are for QuadPlane vertical
# lift motors only.
# 0: None                    12: RateYawD               24: RatePitchFF            102: Set_RateRoll
# 1: RateRollPI              13: AngleRollP             25: RateRollFF             103: Set_RatePitch
# 2: RateRollP               14: AnglePitchP            26: RateYawFF              104: Set_RateYaw
# 3: RateRollI               15: AngleYawP              50: FixedWingRollP         105: Set_AngleRollPitch
# 4: RateRollD               16: PosXYP                 51: FixedWingRollI         106: Set_VelXY
# 5: RatePitchPI             17: PosZP                  52: FixedWingRollD         107: Set_AccelZ
# 6: RatePitchP              18: VelXYP                 53: FixedWingRollFF        108: Set_RatePitchDP
# 7: RatePitchI              19: VelXYI                 54: FixedWingPitchP        109: Set_RateRollDP
# 8: RatePitchD              20: VelZP                  55: FixedWingPitchI        110: Set_RateYawDP
# 9: RateYawPI               21: AccelZP                56: FixedWingPitchD
# 10: RateYawP               22: AccelZI                57: FixedWingPitchFF
# 11: RateYawI               23: AccelZD                101: Set_RateRollPitch
TUNE_PARAM,0

# Transmitter tuning range
# This sets the range over which tuning will change a parameter. A value of 2 means the tuning
# parameter will go from 0.5 times the start value to 2x the start value over the range of the tuning
# channel
TUNE_RANGE,2

# Transmitter tuning selector channel
# This sets the channel for the transmitter tuning selector switch. This should be a 2 position
# switch, preferably spring loaded. A PWM above 1700 means high, below 1300 means low. If no selector
# is set then you won't be able to switch between parameters during flight or re-center the tuning
# knob
# 0: Disable                                           9: Chan9
# 1: Chan1                                             10: Chan10
# 2: Chan3                                             11: Chan11
# 3: Chan3                                             12: Chan12
# 4: Chan4                                             13: Chan13
# 5: Chan5                                             14: Chan14
# 6: Chan6                                             15: Chan15
# 7: Chan7                                             16: Chan16
# 8: Chan8
TUNE_SELECTOR,0
USE_REV_THRUST,2

# Visual odometry camera connection type
# Visual odometry camera connection type
# RebootRequired: True
# 0: None
# 1: MAVLink
# 2: IntelT265
# 3: VOXL(ModalAI)
VISO_TYPE,0

# Is the Video Transmitter enabled or not
# Toggles the Video Transmitter on and off
# 0: Disable
# 1: Enable
VTX_ENABLE,0
WP_LOITER_RAD,60
WP_MAX_RADIUS,0
WP_RADIUS,90

# Yaw rate enable
# Enable yaw rate controller for aerobatic flight
# 0: Disable
# 1: Enable
YAW_RATE_ENABLE,0

# Yaw damping
# Gain from yaw rate to rudder. Most effective at yaw damping and should be tuned after KFF_RDDRMIX.
# Also disables YAW2SRV_INT if set to 0.
# Range: 0 2
# Increment: 0.25
YAW2SRV_DAMP,0

# Integrator limit
# Limit of yaw integrator gain in centi-degrees of servo travel. Servos are assumed to have +/- 4500
# centi-degrees of travel, so a value of 1500 allows trim of up to 1/3 of servo travel range.
# Range: 0 4500
# Increment: 1
YAW2SRV_IMAX,1500

# Sideslip control integrator
# Integral gain from lateral acceleration error. Effectively trims rudder to eliminate long-term
# sideslip.
# Range: 0 2
# Increment: 0.25
YAW2SRV_INT,0

# Yaw coordination gain
# Gain to the yaw rate required to keep it consistent with the turn rate in a coordinated turn.
# Corrects for yaw tendencies after the turn is established. Increase yaw into the turn by raising.
# Increase yaw out of the turn by decreasing. Values outside of 0.9-1.1 range indicate airspeed
# calibration problems.
# Range: 0.8 1.2
# Increment: 0.05
YAW2SRV_RLL,1

# Sideslip control gain
# Gain from lateral acceleration to demanded yaw rate for aircraft with enough fuselage area to detect
# lateral acceleration and sideslips. Do not enable for flying wings and gliders. Actively coordinates
# flight more than just yaw damping. Set after YAW2SRV_DAMP and YAW2SRV_INT are tuned.
# Range: 0 4
# Increment: 0.25
YAW2SRV_SLIP,0
